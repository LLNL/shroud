// wrapstd_vector_double.h
// This file is generated by Shroud nowrite-version. Do not edit.
// Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
// other Shroud Project Developers.
// See the top-level COPYRIGHT file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//
/**
 * \file wrapstd_vector_double.h
 * \brief Shroud generated wrapper for vector class
 */
// For C users and C++ implementation

#ifndef WRAPSTD_VECTOR_DOUBLE_H
#define WRAPSTD_VECTOR_DOUBLE_H

// typemap
#include "wrapstd_vector_double.h"
#ifdef __cplusplus
#include <cstddef>
#else
#include <stddef.h>
#endif
// shroud
#include "typestemplates.h"

// splicer begin namespace.std.class.vector.CXX_declarations
// splicer end namespace.std.class.vector.CXX_declarations

#ifdef __cplusplus
extern "C" {
#endif

// typedef std::vector<double>::size_type
// splicer begin namespace.std.class.vector.typedef.size_type
typedef size_t TEM_vector_double_size_type;
// splicer end namespace.std.class.vector.typedef.size_type

// splicer begin namespace.std.class.vector.C_declarations
// splicer end namespace.std.class.vector.C_declarations

TEM_vector_double * TEM_vector_double_ctor(TEM_vector_double * SHC_rv);

void TEM_vector_double_dtor(TEM_vector_double * self);

void TEM_vector_double_push_back(TEM_vector_double * self,
    const double * value);

double * TEM_vector_double_at(TEM_vector_double * self,
    TEM_vector_double_size_type n);

#ifdef __cplusplus
}
#endif

#endif  // WRAPSTD_VECTOR_DOUBLE_H
