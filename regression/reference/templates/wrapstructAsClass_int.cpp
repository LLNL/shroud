// wrapstructAsClass_int.cpp
// This file is generated by Shroud nowrite-version. Do not edit.
// Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
// other Shroud Project Developers.
// See the top-level COPYRIGHT file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//

// cxx_header
#include "templates.hpp"
// shroud
#include "wrapstructAsClass_int.h"

// splicer begin class.structAsClass.CXX_definitions
// splicer end class.structAsClass.CXX_definitions

extern "C" {

// splicer begin class.structAsClass.C_definitions
// splicer end class.structAsClass.C_definitions

// ----------------------------------------
// Function:  structAsClass
// Statement: c_ctor_shadow_scalar_capptr
TEM_structAsClass_int * TEM_structAsClass_int_ctor(
    TEM_structAsClass_int * SHC_rv)
{
    // splicer begin class.structAsClass.method.ctor
    structAsClass<int> *SHCXX_rv = new structAsClass<int>();
    SHC_rv->addr = static_cast<void *>(SHCXX_rv);
    SHC_rv->idtor = 3;
    return SHC_rv;
    // splicer end class.structAsClass.method.ctor
}

// ----------------------------------------
// Function:  void set_npts
// Statement: c_subroutine
// ----------------------------------------
// Argument:  int n
// Statement: c_in_native_scalar
void TEM_structAsClass_int_set_npts(TEM_structAsClass_int * self, int n)
{
    structAsClass<int> *SH_this = static_cast<structAsClass<int> *>
        (self->addr);
    // splicer begin class.structAsClass.method.set_npts
    SH_this->set_npts(n);
    // splicer end class.structAsClass.method.set_npts
}

// ----------------------------------------
// Function:  int get_npts
// Statement: c_function_native_scalar
int TEM_structAsClass_int_get_npts(TEM_structAsClass_int * self)
{
    structAsClass<int> *SH_this = static_cast<structAsClass<int> *>
        (self->addr);
    // splicer begin class.structAsClass.method.get_npts
    int SHC_rv = SH_this->get_npts();
    return SHC_rv;
    // splicer end class.structAsClass.method.get_npts
}

// Generated by cxx_template
// ----------------------------------------
// Function:  void set_value
// Statement: c_subroutine
// ----------------------------------------
// Argument:  int v
// Statement: c_in_native_scalar
void TEM_structAsClass_int_set_value(TEM_structAsClass_int * self,
    int v)
{
    structAsClass<int> *SH_this = static_cast<structAsClass<int> *>
        (self->addr);
    // splicer begin class.structAsClass.method.set_value
    SH_this->set_value(v);
    // splicer end class.structAsClass.method.set_value
}

// Generated by cxx_template
// ----------------------------------------
// Function:  int get_value
// Statement: c_function_native_scalar
int TEM_structAsClass_int_get_value(TEM_structAsClass_int * self)
{
    structAsClass<int> *SH_this = static_cast<structAsClass<int> *>
        (self->addr);
    // splicer begin class.structAsClass.method.get_value
    int SHC_rv = SH_this->get_value();
    return SHC_rv;
    // splicer end class.structAsClass.method.get_value
}

}  // extern "C"
