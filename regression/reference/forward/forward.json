{
    "<NOTICE>": "This file is generated by Shroud nowrite-version and is useful for debugging.",
    "library": {
        "class_map": [
            "forward_Class2",
            "forward_Class3"
        ],
        "classes": [
            {
                "<CLASS>": "****************************************",
                "cxx_header": [
                    "header1.hpp",
                    "header2.hpp",
                    "forward.hpp"
                ],
                "name": "Class3",
                "options": {},
                "parse_keyword": "class",
                "scope": "forward::Class3::",
                "typemap_name": "forward::Class3",
                "wrap": {
                    "c": true,
                    "fortran": true,
                    "lua": true,
                    "python": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapClass3.h",
                    "C_impl_filename": "wrapClass3.cpp",
                    "C_name_api": "Class3",
                    "C_name_scope": "Class3_",
                    "C_type_name": "FOR_Class3",
                    "F_derived_name": "class3",
                    "F_name_api": "class3",
                    "F_name_scope": "class3_",
                    "LUA_class_reg": "l_Class3_Reg",
                    "LUA_ctor_name": "Class3",
                    "LUA_metadata": "Class3.metatable",
                    "LUA_name_api": "Class3",
                    "LUA_this_call": "SH_this->self->",
                    "LUA_userdata_member": "self",
                    "LUA_userdata_type": "l_Class3_Type",
                    "LUA_userdata_var": "SH_this",
                    "PY_PyObject": "PY_Class3",
                    "PY_PyTypeObject": "PY_Class3_Type",
                    "PY_capsule_name": "PY_Class3_capsule_name",
                    "PY_from_object_func": "PP_Class3_from_Object",
                    "PY_this_call": "self->obj->",
                    "PY_to_object_func": "PP_Class3_to_Object",
                    "PY_to_object_idtor_func": "PP_Class3_to_Object_idtor",
                    "PY_type_filename": "pyClass3type.cpp",
                    "class_scope": "Class3::",
                    "cxx_class": "Class3",
                    "cxx_type": "Class3",
                    "f_capsule_data_type": "FOR_SHROUD_capsule_data",
                    "file_scope": "Class3",
                    "hnamefunc0": "capsule_data_helper"
                }
            },
            {
                "<CLASS>": "****************************************",
                "cxx_header": [],
                "functions": [
                    {
                        "<FUNCTION>": "0 ****************************************",
                        "_overloaded": true,
                        "ast": {
                            "declarator": {
                                "attrs": {
                                    "_constructor": true,
                                    "_name": "ctor"
                                },
                                "metaattrs": {
                                    "api": "capptr",
                                    "intent": "ctor"
                                },
                                "params": [],
                                "typemap_name": "forward::Class2"
                            },
                            "is_ctor": true,
                            "specifier": [
                                "Class2"
                            ],
                            "typemap_name": "forward::Class2"
                        },
                        "decl": "Class2()",
                        "declgen": "Class2(void)",
                        "name": "ctor",
                        "options": {
                            "F_create_generic": true
                        },
                        "wrap": {
                            "c": true,
                            "f_c": true,
                            "fortran": true,
                            "lua": true,
                            "python": true
                        },
                        "zz_fmtdict": {
                            "C_name": "FOR_Class2_ctor",
                            "C_name_api": "ctor",
                            "C_prototype": "FOR_Class2 * SHC_rv",
                            "C_return_type": "FOR_Class2 *",
                            "F_C_arguments": "SHT_rv",
                            "F_C_call": "c_class2_ctor",
                            "F_C_name": "c_class2_ctor",
                            "F_C_result_clause": "\fresult(SHT_prv)",
                            "F_C_subprogram": "function",
                            "F_arg_c_call": "SHT_rv%cxxmem",
                            "F_arguments": "",
                            "F_name_api": "ctor",
                            "F_name_function": "ctor",
                            "F_name_generic": "class2",
                            "F_name_impl": "class2_ctor",
                            "F_result": "SHT_prv",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "LUA_name": "ctor",
                            "LUA_name_api": "ctor",
                            "LUA_name_impl": "l_Class2_ctor",
                            "PY_name_impl": "PY_Class2_tp_init",
                            "PY_type_impl": "PY_Class2_tp_init",
                            "PY_type_method": "tp_init",
                            "cxx_rv_decl": "forward::Class2 SHCXX_rv",
                            "function_name": "ctor"
                        },
                        "zz_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_type": "FOR_Class2",
                                "c_var": "SHC_rv",
                                "cfi_type": "CFI_type_other",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_type": "forward::Class2",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "1",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "c_ctor_shadow_scalar_capptr",
                                "stmt1": "c_ctor_shadow_scalar_capptr"
                            },
                            "fmtf": {
                                "C_result": "SHT_prv",
                                "F_C_var": "SHT_rv",
                                "c_var": "SHT_rv",
                                "cxx_type": "forward::Class2",
                                "f_c_module_line": "--import--:FOR_SHROUD_capsule_data",
                                "f_capsule_data_type": "FOR_SHROUD_capsule_data",
                                "f_intent": "OUT",
                                "f_type": "type(class2)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "f_ctor_shadow_scalar_capptr",
                                "stmt1": "f_ctor_shadow_scalar_capptr",
                                "stmtc0": "c_ctor_shadow_scalar_capptr",
                                "stmtc1": "c_ctor_shadow_scalar_capptr"
                            },
                            "fmtl": {
                                "c_var": "static_cast<LUAc_constvoid *>(\tSHCXX_rv)",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_var": "SHCXX_rv",
                                "stmt0": "lua_ctor_scalar",
                                "stmt1": "lua_ctor"
                            },
                            "fmtpy": {
                                "PY_build_format": "O",
                                "PY_to_object_idtor_func": "PP_Class2_to_Object_idtor",
                                "PyObject": "PY_Class2",
                                "PyTypeObject": "PY_Class2_Type",
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "ctor_expr": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_nonconst_ptr": "&SHCXX_rv",
                                "cxx_type": "forward::Class2",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": null,
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_default",
                                "stmt1": "py_default",
                                "value_var": "SHValue_rv",
                                "vargs": "SHCXX_rv"
                            }
                        }
                    },
                    {
                        "<FUNCTION>": "1 ****************************************",
                        "ast": {
                            "declarator": {
                                "attrs": {
                                    "_destructor": "Class2",
                                    "_name": "dtor"
                                },
                                "metaattrs": {
                                    "intent": "dtor"
                                },
                                "params": [],
                                "typemap_name": "void"
                            },
                            "is_dtor": "Class2",
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "~Class2()",
                        "declgen": "~Class2(void)",
                        "name": "dtor",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "f_c": true,
                            "fortran": true,
                            "lua": true,
                            "python": true
                        },
                        "zz_fmtdict": {
                            "C_name": "FOR_Class2_dtor",
                            "C_name_api": "dtor",
                            "C_prototype": "FOR_Class2 * self",
                            "C_return_type": "void",
                            "F_C_arguments": "self",
                            "F_C_call": "c_class2_dtor",
                            "F_C_name": "c_class2_dtor",
                            "F_C_result_clause": "",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_api": "dtor",
                            "F_name_function": "dtor",
                            "F_name_generic": "dtor",
                            "F_name_impl": "class2_dtor",
                            "F_subprogram": "subroutine",
                            "LUA_name": "dtor",
                            "LUA_name_api": "dtor",
                            "LUA_name_impl": "l_Class2_dtor",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "dtor",
                            "stmt0": "f_dtor",
                            "stmt1": "f_dtor",
                            "stmtc0": "c_dtor",
                            "stmtc1": "c_dtor"
                        },
                        "zz_fmtresult": {
                            "fmtl": {
                                "stmt0": "lua_dtor_scalar",
                                "stmt1": "lua_dtor"
                            }
                        }
                    },
                    {
                        "<FUNCTION>": "2 ****************************************",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "subroutine"
                                },
                                "name": "func1",
                                "params": [
                                    {
                                        "declarator": {
                                            "attrs": {
                                                "intent": "in"
                                            },
                                            "metaattrs": {
                                                "intent": "in"
                                            },
                                            "name": "arg",
                                            "pointer": [
                                                {
                                                    "ptr": "*"
                                                }
                                            ],
                                            "typemap_name": "tutorial::Class1"
                                        },
                                        "specifier": [
                                            "tutorial::Class1"
                                        ],
                                        "typemap_name": "tutorial::Class1"
                                    }
                                ],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void func1(tutorial::Class1 *arg +intent(in))",
                        "declgen": "void func1(tutorial::Class1 * arg +intent(in))",
                        "name": "func1",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "f_c": true,
                            "fortran": true,
                            "lua": true,
                            "python": true
                        },
                        "zz_fmtargs": {
                            "arg": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_type": "TUT_Class1",
                                    "c_var": "arg",
                                    "cfi_type": "CFI_type_other",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "SHCXX_arg",
                                    "cxx_type": "tutorial::Class1",
                                    "cxx_var": "SHCXX_arg",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "c_in_shadow_*",
                                    "stmt1": "c_in_shadow_*"
                                },
                                "fmtf": {
                                    "F_C_var": "arg",
                                    "c_var": "arg",
                                    "f_c_module_line": "tutorial_mod:SHROUD_class1_capsule",
                                    "f_capsule_data_type": "SHROUD_class1_capsule",
                                    "f_intent": "IN",
                                    "f_type": "type(class1)",
                                    "f_var": "arg",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "f_in_shadow_*",
                                    "stmt1": "f_in_shadow",
                                    "stmtc0": "c_in_shadow_*",
                                    "stmtc1": "c_in_shadow_*"
                                },
                                "fmtl": {
                                    "LUA_index": 1,
                                    "c_deref": " *",
                                    "c_member": "->",
                                    "c_var": "\t(l_Class2_Type *)\t luaL_checkudata(\tL, 1, \"Class2.metatable\")",
                                    "c_var_len": "Larg",
                                    "cxx_member": "->",
                                    "cxx_type": "tutorial::Class1",
                                    "cxx_var": "arg",
                                    "lua_var": "SH_Lua_arg",
                                    "pop_expr": "static_cast<tutorial::Class1 *>\t(\t(l_Class2_Type *)\t luaL_checkudata(\tL, 1, \"Class2.metatable\")->addr)",
                                    "stmt0": "lua_in_shadow_*",
                                    "stmt1": "lua_in_shadow_*"
                                },
                                "fmtpy": {
                                    "PyTypeObject": "PY_Class1_Type",
                                    "array_size": "1",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_type": "TUT_Class1",
                                    "c_var": "arg",
                                    "ctor_expr": "*arg",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "arg",
                                    "cxx_type": "tutorial::Class1",
                                    "cxx_var": "arg",
                                    "data_var": "SHData_arg",
                                    "numpy_type": null,
                                    "py_object": "PyObject",
                                    "py_var": "SHPy_arg",
                                    "size_var": "SHSize_arg",
                                    "stmt0": "py_in_shadow_*",
                                    "stmt1": "py_in_shadow_*",
                                    "value_var": "SHValue_arg"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "C_call_list": "SHCXX_arg",
                            "C_name": "FOR_Class2_func1",
                            "C_name_api": "func1",
                            "C_prototype": "FOR_Class2 * self,\t TUT_Class1 * arg",
                            "C_return_type": "void",
                            "F_C_arguments": "self,\t arg",
                            "F_C_call": "c_class2_func1",
                            "F_C_name": "c_class2_func1",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "obj%cxxmem,\t arg%cxxmem",
                            "F_arguments": "obj,\t arg",
                            "F_name_api": "func1",
                            "F_name_function": "func1",
                            "F_name_generic": "func1",
                            "F_name_impl": "class2_func1",
                            "F_subprogram": "subroutine",
                            "LUA_name": "func1",
                            "LUA_name_api": "func1",
                            "LUA_name_impl": "l_Class2_func1",
                            "PY_name_impl": "PY_func1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "func1",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_subroutine",
                            "stmtc0": "c_subroutine",
                            "stmtc1": "c_subroutine"
                        },
                        "zz_fmtresult": {
                            "fmtl": {
                                "stmt0": "lua_subroutine",
                                "stmt1": "lua_subroutine"
                            }
                        }
                    },
                    {
                        "<FUNCTION>": "3 ****************************************",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "subroutine"
                                },
                                "name": "acceptClass3",
                                "params": [
                                    {
                                        "declarator": {
                                            "attrs": {
                                                "intent": "in"
                                            },
                                            "metaattrs": {
                                                "intent": "in"
                                            },
                                            "name": "arg",
                                            "pointer": [
                                                {
                                                    "ptr": "*"
                                                }
                                            ],
                                            "typemap_name": "forward::Class3"
                                        },
                                        "specifier": [
                                            "Class3"
                                        ],
                                        "typemap_name": "forward::Class3"
                                    }
                                ],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void acceptClass3(Class3 *arg +intent(in))",
                        "declgen": "void acceptClass3(Class3 * arg +intent(in))",
                        "name": "acceptClass3",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "f_c": true,
                            "fortran": true,
                            "lua": true,
                            "python": true
                        },
                        "zz_fmtargs": {
                            "arg": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_type": "FOR_Class3",
                                    "c_var": "arg",
                                    "cfi_type": "CFI_type_other",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "SHCXX_arg",
                                    "cxx_type": "forward::Class3",
                                    "cxx_var": "SHCXX_arg",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "c_in_shadow_*",
                                    "stmt1": "c_in_shadow_*"
                                },
                                "fmtf": {
                                    "F_C_var": "arg",
                                    "c_var": "arg",
                                    "f_c_module_line": "--import--:FOR_SHROUD_capsule_data",
                                    "f_capsule_data_type": "FOR_SHROUD_capsule_data",
                                    "f_intent": "IN",
                                    "f_type": "type(class3)",
                                    "f_var": "arg",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "f_in_shadow_*",
                                    "stmt1": "f_in_shadow",
                                    "stmtc0": "c_in_shadow_*",
                                    "stmtc1": "c_in_shadow_*"
                                },
                                "fmtl": {
                                    "LUA_index": 1,
                                    "c_deref": " *",
                                    "c_member": "->",
                                    "c_var": "\t(l_Class2_Type *)\t luaL_checkudata(\tL, 1, \"Class2.metatable\")",
                                    "c_var_len": "Larg",
                                    "cxx_member": "->",
                                    "cxx_type": "forward::Class3",
                                    "cxx_var": "arg",
                                    "lua_var": "SH_Lua_arg",
                                    "pop_expr": "static_cast<forward::Class3 *>\t(\t(l_Class2_Type *)\t luaL_checkudata(\tL, 1, \"Class2.metatable\")->addr)",
                                    "stmt0": "lua_in_shadow_*",
                                    "stmt1": "lua_in_shadow_*"
                                },
                                "fmtpy": {
                                    "PY_to_object_idtor_func": "PP_Class3_to_Object_idtor",
                                    "PyObject": "PY_Class3",
                                    "PyTypeObject": "PY_Class3_Type",
                                    "array_size": "1",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_type": "FOR_Class3",
                                    "c_var": "arg",
                                    "ctor_expr": "*arg",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "arg",
                                    "cxx_type": "forward::Class3",
                                    "cxx_var": "arg",
                                    "data_var": "SHData_arg",
                                    "numpy_type": null,
                                    "py_object": "PY_Class3",
                                    "py_var": "SHPy_arg",
                                    "size_var": "SHSize_arg",
                                    "stmt0": "py_in_shadow_*",
                                    "stmt1": "py_in_shadow_*",
                                    "value_var": "SHValue_arg"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "C_call_list": "SHCXX_arg",
                            "C_name": "FOR_Class2_acceptClass3",
                            "C_name_api": "acceptClass3",
                            "C_prototype": "FOR_Class2 * self,\t FOR_Class3 * arg",
                            "C_return_type": "void",
                            "F_C_arguments": "self,\t arg",
                            "F_C_call": "c_class2_accept_class3",
                            "F_C_name": "c_class2_accept_class3",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "obj%cxxmem,\t arg%cxxmem",
                            "F_arguments": "obj,\t arg",
                            "F_name_api": "accept_class3",
                            "F_name_function": "accept_class3",
                            "F_name_generic": "accept_class3",
                            "F_name_impl": "class2_accept_class3",
                            "F_subprogram": "subroutine",
                            "LUA_name": "acceptClass3",
                            "LUA_name_api": "acceptClass3",
                            "LUA_name_impl": "l_Class2_acceptClass3",
                            "PY_name_impl": "PY_acceptClass3",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "acceptClass3",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_subroutine",
                            "stmtc0": "c_subroutine",
                            "stmtc1": "c_subroutine"
                        },
                        "zz_fmtresult": {
                            "fmtl": {
                                "stmt0": "lua_subroutine",
                                "stmt1": "lua_subroutine"
                            }
                        }
                    }
                ],
                "name": "Class2",
                "options": {},
                "parse_keyword": "class",
                "scope": "forward::Class2::",
                "typemap_name": "forward::Class2",
                "wrap": {
                    "c": true,
                    "fortran": true,
                    "lua": true,
                    "python": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapClass2.h",
                    "C_impl_filename": "wrapClass2.cpp",
                    "C_name_api": "Class2",
                    "C_name_scope": "Class2_",
                    "C_type_name": "FOR_Class2",
                    "F_derived_name": "class2",
                    "F_name_api": "class2",
                    "F_name_scope": "class2_",
                    "LUA_class_reg": "l_Class2_Reg",
                    "LUA_ctor_name": "Class2",
                    "LUA_metadata": "Class2.metatable",
                    "LUA_name_api": "Class2",
                    "LUA_this_call": "SH_this->self->",
                    "LUA_userdata_member": "self",
                    "LUA_userdata_type": "l_Class2_Type",
                    "LUA_userdata_var": "SH_this",
                    "PY_PyObject": "PY_Class2",
                    "PY_PyTypeObject": "PY_Class2_Type",
                    "PY_capsule_name": "PY_Class2_capsule_name",
                    "PY_from_object_func": "PP_Class2_from_Object",
                    "PY_this_call": "self->obj->",
                    "PY_to_object_func": "PP_Class2_to_Object",
                    "PY_to_object_idtor_func": "PP_Class2_to_Object_idtor",
                    "PY_type_filename": "pyClass2type.cpp",
                    "class_scope": "Class2::",
                    "cxx_class": "Class2",
                    "cxx_type": "Class2",
                    "f_capsule_data_type": "FOR_SHROUD_capsule_data",
                    "file_scope": "Class2",
                    "hnamefunc0": "capsule_data_helper"
                }
            }
        ],
        "copyright": [
            "Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "cxx_header": [
            "forward.hpp"
        ],
        "functions": [
            {
                "<FUNCTION>": "4 ****************************************",
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "intent": "function"
                        },
                        "name": "passStruct1",
                        "params": [
                            {
                                "const": true,
                                "declarator": {
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "arg",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "Cstruct1"
                                },
                                "specifier": [
                                    "Cstruct1"
                                ],
                                "typemap_name": "Cstruct1"
                            }
                        ],
                        "typemap_name": "int"
                    },
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int passStruct1(const Cstruct1 *arg)",
                "declgen": "int passStruct1(const Cstruct1 * arg)",
                "name": "passStruct1",
                "options": {
                    "wrap_lua": false,
                    "wrap_python": false
                },
                "wrap": {
                    "c": true,
                    "f_c": true,
                    "fortran": true
                },
                "zz_fmtargs": {
                    "arg": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_type": "STR_cstruct1",
                            "c_var": "arg",
                            "cfi_type": "CFI_type_other",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "const_cast<Cstruct1 *>\t(SHCXX_arg)",
                            "cxx_type": "Cstruct1",
                            "cxx_var": "SHCXX_arg",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "c_in_struct_*",
                            "stmt1": "c_in_struct"
                        },
                        "fmtf": {
                            "F_C_var": "arg",
                            "c_var": "arg",
                            "f_intent": "IN",
                            "f_kind": "cstruct1",
                            "f_type": "type(cstruct1)",
                            "f_var": "arg",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "f_in_struct_*",
                            "stmt1": "f_default",
                            "stmtc0": "c_in_struct_*",
                            "stmtc1": "c_in_struct"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_call_list": "SHCXX_arg",
                    "C_name": "FOR_passStruct1",
                    "C_name_api": "passStruct1",
                    "C_prototype": "const STR_cstruct1 * arg",
                    "C_return_type": "int",
                    "F_C_arguments": "arg",
                    "F_C_call": "c_pass_struct1",
                    "F_C_name": "c_pass_struct1",
                    "F_C_result_clause": "\fresult(SHT_rv)",
                    "F_C_subprogram": "function",
                    "F_arg_c_call": "arg",
                    "F_arguments": "arg",
                    "F_name_api": "pass_struct1",
                    "F_name_function": "pass_struct1",
                    "F_name_generic": "pass_struct1",
                    "F_name_impl": "pass_struct1",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "cxx_rv_decl": "int SHC_rv",
                    "function_name": "passStruct1"
                },
                "zz_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_get_value": "",
                        "c_type": "int",
                        "c_var": "SHC_rv",
                        "cfi_type": "CFI_type_int",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHC_rv",
                        "cxx_type": "int",
                        "cxx_var": "SHC_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "c_function_native_scalar",
                        "stmt1": "c_function"
                    },
                    "fmtf": {
                        "F_C_var": "SHT_rv",
                        "c_var": "SHT_rv",
                        "cxx_type": "int",
                        "f_intent": "OUT",
                        "f_kind": "C_INT",
                        "f_type": "integer(C_INT)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "f_function_native_scalar",
                        "stmt1": "f_function",
                        "stmtc0": "c_function_native_scalar",
                        "stmtc1": "c_function"
                    }
                }
            }
        ],
        "language": "cxx",
        "scope_file": [
            "forward"
        ],
        "wrap": {
            "c": true,
            "fortran": true,
            "lua": true,
            "python": true
        }
    },
    "symtab": {
        "Cstruct1": "Cstruct1",
        "forward": {
            "Class2": "forward::Class2",
            "Class3": "forward::Class3"
        },
        "tutorial": {
            "Class1": "tutorial::Class1",
            "Class2": "tutorial::Class2"
        }
    },
    "types": {
        "Cstruct1": {
            "base": "struct",
            "c_type": "STR_cstruct1",
            "cxx_header": [
                "struct.hpp"
            ],
            "cxx_type": "Cstruct1",
            "f_derived_type": "cstruct1",
            "f_kind": "cstruct1",
            "f_module": {
                "struct_mod": [
                    "cstruct1"
                ]
            },
            "f_module_name": "struct_mod",
            "f_to_c": "{f_var}",
            "f_type": "type(cstruct1)",
            "flat_name": "Cstruct1",
            "sgroup": "struct",
            "wrap_header": [
                "wrapstruct.h"
            ]
        },
        "forward::Class2": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "PY_PyObject": "PY_Class2",
            "PY_PyTypeObject": "PY_Class2_Type",
            "PY_from_object": "PP_Class2_from_Object",
            "PY_to_object": "PP_Class2_to_Object",
            "PY_to_object_idtor": "PP_Class2_to_Object_idtor",
            "base": "shadow",
            "c_to_cxx": "static_cast<{c_const}forward::Class2 *>\t({c_var}->addr)",
            "c_type": "FOR_Class2",
            "cxx_to_c": "static_cast<{c_const}void *>(\t{cxx_addr}{cxx_var})",
            "cxx_type": "forward::Class2",
            "f_c_module": {
                "--import--": [
                    "FOR_SHROUD_capsule_data"
                ]
            },
            "f_c_module_line": "--import--:FOR_SHROUD_capsule_data",
            "f_c_type": "type(FOR_SHROUD_capsule_data)",
            "f_capsule_data_type": "FOR_SHROUD_capsule_data",
            "f_class": "class(class2)",
            "f_derived_type": "class2",
            "f_module": {
                "forward_mod": [
                    "class2"
                ]
            },
            "f_module_line": "forward_mod:class2",
            "f_module_name": "forward_mod",
            "f_to_c": "{f_var}%cxxmem",
            "f_type": "type(class2)",
            "flat_name": "forward_Class2",
            "idtor": "1",
            "impl_header": [
                "forward.hpp"
            ],
            "sgroup": "shadow",
            "wrap_header": [
                "typesforward.h"
            ]
        },
        "forward::Class3": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "PY_PyObject": "PY_Class3",
            "PY_PyTypeObject": "PY_Class3_Type",
            "PY_from_object": "PP_Class3_from_Object",
            "PY_to_object": "PP_Class3_to_Object",
            "PY_to_object_idtor": "PP_Class3_to_Object_idtor",
            "base": "shadow",
            "c_to_cxx": "static_cast<{c_const}forward::Class3 *>\t({c_var}->addr)",
            "c_type": "FOR_Class3",
            "cxx_to_c": "static_cast<{c_const}void *>(\t{cxx_addr}{cxx_var})",
            "cxx_type": "forward::Class3",
            "f_c_module": {
                "--import--": [
                    "FOR_SHROUD_capsule_data"
                ]
            },
            "f_c_module_line": "--import--:FOR_SHROUD_capsule_data",
            "f_c_type": "type(FOR_SHROUD_capsule_data)",
            "f_capsule_data_type": "FOR_SHROUD_capsule_data",
            "f_class": "class(class3)",
            "f_derived_type": "class3",
            "f_module": {
                "forward_mod": [
                    "class3"
                ]
            },
            "f_module_line": "forward_mod:class3",
            "f_module_name": "forward_mod",
            "f_to_c": "{f_var}%cxxmem",
            "f_type": "type(class3)",
            "flat_name": "forward_Class3",
            "impl_header": [
                "header1.hpp",
                "header2.hpp",
                "forward.hpp"
            ],
            "sgroup": "shadow",
            "wrap_header": [
                "typesforward.h"
            ]
        },
        "tutorial::Class1": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "PY_PyTypeObject": "PY_Class1_Type",
            "base": "shadow",
            "c_to_cxx": "static_cast<{c_const}tutorial::Class1 *>\t({c_var}->addr)",
            "c_type": "TUT_Class1",
            "cxx_to_c": "static_cast<{c_const}void *>(\t{cxx_addr}{cxx_var})",
            "cxx_type": "tutorial::Class1",
            "f_c_module": {
                "tutorial_mod": [
                    "SHROUD_class1_capsule"
                ]
            },
            "f_c_module_line": "tutorial_mod:SHROUD_class1_capsule",
            "f_c_type": "type(SHROUD_class1_capsule)",
            "f_capsule_data_type": "SHROUD_class1_capsule",
            "f_class": "class(class1)",
            "f_derived_type": "class1",
            "f_module": {
                "tutorial_mod": [
                    "class1"
                ]
            },
            "f_module_line": "tutorial_mod:class1",
            "f_module_name": "tutorial_mod",
            "f_to_c": "{f_var}%cxxmem",
            "f_type": "type(class1)",
            "flat_name": "tutorial_Class1",
            "sgroup": "shadow",
            "wrap_header": [
                "wrapClass1.h"
            ]
        },
        "tutorial::Class2": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "base": "shadow",
            "c_to_cxx": "static_cast<{c_const}tutorial::Class2 *>\t({c_var}->addr)",
            "c_type": "CLA_Class2",
            "cxx_to_c": "static_cast<{c_const}void *>(\t{cxx_addr}{cxx_var})",
            "cxx_type": "tutorial::Class2",
            "f_c_module": {
                "classes_mod": [
                    "CLA_SHROUD_capsule_data"
                ]
            },
            "f_c_module_line": "classes_mod:CLA_SHROUD_capsule_data",
            "f_c_type": "type(CLA_SHROUD_capsule_data)",
            "f_capsule_data_type": "CLA_SHROUD_capsule_data",
            "f_class": "class(class2)",
            "f_derived_type": "class2",
            "f_module": {
                "classes_mod": [
                    "class2"
                ]
            },
            "f_module_line": "classes_mod:class2",
            "f_module_name": "classes_mod",
            "f_to_c": "{f_var}%cxxmem",
            "f_type": "type(class2)",
            "flat_name": "tutorial_Class2",
            "sgroup": "shadow",
            "wrap_header": [
                "typesclasses.h"
            ]
        }
    }
}