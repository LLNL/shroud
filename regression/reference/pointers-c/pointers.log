Read yaml pointers.yaml
C c void intargs_in(const int * arg)
C f void intargs_in(const int * arg)
C c void intargs_inout(int * arg)
C f void intargs_inout(int * arg)
C c void intargs_out(int * arg +intent(out))
C f void intargs_out(int * arg +intent(out))
C c void intargs(const int argin +intent(in)+value, int * arginout +intent(inout), int * argout +intent(out))
C f void intargs(const int argin +intent(in)+value, int * arginout +intent(inout), int * argout +intent(out))
C c void cos_doubles(double * in +intent(in)+rank(1), double * out +dimension(size(in))+intent(out), int sizein +implied(size(in))+value)
C f void cos_doubles(double * in +intent(in)+rank(1), double * out +dimension(size(in))+intent(out), int sizein +implied(size(in))+value)
C c void truncate_to_int(double * in +intent(in)+rank(1), int * out +dimension(size(in))+intent(out), int sizein +implied(size(in))+value)
C f void truncate_to_int(double * in +intent(in)+rank(1), int * out +dimension(size(in))+intent(out), int sizein +implied(size(in))+value)
C c void get_values(int * nvalues +intent(OUT), int * values +dimension(3)+intent(out))
C f void get_values(int * nvalues +intent(OUT), int * values +dimension(3)+intent(out))
C c void get_values2(int * arg1 +dimension(3)+intent(out), int * arg2 +dimension(3)+intent(out))
C f void get_values2(int * arg1 +dimension(3)+intent(out), int * arg2 +dimension(3)+intent(out))
C c void iota_dimension(int nvar +value, int * values +dimension(nvar)+intent(out))
C f void iota_dimension(int nvar +value, int * values +dimension(nvar)+intent(out))
C c void Sum(int len +implied(size(values))+value, const int * values +rank(1), int * result +intent(out))
C f void Sum(int len +implied(size(values))+value, const int * values +rank(1), int * result +intent(out))
C c void fillIntArray(int * out +dimension(3)+intent(out))
C f void fillIntArray(int * out +dimension(3)+intent(out))
C c void incrementIntArray(int * array +intent(inout)+rank(1), int sizein +implied(size(array))+value)
C f void incrementIntArray(int * array +intent(inout)+rank(1), int sizein +implied(size(array))+value)
C c void fill_with_zeros(double * x +rank(1), int x_length +implied(size(x))+value)
C f void fill_with_zeros(double * x +rank(1), int x_length +implied(size(x))+value)
C c int accumulate(const int * arr +rank(1), size_t len +implied(size(arr))+value)
C f int accumulate(const int * arr +rank(1), size_t len +implied(size(arr))+value)
C c int acceptCharArrayIn(char * * names +intent(in)+rank(1))
C f int acceptCharArrayIn(char * * names +intent(in)+rank(1))
C c void setGlobalInt(int value +value)
C f void setGlobalInt(int value +value)
C c int sumFixedArray(void)
C f int sumFixedArray(void)
C c void getPtrToScalar(int * * nitems +intent(out))
C f void getPtrToScalar(int * * nitems +intent(out))
C c void getPtrToFixedArray(int * * count +dimension(10)+intent(out))
C f void getPtrToFixedArray(int * * count +dimension(10)+intent(out))
C c void getPtrToDynamicArray(int * * count +dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C f void getPtrToDynamicArray(int * * count +dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C c void getPtrToFuncArray(int * * count +dimension(getLen())+intent(out))
C f void getPtrToFuncArray(int * * count +dimension(getLen())+intent(out))
C c void getPtrToConstScalar(const int * * nitems +intent(out))
C f void getPtrToConstScalar(const int * * nitems +intent(out))
C c void getPtrToFixedConstArray(const int * * count +dimension(10)+intent(out))
C f void getPtrToFixedConstArray(const int * * count +dimension(10)+intent(out))
C c void getPtrToDynamicConstArray(const int * * count +dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C f void getPtrToDynamicConstArray(const int * * count +dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C c void getRawPtrToScalar(int * * nitems +deref(raw)+intent(out))
C f void getRawPtrToScalar(int * * nitems +deref(raw)+intent(out))
C c void getRawPtrToScalarForce(int * * nitems +deref(raw)+intent(out))
C f void getRawPtrToScalarForce(int * * nitems +deref(raw)+intent(out))
C c void getRawPtrToFixedArray(int * * count +deref(raw)+intent(out))
C f void getRawPtrToFixedArray(int * * count +deref(raw)+intent(out))
C c void getRawPtrToFixedArrayForce(int * * count +deref(raw)+intent(out))
C f void getRawPtrToFixedArrayForce(int * * count +deref(raw)+intent(out))
C c void getRawPtrToInt2d(int * * * arg +intent(out))
C f void getRawPtrToInt2d(int * * * arg +intent(out))
C c int checkInt2d(int * * arg +intent(in))
C f int checkInt2d(int * * arg +intent(in))
C c void DimensionIn(const int * arg +dimension(10,20))
C f void DimensionIn(const int * arg +dimension(10,20))
C c void getAllocToFixedArray(int * * count +deref(allocatable)+dimension(10)+intent(out))
C f void getAllocToFixedArray(int * * count +deref(allocatable)+dimension(10)+intent(out))
C c void * returnAddress1(int flag +value)
C f void * returnAddress1(int flag +value)
C c void * returnAddress2(int flag +value)
C f void * returnAddress2(int flag +value)
C c void fetchVoidPtr(void * * addr +intent(out))
C f void fetchVoidPtr(void * * addr +intent(out))
C c void updateVoidPtr(void * * addr +intent(inout))
C f void updateVoidPtr(void * * addr +intent(inout))
C c int VoidPtrArray(void * * addr +rank(1))
C f int VoidPtrArray(void * * addr +rank(1))
C c int * returnIntPtrToScalar(void)
C f int * returnIntPtrToScalar(void)
C c int * returnIntPtrToFixedArray(void) +dimension(10)
C f int * returnIntPtrToFixedArray(void) +dimension(10)
C c const int * returnIntPtrToConstScalar(void)
C f const int * returnIntPtrToConstScalar(void)
C c const int * returnIntPtrToFixedConstArray(void) +dimension(10)
C f const int * returnIntPtrToFixedConstArray(void) +dimension(10)
C c int * returnIntScalar(void) +deref(scalar)
C f int * returnIntScalar(void) +deref(scalar)
C c int * returnIntRaw(void) +deref(raw)
C f int * returnIntRaw(void) +deref(raw)
C c int * returnIntRawWithArgs(const char * name) +deref(raw)
C f int * returnIntRawWithArgs(const char * name) +deref(raw)
C c int * * returnRawPtrToInt2d(void)
C f int * * returnRawPtrToInt2d(void)
C c int * returnIntAllocToFixedArray(void) +deref(allocatable)+dimension(10)
C f int * returnIntAllocToFixedArray(void) +deref(allocatable)+dimension(10)
Close wrappointers.h
Close wrappointers.c
Fortran void intargs_in(const int * arg)
Fortran void intargs_inout(int * arg)
Fortran void intargs_out(int * arg +intent(out))
Fortran void intargs(const int argin +intent(in)+value, int * arginout +intent(inout), int * argout +intent(out))
Fortran void cos_doubles(double * in +intent(in)+rank(1), double * out +dimension(size(in))+intent(out), int sizein +implied(size(in))+value)
Fortran void truncate_to_int(double * in +intent(in)+rank(1), int * out +dimension(size(in))+intent(out), int sizein +implied(size(in))+value)
Fortran void get_values(int * nvalues +intent(OUT), int * values +dimension(3)+intent(out))
Fortran void get_values2(int * arg1 +dimension(3)+intent(out), int * arg2 +dimension(3)+intent(out))
Fortran void iota_dimension(int nvar +value, int * values +dimension(nvar)+intent(out))
Fortran void Sum(int len +implied(size(values))+value, const int * values +rank(1), int * result +intent(out))
Fortran void fillIntArray(int * out +dimension(3)+intent(out))
Fortran void incrementIntArray(int * array +intent(inout)+rank(1), int sizein +implied(size(array))+value)
Fortran void fill_with_zeros(double * x +rank(1), int x_length +implied(size(x))+value)
Fortran int accumulate(const int * arr +rank(1), size_t len +implied(size(arr))+value)
Fortran int acceptCharArrayIn(char * * names +intent(in)+rank(1))
Fortran void setGlobalInt(int value +value)
Fortran int sumFixedArray(void)
Fortran void getPtrToScalar(int * * nitems +intent(out))
Fortran void getPtrToFixedArray(int * * count +dimension(10)+intent(out))
Fortran void getPtrToDynamicArray(int * * count +dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
Fortran void getPtrToFuncArray(int * * count +dimension(getLen())+intent(out))
Fortran void getPtrToConstScalar(const int * * nitems +intent(out))
Fortran void getPtrToFixedConstArray(const int * * count +dimension(10)+intent(out))
Fortran void getPtrToDynamicConstArray(const int * * count +dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
Fortran void getRawPtrToScalar(int * * nitems +deref(raw)+intent(out))
Fortran void getRawPtrToScalarForce(int * * nitems +deref(raw)+intent(out))
Fortran void getRawPtrToFixedArray(int * * count +deref(raw)+intent(out))
Fortran void getRawPtrToFixedArrayForce(int * * count +deref(raw)+intent(out))
Fortran void getRawPtrToInt2d(int * * * arg +intent(out))
Fortran int checkInt2d(int * * arg +intent(in))
Fortran void DimensionIn(const int * arg +dimension(10,20))
Fortran void getAllocToFixedArray(int * * count +deref(allocatable)+dimension(10)+intent(out))
Fortran void * returnAddress1(int flag +value)
Fortran void * returnAddress2(int flag +value)
Fortran void fetchVoidPtr(void * * addr +intent(out))
Fortran void updateVoidPtr(void * * addr +intent(inout))
Fortran int VoidPtrArray(void * * addr +rank(1))
Fortran int * returnIntPtrToScalar(void)
Fortran int * returnIntPtrToFixedArray(void) +dimension(10)
Fortran const int * returnIntPtrToConstScalar(void)
Fortran const int * returnIntPtrToFixedConstArray(void) +dimension(10)
Fortran int * returnIntScalar(void) +deref(scalar)
Fortran int * returnIntRaw(void) +deref(raw)
Fortran int * returnIntRawWithArgs(const char * name) +deref(raw)
Fortran int * * returnRawPtrToInt2d(void)
Fortran int * returnIntAllocToFixedArray(void) +deref(allocatable)+dimension(10)
C-interface f void intargs_in(const int * arg)
C-interface f void intargs_inout(int * arg)
C-interface f void intargs_out(int * arg +intent(out))
C-interface f void intargs(const int argin +intent(in)+value, int * arginout +intent(inout), int * argout +intent(out))
C-interface f void cos_doubles(double * in +intent(in)+rank(1), double * out +dimension(size(in))+intent(out), int sizein +implied(size(in))+value)
C-interface f void truncate_to_int(double * in +intent(in)+rank(1), int * out +dimension(size(in))+intent(out), int sizein +implied(size(in))+value)
C-interface f void get_values(int * nvalues +intent(OUT), int * values +dimension(3)+intent(out))
C-interface f void get_values2(int * arg1 +dimension(3)+intent(out), int * arg2 +dimension(3)+intent(out))
C-interface f void iota_dimension(int nvar +value, int * values +dimension(nvar)+intent(out))
C-interface f void Sum(int len +implied(size(values))+value, const int * values +rank(1), int * result +intent(out))
C-interface f void fillIntArray(int * out +dimension(3)+intent(out))
C-interface f void incrementIntArray(int * array +intent(inout)+rank(1), int sizein +implied(size(array))+value)
C-interface f void fill_with_zeros(double * x +rank(1), int x_length +implied(size(x))+value)
C-interface f int accumulate(const int * arr +rank(1), size_t len +implied(size(arr))+value)
C-interface c int acceptCharArrayIn(char * * names +intent(in)+rank(1))
C-interface f int acceptCharArrayIn(char * * names +intent(in)+rank(1))
C-interface f void setGlobalInt(int value +value)
C-interface f int sumFixedArray(void)
C-interface c void getPtrToScalar(int * * nitems +intent(out))
C-interface f void getPtrToScalar(int * * nitems +intent(out))
C-interface c void getPtrToFixedArray(int * * count +dimension(10)+intent(out))
C-interface f void getPtrToFixedArray(int * * count +dimension(10)+intent(out))
C-interface c void getPtrToDynamicArray(int * * count +dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C-interface f void getPtrToDynamicArray(int * * count +dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C-interface c void getPtrToFuncArray(int * * count +dimension(getLen())+intent(out))
C-interface f void getPtrToFuncArray(int * * count +dimension(getLen())+intent(out))
C-interface c void getPtrToConstScalar(const int * * nitems +intent(out))
C-interface f void getPtrToConstScalar(const int * * nitems +intent(out))
C-interface c void getPtrToFixedConstArray(const int * * count +dimension(10)+intent(out))
C-interface f void getPtrToFixedConstArray(const int * * count +dimension(10)+intent(out))
C-interface c void getPtrToDynamicConstArray(const int * * count +dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C-interface f void getPtrToDynamicConstArray(const int * * count +dimension(ncount)+intent(out), int * ncount +hidden+intent(out))
C-interface f void getRawPtrToScalar(int * * nitems +deref(raw)+intent(out))
C-interface f void getRawPtrToScalarForce(int * * nitems +deref(raw)+intent(out))
C-interface f void getRawPtrToFixedArray(int * * count +deref(raw)+intent(out))
C-interface f void getRawPtrToFixedArrayForce(int * * count +deref(raw)+intent(out))
C-interface f void getRawPtrToInt2d(int * * * arg +intent(out))
C-interface f int checkInt2d(int * * arg +intent(in))
C-interface f void DimensionIn(const int * arg +dimension(10,20))
C-interface c void getAllocToFixedArray(int * * count +deref(allocatable)+dimension(10)+intent(out))
C-interface f void getAllocToFixedArray(int * * count +deref(allocatable)+dimension(10)+intent(out))
C-interface f void * returnAddress1(int flag +value)
C-interface f void * returnAddress2(int flag +value)
C-interface f void fetchVoidPtr(void * * addr +intent(out))
C-interface f void updateVoidPtr(void * * addr +intent(inout))
C-interface f int VoidPtrArray(void * * addr +rank(1))
C-interface f int * returnIntPtrToScalar(void)
C-interface c int * returnIntPtrToScalar(void)
C-interface c int * returnIntPtrToFixedArray(void) +dimension(10)
C-interface f int * returnIntPtrToFixedArray(void) +dimension(10)
C-interface f const int * returnIntPtrToConstScalar(void)
C-interface c const int * returnIntPtrToConstScalar(void)
C-interface c const int * returnIntPtrToFixedConstArray(void) +dimension(10)
C-interface f const int * returnIntPtrToFixedConstArray(void) +dimension(10)
C-interface f int * returnIntScalar(void) +deref(scalar)
C-interface c int * returnIntScalar(void) +deref(scalar)
C-interface f int * returnIntRaw(void) +deref(raw)
C-interface f int * returnIntRawWithArgs(const char * name) +deref(raw)
C-interface f int * * returnRawPtrToInt2d(void)
C-interface c int * returnIntAllocToFixedArray(void) +deref(allocatable)+dimension(10)
C-interface f int * returnIntAllocToFixedArray(void) +deref(allocatable)+dimension(10)
Close wrapfpointers.f
Close utilpointers.c
Close typespointers.h
