{
    "__NOTICE__": "This file is generated by Shroud 0.11.0 and is useful for debugging.",
    "library": {
        "classes": [
            {
                "cxx_header": [],
                "fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapUser1.h",
                    "C_impl_filename": "wrapUser1.cpp",
                    "C_name_scope": "User1_",
                    "C_type_name": "PRE_User1",
                    "F_capsule_data_type": "SHROUD_user1_capsule",
                    "F_derived_name": "user1",
                    "F_name_scope": "user1_",
                    "PY_PyObject": "PY_User1",
                    "PY_PyTypeObject": "PY_User1_Type",
                    "PY_capsule_name": "PY_User1_capsule_name",
                    "PY_from_object_func": "PP_User1_from_Object",
                    "PY_this_call": "self->obj->",
                    "PY_to_object_func": "PP_User1_to_Object",
                    "PY_to_object_idtor_func": "PP_User1_to_Object_idtor",
                    "PY_type_filename": "pyUser1type.cpp",
                    "class_scope": "User1::",
                    "cxx_class": "User1",
                    "cxx_type": "User1",
                    "file_scope": "User1"
                },
                "functions": [
                    {
                        "ast": {
                            "declarator": {
                                "name": "method1",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void method1()",
                        "declgen": "void method1()",
                        "fmtdict": {
                            "C_name": "PRE_User1_method1",
                            "C_prototype": "PRE_User1 * self",
                            "C_return_type": "void",
                            "F_C_call": "c_user1_method1",
                            "F_C_name": "c_user1_method1",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "method1",
                            "F_name_generic": "method1",
                            "F_name_impl": "user1_method1",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_method1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "function_name": "method1",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "method1"
                        },
                        "options": {}
                    },
                    {
                        "ast": {
                            "declarator": {
                                "name": "method2",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void method2()",
                        "declgen": "void method2()",
                        "fmtdict": {
                            "C_name": "PRE_User1_method2",
                            "C_prototype": "PRE_User1 * self",
                            "C_return_type": "void",
                            "F_C_call": "c_user1_method2",
                            "F_C_name": "c_user1_method2",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "method2",
                            "F_name_generic": "method2",
                            "F_name_impl": "user1_method2",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_method2",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "function_name": "method2",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "method2"
                        },
                        "options": {}
                    },
                    {
                        "_generated": "has_default_arg",
                        "_overloaded": true,
                        "ast": {
                            "declarator": {
                                "name": "method3def",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void method3def(int i=0)",
                        "declgen": "void method3def()",
                        "fmtdict": {
                            "C_name": "PRE_User1_method3def_0",
                            "C_prototype": "PRE_User1 * self",
                            "C_return_type": "void",
                            "F_C_call": "c_user1_method3def_0",
                            "F_C_name": "c_user1_method3def_0",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "method3def_0",
                            "F_name_generic": "method3def",
                            "F_name_impl": "user1_method3def_0",
                            "F_subprogram": "subroutine",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "function_name": "method3def",
                            "function_suffix": "_0",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "method3def"
                        },
                        "options": {
                            "wrap_c": true,
                            "wrap_fortran": true,
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    },
                    {
                        "_default_funcs": [
                            3
                        ],
                        "_fmtargs": {
                            "i": {
                                "fmtc": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_var": "i",
                                    "capsule_addr": "base",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_type": "int",
                                    "cxx_var": "i",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_scalar_in",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_i",
                                    "c_var": "i",
                                    "f_intent": "IN",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "i",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "f_native_scalar_in",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_native_scalar_in",
                                    "stmtc1": "c_default"
                                },
                                "fmtpy": {
                                    "c_const": "",
                                    "c_decl": "int i",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "i",
                                    "cxx_addr": "&",
                                    "cxx_decl": "int i",
                                    "cxx_member": ".",
                                    "cxx_type": "int",
                                    "cxx_var": "i",
                                    "data_var": "SHData_i",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_i",
                                    "size_var": "SHSize_i",
                                    "stmt0": "py_native_scalar_in",
                                    "stmt1": "py_default"
                                }
                            }
                        },
                        "_has_default_arg": true,
                        "_nargs": [
                            0,
                            1
                        ],
                        "_overloaded": true,
                        "ast": {
                            "declarator": {
                                "name": "method3def",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "in",
                                        "value": true
                                    },
                                    "declarator": {
                                        "name": "i",
                                        "pointer": []
                                    },
                                    "init": 0,
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void method3def(int i=0)",
                        "declgen": "void method3def(int i=0 +intent(in)+value)",
                        "fmtdict": {
                            "C_call_list": "i",
                            "C_name": "PRE_User1_method3def_1",
                            "C_prototype": "PRE_User1 * self,\t int i",
                            "C_return_type": "void",
                            "F_C_call": "c_user1_method3def_1",
                            "F_C_name": "c_user1_method3def_1",
                            "F_arg_c_call": "obj%cxxmem,\t i",
                            "F_arguments": "obj,\t i",
                            "F_name_function": "method3def_1",
                            "F_name_generic": "method3def",
                            "F_name_impl": "user1_method3def_1",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_method3def_1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "function_name": "method3def",
                            "function_suffix": "_1",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "method3def"
                        },
                        "options": {}
                    }
                ],
                "name": "User1",
                "options": {},
                "scope": "User1::",
                "typemap_name": "User1"
            },
            {
                "cxx_header": [
                    "User2.hpp"
                ],
                "fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapUser2.h",
                    "C_impl_filename": "wrapUser2.cpp",
                    "C_name_scope": "User2_",
                    "C_type_name": "PRE_User2",
                    "F_capsule_data_type": "SHROUD_user2_capsule",
                    "F_derived_name": "user2",
                    "F_name_scope": "user2_",
                    "PY_PyObject": "PY_User2",
                    "PY_PyTypeObject": "PY_User2_Type",
                    "PY_capsule_name": "PY_User2_capsule_name",
                    "PY_from_object_func": "PP_User2_from_Object",
                    "PY_this_call": "self->obj->",
                    "PY_to_object_func": "PP_User2_to_Object",
                    "PY_to_object_idtor_func": "PP_User2_to_Object_idtor",
                    "PY_type_filename": "pyUser2type.cpp",
                    "class_scope": "User2::",
                    "cxx_class": "User2",
                    "cxx_type": "User2",
                    "file_scope": "User2"
                },
                "functions": [
                    {
                        "_overloaded": true,
                        "ast": {
                            "declarator": {
                                "name": "exfunc",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void exfunc()",
                        "declgen": "void exfunc()",
                        "fmtdict": {
                            "C_name": "PRE_User2_exfunc_0",
                            "C_prototype": "PRE_User2 * self",
                            "C_return_type": "void",
                            "F_C_call": "c_user2_exfunc_0",
                            "F_C_name": "c_user2_exfunc_0",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "exfunc_0",
                            "F_name_generic": "exfunc",
                            "F_name_impl": "user2_exfunc_0",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_exfunc_0",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "function_name": "exfunc",
                            "function_suffix": "_0",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "exfunc"
                        },
                        "options": {}
                    },
                    {
                        "_fmtargs": {
                            "flag": {
                                "fmtc": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_var": "flag",
                                    "capsule_addr": "base",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_type": "int",
                                    "cxx_var": "flag",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_scalar_in",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_flag",
                                    "c_var": "flag",
                                    "f_intent": "IN",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "flag",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "f_native_scalar_in",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_native_scalar_in",
                                    "stmtc1": "c_default"
                                },
                                "fmtpy": {
                                    "c_const": "",
                                    "c_decl": "int flag",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "flag",
                                    "cxx_addr": "&",
                                    "cxx_decl": "int flag",
                                    "cxx_member": ".",
                                    "cxx_type": "int",
                                    "cxx_var": "flag",
                                    "data_var": "SHData_flag",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_flag",
                                    "size_var": "SHSize_flag",
                                    "stmt0": "py_native_scalar_in",
                                    "stmt1": "py_default"
                                }
                            }
                        },
                        "_overloaded": true,
                        "ast": {
                            "declarator": {
                                "name": "exfunc",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "in",
                                        "value": true
                                    },
                                    "declarator": {
                                        "name": "flag",
                                        "pointer": []
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void exfunc(int flag)",
                        "declgen": "void exfunc(int flag +intent(in)+value)",
                        "fmtdict": {
                            "C_call_list": "flag",
                            "C_name": "PRE_User2_exfunc_1",
                            "C_prototype": "PRE_User2 * self,\t int flag",
                            "C_return_type": "void",
                            "F_C_call": "c_user2_exfunc_1",
                            "F_C_name": "c_user2_exfunc_1",
                            "F_arg_c_call": "obj%cxxmem,\t flag",
                            "F_arguments": "obj,\t flag",
                            "F_name_function": "exfunc_1",
                            "F_name_generic": "exfunc",
                            "F_name_impl": "user2_exfunc_1",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_exfunc_1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "function_name": "exfunc",
                            "function_suffix": "_1",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "exfunc"
                        },
                        "options": {}
                    }
                ],
                "name": "User2",
                "options": {},
                "scope": "User2::",
                "typemap_name": "User2"
            }
        ],
        "copyright": [
            "Copyright (c) 2017-2020, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "cxx_header": [
            "preprocess.hpp"
        ],
        "language": "cxx",
        "scope_file": [
            "preprocess"
        ]
    }
}