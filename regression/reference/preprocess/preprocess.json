{
    "<NOTICE>": "This file is generated by Shroud nowrite-version and is useful for debugging.",
    "library": {
        "class_map": [
            "User1",
            "User2"
        ],
        "classes": [
            {
                "<CLASS>": "User1 ****************************************",
                "cxx_header": [],
                "functions": [
                    {
                        "<FUNCTION>": "method1  0 ****************************************",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "subroutine"
                                },
                                "name": "method1",
                                "params": [],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void method1()",
                        "declgen": "void method1(void)",
                        "name": "method1",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "fortran": true,
                            "python": true
                        },
                        "zz_bind": {
                            "c": {
                                "+result": {
                                    "stmt": "c_subroutine"
                                }
                            },
                            "f": {
                                "+result": {
                                    "stmt": "f_subroutine"
                                }
                            }
                        },
                        "zz_fmtargs": {
                            "+result": {
                                "fmtc": {
                                    "C_prototype": "PRE_User1 * self",
                                    "C_return_type": "void",
                                    "stmt_name": "c_subroutine"
                                },
                                "fmtf": {
                                    "C_prototype": "PRE_User1 * self",
                                    "C_return_type": "void",
                                    "F_C_arguments": "self",
                                    "F_C_call": "c_user1_method1",
                                    "F_C_subprogram": "subroutine",
                                    "F_arg_c_call": "obj%cxxmem",
                                    "F_arguments": "obj",
                                    "F_subprogram": "subroutine",
                                    "stmt_name": "f_subroutine"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "C_name": "PRE_User1_method1",
                            "C_name_api": "method1",
                            "F_C_name": "c_user1_method1",
                            "F_name_api": "method1",
                            "F_name_function": "method1",
                            "F_name_generic": "method1",
                            "F_name_impl": "user1_method1",
                            "PY_name_impl": "PY_method1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "method1"
                        }
                    },
                    {
                        "<FUNCTION>": "method2  1 ****************************************",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "subroutine"
                                },
                                "name": "method2",
                                "params": [],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void method2()",
                        "declgen": "void method2(void)",
                        "name": "method2",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "fortran": true,
                            "python": true
                        },
                        "zz_bind": {
                            "c": {
                                "+result": {
                                    "stmt": "c_subroutine"
                                }
                            },
                            "f": {
                                "+result": {
                                    "stmt": "f_subroutine"
                                }
                            }
                        },
                        "zz_fmtargs": {
                            "+result": {
                                "fmtc": {
                                    "C_prototype": "PRE_User1 * self",
                                    "C_return_type": "void",
                                    "stmt_name": "c_subroutine"
                                },
                                "fmtf": {
                                    "C_prototype": "PRE_User1 * self",
                                    "C_return_type": "void",
                                    "F_C_arguments": "self",
                                    "F_C_call": "c_user1_method2",
                                    "F_C_subprogram": "subroutine",
                                    "F_arg_c_call": "obj%cxxmem",
                                    "F_arguments": "obj",
                                    "F_subprogram": "subroutine",
                                    "stmt_name": "f_subroutine"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "C_name": "PRE_User1_method2",
                            "C_name_api": "method2",
                            "F_C_name": "c_user1_method2",
                            "F_name_api": "method2",
                            "F_name_function": "method2",
                            "F_name_generic": "method2",
                            "F_name_impl": "user1_method2",
                            "PY_name_impl": "PY_method2",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "method2"
                        }
                    },
                    {
                        "<FUNCTION>": "method3def  3 ****************************************",
                        "_generated": "has_default_arg",
                        "_generated_path": [
                            "has_default_arg"
                        ],
                        "_orig_node_index": 2,
                        "_overloaded": true,
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "subroutine"
                                },
                                "name": "method3def",
                                "params": [],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void method3def(int i=0)",
                        "declgen": "void method3def(void)",
                        "name": "method3def",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_bind": {
                            "c": {
                                "+result": {
                                    "stmt": "c_subroutine"
                                },
                                "i": {
                                    "stmt": "c_in_native_scalar"
                                }
                            },
                            "f": {
                                "+result": {
                                    "stmt": "f_subroutine"
                                },
                                "i": {
                                    "stmt": "f_in_native_scalar"
                                }
                            }
                        },
                        "zz_fmtargs": {
                            "+result": {
                                "fmtc": {
                                    "C_prototype": "PRE_User1 * self",
                                    "C_return_type": "void",
                                    "stmt_name": "c_subroutine"
                                },
                                "fmtf": {
                                    "C_prototype": "PRE_User1 * self",
                                    "C_return_type": "void",
                                    "F_C_arguments": "self",
                                    "F_C_call": "c_user1_method3def_0",
                                    "F_C_subprogram": "subroutine",
                                    "F_arg_c_call": "obj%cxxmem",
                                    "F_arguments": "obj",
                                    "F_subprogram": "subroutine",
                                    "stmt_name": "f_subroutine"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "C_name": "PRE_User1_method3def_0",
                            "C_name_api": "method3def",
                            "F_C_name": "c_user1_method3def_0",
                            "F_name_api": "method3def",
                            "F_name_function": "method3def_0",
                            "F_name_generic": "method3def",
                            "F_name_impl": "user1_method3def_0",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "method3def",
                            "function_suffix": "_0"
                        }
                    },
                    {
                        "<FUNCTION>": "method3def  2 ****************************************",
                        "_default_funcs": [
                            3
                        ],
                        "_has_default_arg": true,
                        "_nargs": [
                            0,
                            1
                        ],
                        "_overloaded": true,
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "subroutine"
                                },
                                "name": "method3def",
                                "params": [
                                    {
                                        "declarator": {
                                            "attrs": {
                                                "value": true
                                            },
                                            "init": 0,
                                            "metaattrs": {
                                                "intent": "in"
                                            },
                                            "name": "i",
                                            "typemap_name": "int"
                                        },
                                        "specifier": [
                                            "int"
                                        ],
                                        "typemap_name": "int"
                                    }
                                ],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void method3def(int i=0)",
                        "declgen": "void method3def(int i=0 +value)",
                        "name": "method3def",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "fortran": true,
                            "python": true
                        },
                        "zz_bind": {
                            "c": {
                                "+result": {
                                    "stmt": "c_subroutine"
                                },
                                "i": {
                                    "stmt": "c_in_native_scalar"
                                }
                            },
                            "f": {
                                "+result": {
                                    "stmt": "f_subroutine"
                                },
                                "i": {
                                    "stmt": "f_in_native_scalar"
                                }
                            }
                        },
                        "zz_fmtargs": {
                            "+result": {
                                "fmtc": {
                                    "C_call_list": "i",
                                    "C_prototype": "PRE_User1 * self,\t int i",
                                    "C_return_type": "void",
                                    "stmt_name": "c_subroutine"
                                },
                                "fmtf": {
                                    "C_call_list": "i",
                                    "C_prototype": "PRE_User1 * self,\t int i",
                                    "C_return_type": "void",
                                    "F_C_arguments": "self,\t i",
                                    "F_C_call": "c_user1_method3def_1",
                                    "F_C_subprogram": "subroutine",
                                    "F_arg_c_call": "obj%cxxmem,\t i",
                                    "F_arguments": "obj,\t i",
                                    "F_subprogram": "subroutine",
                                    "stmt_name": "f_subroutine"
                                }
                            },
                            "i": {
                                "fmtc": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_type": "int",
                                    "c_var": "i",
                                    "cfi_type": "CFI_type_int",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&i",
                                    "cxx_type": "int",
                                    "cxx_var": "i",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt_name": "c_in_native_scalar"
                                },
                                "fmtf": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_type": "int",
                                    "c_var": "i",
                                    "cfi_type": "CFI_type_int",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&i",
                                    "cxx_type": "int",
                                    "cxx_var": "i",
                                    "f_intent": "IN",
                                    "f_kind": "C_INT",
                                    "f_type": "integer(C_INT)",
                                    "f_type_module": "iso_c_binding",
                                    "f_var": "i",
                                    "fc_var": "i",
                                    "i_var": "i",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt_name": "f_in_native_scalar"
                                },
                                "fmtpy": {
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "i",
                                    "ctor_expr": "i",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&i",
                                    "cxx_type": "int",
                                    "cxx_var": "i",
                                    "data_var": "SHData_i",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_i",
                                    "size_var": "SHSize_i",
                                    "stmt": "py_in_native_scalar",
                                    "value_var": "SHValue_i"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "C_name": "PRE_User1_method3def_1",
                            "C_name_api": "method3def",
                            "F_C_name": "c_user1_method3def_1",
                            "F_name_api": "method3def",
                            "F_name_function": "method3def_1",
                            "F_name_generic": "method3def",
                            "F_name_impl": "user1_method3def_1",
                            "PY_cleanup_decref": "Py_XDECREF",
                            "PY_name_impl": "PY_method3def_1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "method3def",
                            "function_suffix": "_1"
                        }
                    }
                ],
                "name": "User1",
                "options": {},
                "parse_keyword": "class",
                "scope": "User1::",
                "typemap_name": "User1",
                "wrap": {
                    "c": true,
                    "fortran": true,
                    "python": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapUser1.h",
                    "C_impl_filename": "wrapUser1.cpp",
                    "C_name_api": "User1",
                    "C_name_scope": "User1_",
                    "C_type_name": "PRE_User1",
                    "F_derived_name": "user1",
                    "F_name_api": "user1",
                    "F_name_scope": "user1_",
                    "PY_PyObject": "PY_User1",
                    "PY_PyTypeObject": "PY_User1_Type",
                    "PY_capsule_name": "PY_User1_capsule_name",
                    "PY_from_object_func": "PP_User1_from_Object",
                    "PY_this_call": "self->obj->",
                    "PY_to_object_func": "PP_User1_to_Object",
                    "PY_to_object_idtor_func": "PP_User1_to_Object_idtor",
                    "PY_type_filename": "pyUser1type.cpp",
                    "class_scope": "User1::",
                    "cxx_class": "User1",
                    "cxx_type": "User1",
                    "f_capsule_data_type": "PRE_SHROUD_capsule_data",
                    "f_helper_capsule_data_helper": "PRE_SHROUD_capsule_data",
                    "file_scope": "User1"
                }
            },
            {
                "<CLASS>": "User2 ****************************************",
                "cxx_header": [
                    "User2.hpp"
                ],
                "functions": [
                    {
                        "<FUNCTION>": "exfunc  4 ****************************************",
                        "_overloaded": true,
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "subroutine"
                                },
                                "name": "exfunc",
                                "params": [],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void exfunc()",
                        "declgen": "void exfunc(void)",
                        "name": "exfunc",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "fortran": true,
                            "python": true
                        },
                        "zz_bind": {
                            "c": {
                                "+result": {
                                    "stmt": "c_subroutine"
                                }
                            },
                            "f": {
                                "+result": {
                                    "stmt": "f_subroutine"
                                }
                            }
                        },
                        "zz_fmtargs": {
                            "+result": {
                                "fmtc": {
                                    "C_prototype": "PRE_User2 * self",
                                    "C_return_type": "void",
                                    "stmt_name": "c_subroutine"
                                },
                                "fmtf": {
                                    "C_prototype": "PRE_User2 * self",
                                    "C_return_type": "void",
                                    "F_C_arguments": "self",
                                    "F_C_call": "c_user2_exfunc_0",
                                    "F_C_subprogram": "subroutine",
                                    "F_arg_c_call": "obj%cxxmem",
                                    "F_arguments": "obj",
                                    "F_subprogram": "subroutine",
                                    "stmt_name": "f_subroutine"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "C_name": "PRE_User2_exfunc_0",
                            "C_name_api": "exfunc",
                            "F_C_name": "c_user2_exfunc_0",
                            "F_name_api": "exfunc",
                            "F_name_function": "exfunc_0",
                            "F_name_generic": "exfunc",
                            "F_name_impl": "user2_exfunc_0",
                            "PY_name_impl": "PY_exfunc_0",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "exfunc",
                            "function_suffix": "_0"
                        }
                    },
                    {
                        "<FUNCTION>": "exfunc  5 ****************************************",
                        "_overloaded": true,
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "subroutine"
                                },
                                "name": "exfunc",
                                "params": [
                                    {
                                        "declarator": {
                                            "attrs": {
                                                "value": true
                                            },
                                            "metaattrs": {
                                                "intent": "in"
                                            },
                                            "name": "flag",
                                            "typemap_name": "int"
                                        },
                                        "specifier": [
                                            "int"
                                        ],
                                        "typemap_name": "int"
                                    }
                                ],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void exfunc(int flag)",
                        "declgen": "void exfunc(int flag +value)",
                        "name": "exfunc",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "fortran": true,
                            "python": true
                        },
                        "zz_bind": {
                            "c": {
                                "+result": {
                                    "stmt": "c_subroutine"
                                },
                                "flag": {
                                    "stmt": "c_in_native_scalar"
                                }
                            },
                            "f": {
                                "+result": {
                                    "stmt": "f_subroutine"
                                },
                                "flag": {
                                    "stmt": "f_in_native_scalar"
                                }
                            }
                        },
                        "zz_fmtargs": {
                            "+result": {
                                "fmtc": {
                                    "C_call_list": "flag",
                                    "C_prototype": "PRE_User2 * self,\t int flag",
                                    "C_return_type": "void",
                                    "stmt_name": "c_subroutine"
                                },
                                "fmtf": {
                                    "C_call_list": "flag",
                                    "C_prototype": "PRE_User2 * self,\t int flag",
                                    "C_return_type": "void",
                                    "F_C_arguments": "self,\t flag",
                                    "F_C_call": "c_user2_exfunc_1",
                                    "F_C_subprogram": "subroutine",
                                    "F_arg_c_call": "obj%cxxmem,\t flag",
                                    "F_arguments": "obj,\t flag",
                                    "F_subprogram": "subroutine",
                                    "stmt_name": "f_subroutine"
                                }
                            },
                            "flag": {
                                "fmtc": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_type": "int",
                                    "c_var": "flag",
                                    "cfi_type": "CFI_type_int",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&flag",
                                    "cxx_type": "int",
                                    "cxx_var": "flag",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt_name": "c_in_native_scalar"
                                },
                                "fmtf": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_type": "int",
                                    "c_var": "flag",
                                    "cfi_type": "CFI_type_int",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&flag",
                                    "cxx_type": "int",
                                    "cxx_var": "flag",
                                    "f_intent": "IN",
                                    "f_kind": "C_INT",
                                    "f_type": "integer(C_INT)",
                                    "f_type_module": "iso_c_binding",
                                    "f_var": "flag",
                                    "fc_var": "flag",
                                    "i_var": "flag",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt_name": "f_in_native_scalar"
                                },
                                "fmtpy": {
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "flag",
                                    "ctor_expr": "flag",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&flag",
                                    "cxx_type": "int",
                                    "cxx_var": "flag",
                                    "data_var": "SHData_flag",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_flag",
                                    "size_var": "SHSize_flag",
                                    "stmt": "py_in_native_scalar",
                                    "value_var": "SHValue_flag"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "C_name": "PRE_User2_exfunc_1",
                            "C_name_api": "exfunc",
                            "F_C_name": "c_user2_exfunc_1",
                            "F_name_api": "exfunc",
                            "F_name_function": "exfunc_1",
                            "F_name_generic": "exfunc",
                            "F_name_impl": "user2_exfunc_1",
                            "PY_name_impl": "PY_exfunc_1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "exfunc",
                            "function_suffix": "_1"
                        }
                    }
                ],
                "name": "User2",
                "options": {},
                "parse_keyword": "class",
                "scope": "User2::",
                "typemap_name": "User2",
                "wrap": {
                    "c": true,
                    "fortran": true,
                    "python": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapUser2.h",
                    "C_impl_filename": "wrapUser2.cpp",
                    "C_name_api": "User2",
                    "C_name_scope": "User2_",
                    "C_type_name": "PRE_User2",
                    "F_derived_name": "user2",
                    "F_name_api": "user2",
                    "F_name_scope": "user2_",
                    "PY_PyObject": "PY_User2",
                    "PY_PyTypeObject": "PY_User2_Type",
                    "PY_capsule_name": "PY_User2_capsule_name",
                    "PY_from_object_func": "PP_User2_from_Object",
                    "PY_this_call": "self->obj->",
                    "PY_to_object_func": "PP_User2_to_Object",
                    "PY_to_object_idtor_func": "PP_User2_to_Object_idtor",
                    "PY_type_filename": "pyUser2type.cpp",
                    "class_scope": "User2::",
                    "cxx_class": "User2",
                    "cxx_type": "User2",
                    "f_capsule_data_type": "PRE_SHROUD_capsule_data",
                    "f_helper_capsule_data_helper": "PRE_SHROUD_capsule_data",
                    "file_scope": "User2"
                }
            }
        ],
        "copyright": [
            "Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "cxx_header": [
            "preprocess.hpp"
        ],
        "language": "cxx",
        "scope_file": [
            "preprocess"
        ],
        "wrap": {
            "c": true,
            "fortran": true,
            "python": true
        }
    },
    "symtab": {
        "User1": "User1",
        "User2": "User2"
    },
    "types": {
        "User1": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "PY_PyObject": "PY_User1",
            "PY_PyTypeObject": "PY_User1_Type",
            "PY_from_object": "PP_User1_from_Object",
            "PY_to_object": "PP_User1_to_Object",
            "PY_to_object_idtor": "PP_User1_to_Object_idtor",
            "base": "shadow",
            "c_to_cxx": "static_cast<{c_const}User1 *>\t({c_var}->addr)",
            "c_type": "PRE_User1",
            "cxx_to_c": "static_cast<{c_const}void *>(\t{cxx_addr}{cxx_var})",
            "cxx_type": "User1",
            "f_capsule_data_type": "PRE_SHROUD_capsule_data",
            "f_class": "class(user1)",
            "f_derived_type": "user1",
            "f_module": {
                "preprocess_mod": [
                    "user1"
                ]
            },
            "f_module_name": "preprocess_mod",
            "f_to_c": "{f_var}%cxxmem",
            "f_type": "type(user1)",
            "flat_name": "User1",
            "i_module": {
                "preprocess_mod": [
                    "PRE_SHROUD_capsule_data"
                ]
            },
            "i_type": "type(PRE_SHROUD_capsule_data)",
            "impl_header": [
                "preprocess.hpp"
            ],
            "sgroup": "shadow",
            "wrap_header": [
                "typespreprocess.h"
            ]
        },
        "User2": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "PY_PyObject": "PY_User2",
            "PY_PyTypeObject": "PY_User2_Type",
            "PY_from_object": "PP_User2_from_Object",
            "PY_to_object": "PP_User2_to_Object",
            "PY_to_object_idtor": "PP_User2_to_Object_idtor",
            "base": "shadow",
            "c_to_cxx": "static_cast<{c_const}User2 *>\t({c_var}->addr)",
            "c_type": "PRE_User2",
            "cxx_to_c": "static_cast<{c_const}void *>(\t{cxx_addr}{cxx_var})",
            "cxx_type": "User2",
            "f_capsule_data_type": "PRE_SHROUD_capsule_data",
            "f_class": "class(user2)",
            "f_derived_type": "user2",
            "f_module": {
                "preprocess_mod": [
                    "user2"
                ]
            },
            "f_module_name": "preprocess_mod",
            "f_to_c": "{f_var}%cxxmem",
            "f_type": "type(user2)",
            "flat_name": "User2",
            "i_module": {
                "preprocess_mod": [
                    "PRE_SHROUD_capsule_data"
                ]
            },
            "i_type": "type(PRE_SHROUD_capsule_data)",
            "impl_header": [
                "User2.hpp"
            ],
            "sgroup": "shadow",
            "wrap_header": [
                "typespreprocess.h"
            ]
        }
    }
}