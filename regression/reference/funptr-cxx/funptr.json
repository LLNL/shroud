{
    "<NOTICE>": "This file is generated by Shroud nowrite-version and is useful for debugging.",
    "library": {
        "copyright": [
            "Copyright (c) 2017-2024, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "cxx_header": [
            "funptr.h"
        ],
        "functions": [
            {
                "<FUNCTION>": "callback1  0 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "callback1",
                        "params": [
                            {
                                "declarator": {
                                    "func": {
                                        "name": "incr",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            }
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "name": "incr",
                                    "params": [],
                                    "typemap_name": "void"
                                },
                                "specifier": [
                                    "void"
                                ],
                                "typemap_name": "void"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void callback1(void (*incr)(void))",
                "declgen": "void callback1(void ( * incr)(void))",
                "doxygen": {
                    "brief": "Create abstract interface for function"
                },
                "name": "callback1",
                "options": {},
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_bind": {
                    "c": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "c_subroutine"
                        },
                        "incr": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incr  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "func": {
                                                "name": "incr",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incr",
                                            "params": [],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "decl": "void ( * incr)(void)",
                                    "name": "incr",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incr",
                                        "F_name_api": "incr",
                                        "function_name": "incr"
                                    }
                                },
                                "intent": "in",
                                "value": true
                            },
                            "stmt": "c_in_void_scalar"
                        }
                    },
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "f_subroutine"
                        },
                        "incr": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incr  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "func": {
                                                "name": "incr",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incr",
                                            "params": [],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "decl": "void ( * incr)(void)",
                                    "name": "incr",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incr",
                                        "F_name_api": "incr",
                                        "function_name": "incr"
                                    }
                                },
                                "intent": "in",
                                "value": true
                            },
                            "stmt": "f_in_void_scalar"
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "incr": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incr  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "func": {
                                                "name": "incr",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incr",
                                            "params": [],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "decl": "void ( * incr)(void)",
                                    "name": "incr",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incr",
                                        "F_name_api": "incr",
                                        "function_name": "incr"
                                    }
                                },
                                "intent": "in",
                                "value": true
                            }
                        }
                    }
                },
                "zz_fmtargs": {
                    "+result": {
                        "fmtc": {
                            "C_call_function": "callback1(\tincr)",
                            "C_call_list": "incr",
                            "C_name": "FUN_callback1",
                            "C_prototype": "void ( * incr)(\tvoid)",
                            "C_return_type": "void",
                            "F_C_name": "c_callback1",
                            "stmt_name": "c_subroutine"
                        },
                        "fmtf": {
                            "C_call_function": "callback1(\tincr)",
                            "C_call_list": "incr",
                            "C_name": "FUN_callback1",
                            "C_prototype": "void ( * incr)(\tvoid)",
                            "C_return_type": "void",
                            "F_C_arguments": "incr",
                            "F_C_call": "c_callback1",
                            "F_C_name": "callback1",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "incr",
                            "F_arguments": "incr",
                            "F_subprogram": "subroutine",
                            "stmt_name": "f_subroutine"
                        }
                    },
                    "incr": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "void",
                            "c_var": "incr",
                            "cfi_type": "CFI_type_intptr_t",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&incr",
                            "cxx_type": "void",
                            "cxx_var": "incr",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_CPTR",
                            "stmt_name": "c_in_void_scalar"
                        },
                        "fmtf": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "void",
                            "c_var": "incr",
                            "cfi_type": "CFI_type_intptr_t",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&incr",
                            "cxx_type": "void",
                            "cxx_var": "incr",
                            "f_intent": "IN",
                            "f_type": "type(C_PTR)",
                            "f_type_module": "iso_c_binding",
                            "f_var": "incr",
                            "fc_var": "incr",
                            "i_var": "incr",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_CPTR",
                            "stmt_name": "f_in_void_scalar"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "callback1",
                    "F_name_api": "callback1",
                    "F_name_function": "callback1",
                    "F_name_generic": "callback1",
                    "F_name_impl": "callback1",
                    "function_name": "callback1"
                }
            },
            {
                "<FUNCTION>": "callback1_wrap  1 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "callback1_wrap",
                        "params": [
                            {
                                "declarator": {
                                    "func": {
                                        "name": "incr",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            }
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "name": "incr",
                                    "params": [],
                                    "typemap_name": "void"
                                },
                                "specifier": [
                                    "void"
                                ],
                                "typemap_name": "void"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void callback1_wrap(void (*incr)(void))",
                "declgen": "void callback1_wrap(void ( * incr)(void))",
                "doxygen": {
                    "brief": "Create abstract interface for function",
                    "description": "Create a Fortran wrapper to call the bind(C) interface.\n"
                },
                "name": "callback1_wrap",
                "options": {
                    "F_force_wrapper": true
                },
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_bind": {
                    "c": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "c_subroutine"
                        },
                        "incr": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incr  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "func": {
                                                "name": "incr",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incr",
                                            "params": [],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "decl": "void ( * incr)(void)",
                                    "name": "incr",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incr",
                                        "F_name_api": "incr",
                                        "function_name": "incr"
                                    }
                                },
                                "intent": "in",
                                "value": true
                            },
                            "stmt": "c_in_void_scalar"
                        }
                    },
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "f_subroutine"
                        },
                        "incr": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incr  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "func": {
                                                "name": "incr",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incr",
                                            "params": [],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "decl": "void ( * incr)(void)",
                                    "name": "incr",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incr",
                                        "F_name_api": "incr",
                                        "function_name": "incr"
                                    }
                                },
                                "intent": "in",
                                "value": true
                            },
                            "stmt": "f_in_void_scalar"
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "incr": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incr  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "func": {
                                                "name": "incr",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incr",
                                            "params": [],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "decl": "void ( * incr)(void)",
                                    "name": "incr",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incr",
                                        "F_name_api": "incr",
                                        "function_name": "incr"
                                    }
                                },
                                "intent": "in",
                                "value": true
                            }
                        }
                    }
                },
                "zz_fmtargs": {
                    "+result": {
                        "fmtc": {
                            "C_call_function": "callback1_wrap(\tincr)",
                            "C_call_list": "incr",
                            "C_name": "FUN_callback1_wrap",
                            "C_prototype": "void ( * incr)(\tvoid)",
                            "C_return_type": "void",
                            "F_C_name": "c_callback1_wrap",
                            "stmt_name": "c_subroutine"
                        },
                        "fmtf": {
                            "C_call_function": "callback1_wrap(\tincr)",
                            "C_call_list": "incr",
                            "C_name": "FUN_callback1_wrap",
                            "C_prototype": "void ( * incr)(\tvoid)",
                            "C_return_type": "void",
                            "F_C_arguments": "incr",
                            "F_C_call": "c_callback1_wrap",
                            "F_C_name": "c_callback1_wrap",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "incr",
                            "F_arguments": "incr",
                            "F_subprogram": "subroutine",
                            "stmt_name": "f_subroutine"
                        }
                    },
                    "incr": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "void",
                            "c_var": "incr",
                            "cfi_type": "CFI_type_intptr_t",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&incr",
                            "cxx_type": "void",
                            "cxx_var": "incr",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_CPTR",
                            "stmt_name": "c_in_void_scalar"
                        },
                        "fmtf": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "void",
                            "c_var": "incr",
                            "cfi_type": "CFI_type_intptr_t",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&incr",
                            "cxx_type": "void",
                            "cxx_var": "incr",
                            "f_intent": "IN",
                            "f_type": "type(C_PTR)",
                            "f_type_module": "iso_c_binding",
                            "f_var": "incr",
                            "fc_var": "incr",
                            "i_var": "incr",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_CPTR",
                            "stmt_name": "f_in_void_scalar"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "callback1_wrap",
                    "F_name_api": "callback1_wrap",
                    "F_name_function": "callback1_wrap",
                    "F_name_generic": "callback1_wrap",
                    "F_name_impl": "callback1_wrap",
                    "function_name": "callback1_wrap"
                }
            },
            {
                "<FUNCTION>": "callback1_external  2 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "callback1_external",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "external": true
                                    },
                                    "func": {
                                        "name": "incr",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            }
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "name": "incr",
                                    "params": [],
                                    "typemap_name": "void"
                                },
                                "specifier": [
                                    "void"
                                ],
                                "typemap_name": "void"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void callback1_external(void (*incr)(void)+external)",
                "declgen": "void callback1_external(void ( * incr)(void) +external)",
                "doxygen": {
                    "brief": "Declare callback as external"
                },
                "name": "callback1_external",
                "options": {},
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_bind": {
                    "c": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "c_subroutine"
                        },
                        "incr": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incr  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "attrs": {
                                                "external": true
                                            },
                                            "func": {
                                                "name": "incr",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incr",
                                            "params": [],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "decl": "void ( * incr)(void) +external",
                                    "name": "incr",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incr",
                                        "F_name_api": "incr",
                                        "function_name": "incr"
                                    }
                                },
                                "intent": "in",
                                "value": true
                            },
                            "stmt": "c_in_void_scalar"
                        }
                    },
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "f_subroutine"
                        },
                        "incr": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incr  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "attrs": {
                                                "external": true
                                            },
                                            "func": {
                                                "name": "incr",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incr",
                                            "params": [],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "decl": "void ( * incr)(void) +external",
                                    "name": "incr",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incr",
                                        "F_name_api": "incr",
                                        "function_name": "incr"
                                    }
                                },
                                "intent": "in",
                                "value": true
                            },
                            "stmt": "f_in_void_scalar"
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "incr": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incr  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "attrs": {
                                                "external": true
                                            },
                                            "func": {
                                                "name": "incr",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incr",
                                            "params": [],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "decl": "void ( * incr)(void) +external",
                                    "name": "incr",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incr",
                                        "F_name_api": "incr",
                                        "function_name": "incr"
                                    }
                                },
                                "intent": "in",
                                "value": true
                            }
                        }
                    }
                },
                "zz_fmtargs": {
                    "+result": {
                        "fmtc": {
                            "C_call_function": "callback1_external(\tincr)",
                            "C_call_list": "incr",
                            "C_name": "FUN_callback1_external",
                            "C_prototype": "void ( * incr)(\tvoid)",
                            "C_return_type": "void",
                            "F_C_name": "c_callback1_external",
                            "stmt_name": "c_subroutine"
                        },
                        "fmtf": {
                            "C_call_function": "callback1_external(\tincr)",
                            "C_call_list": "incr",
                            "C_name": "FUN_callback1_external",
                            "C_prototype": "void ( * incr)(\tvoid)",
                            "C_return_type": "void",
                            "F_C_arguments": "incr",
                            "F_C_call": "c_callback1_external",
                            "F_C_name": "c_callback1_external",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "incr",
                            "F_arguments": "incr",
                            "F_subprogram": "subroutine",
                            "stmt_name": "f_subroutine"
                        }
                    },
                    "incr": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "void",
                            "c_var": "incr",
                            "cfi_type": "CFI_type_intptr_t",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&incr",
                            "cxx_type": "void",
                            "cxx_var": "incr",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_CPTR",
                            "stmt_name": "c_in_void_scalar"
                        },
                        "fmtf": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "void",
                            "c_var": "incr",
                            "cfi_type": "CFI_type_intptr_t",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&incr",
                            "cxx_type": "void",
                            "cxx_var": "incr",
                            "f_intent": "IN",
                            "f_type": "type(C_PTR)",
                            "f_type_module": "iso_c_binding",
                            "f_var": "incr",
                            "fc_var": "incr",
                            "i_var": "incr",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_CPTR",
                            "stmt_name": "f_in_void_scalar"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "callback1_external",
                    "F_name_api": "callback1_external",
                    "F_name_function": "callback1_external",
                    "F_name_generic": "callback1_external",
                    "F_name_impl": "callback1_external",
                    "function_name": "callback1_external"
                }
            },
            {
                "<FUNCTION>": "callback1_funptr  3 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "callback1_funptr",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "funptr": true
                                    },
                                    "func": {
                                        "name": "incr",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            }
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "name": "incr",
                                    "params": [],
                                    "typemap_name": "void"
                                },
                                "specifier": [
                                    "void"
                                ],
                                "typemap_name": "void"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void callback1_funptr(void (*incr)(void)+funptr)",
                "declgen": "void callback1_funptr(void ( * incr)(void) +funptr)",
                "doxygen": {
                    "brief": "Declare callback as c_funptr",
                    "description": "The caller is responsible for using c_funloc to pass the function address.\n"
                },
                "name": "callback1_funptr",
                "options": {},
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_bind": {
                    "c": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "c_subroutine"
                        },
                        "incr": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incr  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "attrs": {
                                                "funptr": true
                                            },
                                            "func": {
                                                "name": "incr",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incr",
                                            "params": [],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "decl": "void ( * incr)(void) +funptr",
                                    "name": "incr",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incr",
                                        "F_name_api": "incr",
                                        "function_name": "incr"
                                    }
                                },
                                "intent": "in",
                                "value": true
                            },
                            "stmt": "c_in_void_scalar"
                        }
                    },
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "f_subroutine"
                        },
                        "incr": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incr  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "attrs": {
                                                "funptr": true
                                            },
                                            "func": {
                                                "name": "incr",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incr",
                                            "params": [],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "decl": "void ( * incr)(void) +funptr",
                                    "name": "incr",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incr",
                                        "F_name_api": "incr",
                                        "function_name": "incr"
                                    }
                                },
                                "intent": "in",
                                "value": true
                            },
                            "stmt": "f_in_void_scalar"
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "incr": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incr  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "attrs": {
                                                "funptr": true
                                            },
                                            "func": {
                                                "name": "incr",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incr",
                                            "params": [],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "decl": "void ( * incr)(void) +funptr",
                                    "name": "incr",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incr",
                                        "F_name_api": "incr",
                                        "function_name": "incr"
                                    }
                                },
                                "intent": "in",
                                "value": true
                            }
                        }
                    }
                },
                "zz_fmtargs": {
                    "+result": {
                        "fmtc": {
                            "C_call_function": "callback1_funptr(\tincr)",
                            "C_call_list": "incr",
                            "C_name": "FUN_callback1_funptr",
                            "C_prototype": "void ( * incr)(\tvoid)",
                            "C_return_type": "void",
                            "F_C_name": "c_callback1_funptr",
                            "stmt_name": "c_subroutine"
                        },
                        "fmtf": {
                            "C_call_function": "callback1_funptr(\tincr)",
                            "C_call_list": "incr",
                            "C_name": "FUN_callback1_funptr",
                            "C_prototype": "void ( * incr)(\tvoid)",
                            "C_return_type": "void",
                            "F_C_arguments": "incr",
                            "F_C_call": "c_callback1_funptr",
                            "F_C_name": "callback1_funptr",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "incr",
                            "F_arguments": "incr",
                            "F_subprogram": "subroutine",
                            "stmt_name": "f_subroutine"
                        }
                    },
                    "incr": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "void",
                            "c_var": "incr",
                            "cfi_type": "CFI_type_intptr_t",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&incr",
                            "cxx_type": "void",
                            "cxx_var": "incr",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_CPTR",
                            "stmt_name": "c_in_void_scalar"
                        },
                        "fmtf": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "void",
                            "c_var": "incr",
                            "cfi_type": "CFI_type_intptr_t",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&incr",
                            "cxx_type": "void",
                            "cxx_var": "incr",
                            "f_intent": "IN",
                            "f_type": "type(C_PTR)",
                            "f_type_module": "iso_c_binding",
                            "f_var": "incr",
                            "fc_var": "incr",
                            "i_var": "incr",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_CPTR",
                            "stmt_name": "f_in_void_scalar"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "callback1_funptr",
                    "F_name_api": "callback1_funptr",
                    "F_name_function": "callback1_funptr",
                    "F_name_generic": "callback1_funptr",
                    "F_name_impl": "callback1_funptr",
                    "function_name": "callback1_funptr"
                }
            },
            {
                "<FUNCTION>": "callback2  4 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "callback2",
                        "params": [
                            {
                                "const": true,
                                "declarator": {
                                    "name": "name",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "char"
                                },
                                "specifier": [
                                    "char"
                                ],
                                "typemap_name": "char"
                            },
                            {
                                "declarator": {
                                    "name": "ival",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            },
                            {
                                "declarator": {
                                    "name": "incr",
                                    "typemap_name": "incrtype"
                                },
                                "specifier": [
                                    "incrtype"
                                ],
                                "typemap_name": "incrtype"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void callback2(const char *name, int ival, incrtype incr)",
                "declgen": "void callback2(const char * name, int ival, incrtype incr)",
                "doxygen": {
                    "brief": "Create abstract interface for function"
                },
                "name": "callback2",
                "options": {},
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_bind": {
                    "c": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "c_subroutine"
                        },
                        "incr": {
                            "meta": {
                                "intent": "in",
                                "value": true
                            },
                            "stmt": "c_in_procedure_scalar"
                        },
                        "ival": {
                            "meta": {
                                "intent": "in",
                                "value": true
                            },
                            "stmt": "c_in_native_scalar"
                        },
                        "name": {
                            "meta": {
                                "intent": "in"
                            },
                            "stmt": "c_in_char_*"
                        }
                    },
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "f_subroutine"
                        },
                        "incr": {
                            "meta": {
                                "intent": "in",
                                "value": true
                            },
                            "stmt": "f_in_procedure_scalar"
                        },
                        "ival": {
                            "meta": {
                                "intent": "in",
                                "value": true
                            },
                            "stmt": "f_in_native_scalar"
                        },
                        "name": {
                            "meta": {
                                "ftrim_char_in": true,
                                "intent": "in"
                            },
                            "stmt": "f_in_char_*"
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "incr": {
                            "meta": {
                                "intent": "in",
                                "value": true
                            }
                        },
                        "ival": {
                            "meta": {
                                "intent": "in",
                                "value": true
                            }
                        },
                        "name": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtargs": {
                    "+result": {
                        "fmtc": {
                            "C_call_function": "callback2(\tname,\t ival,\t incr)",
                            "C_call_list": "name,\t ival,\t incr",
                            "C_name": "FUN_callback2",
                            "C_prototype": "const char * name,\t int ival,\t FUN_incrtype incr",
                            "C_return_type": "void",
                            "F_C_name": "c_callback2",
                            "stmt_name": "c_subroutine"
                        },
                        "fmtf": {
                            "C_call_function": "callback2(\tname,\t ival,\t incr)",
                            "C_call_list": "name,\t ival,\t incr",
                            "C_name": "FUN_callback2",
                            "C_prototype": "const char * name,\t int ival,\t FUN_incrtype incr",
                            "C_return_type": "void",
                            "F_C_arguments": "name,\t ival,\t incr",
                            "F_C_call": "c_callback2",
                            "F_C_name": "c_callback2",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "trim(name)//C_NULL_CHAR,\t ival,\t incr",
                            "F_arguments": "name,\t ival,\t incr",
                            "F_subprogram": "subroutine",
                            "stmt_name": "f_subroutine"
                        }
                    },
                    "incr": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "FUN_incrtype",
                            "c_var": "incr",
                            "cfi_type": "CFI_type_other",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&incr",
                            "cxx_type": "incrtype",
                            "cxx_var": "incr",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt_name": "c_in_procedure_scalar"
                        },
                        "fmtf": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "FUN_incrtype",
                            "c_var": "incr",
                            "cfi_type": "CFI_type_other",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&incr",
                            "cxx_type": "incrtype",
                            "cxx_var": "incr",
                            "f_intent": "IN",
                            "f_kind": "incrtype",
                            "f_type": "procedure(incrtype)",
                            "f_type_module": "funptr_mod",
                            "f_var": "incr",
                            "fc_var": "incr",
                            "i_var": "incr",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt_name": "f_in_procedure_scalar"
                        }
                    },
                    "ival": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "int",
                            "c_var": "ival",
                            "cfi_type": "CFI_type_int",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&ival",
                            "cxx_type": "int",
                            "cxx_var": "ival",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT",
                            "stmt_name": "c_in_native_scalar"
                        },
                        "fmtf": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "int",
                            "c_var": "ival",
                            "cfi_type": "CFI_type_int",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&ival",
                            "cxx_type": "int",
                            "cxx_var": "ival",
                            "f_intent": "IN",
                            "f_kind": "C_INT",
                            "f_type": "integer(C_INT)",
                            "f_type_module": "iso_c_binding",
                            "f_var": "ival",
                            "fc_var": "ival",
                            "i_var": "ival",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT",
                            "stmt_name": "f_in_native_scalar"
                        }
                    },
                    "name": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_type": "char",
                            "c_var": "name",
                            "cfi_type": "CFI_type_other",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "const_cast<char *>\t(name)",
                            "cxx_type": "char",
                            "cxx_var": "name",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt_name": "c_in_char_*"
                        },
                        "fmtf": {
                            "c_addr": "",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_type": "char",
                            "c_var": "name",
                            "cfi_type": "CFI_type_other",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "const_cast<char *>\t(name)",
                            "cxx_type": "char",
                            "cxx_var": "name",
                            "f_intent": "IN",
                            "f_kind": "C_CHAR",
                            "f_type": "character(*)",
                            "f_type_module": "iso_c_binding",
                            "f_var": "name",
                            "fc_var": "name",
                            "i_var": "name",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt_name": "f_in_char_*"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "callback2",
                    "F_name_api": "callback2",
                    "F_name_function": "callback2",
                    "F_name_generic": "callback2",
                    "F_name_impl": "callback2",
                    "function_name": "callback2"
                }
            }
        ],
        "language": "cxx",
        "scope_file": [
            "funptr"
        ],
        "typedefs": [
            {
                "<TYPEDEF>": "incrtype ****************************************",
                "ast": {
                    "declarator": {
                        "func": {
                            "name": "incrtype",
                            "pointer": [
                                {
                                    "ptr": "*"
                                }
                            ],
                            "typemap_name": "void"
                        },
                        "name": "incrtype",
                        "params": [
                            {
                                "declarator": {
                                    "name": "i",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "storage": [
                        "typedef"
                    ],
                    "typemap_name": "incrtype"
                },
                "name": "incrtype",
                "options": {},
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_bind": {
                    "c": {
                        "incrtype": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incrtype  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "func": {
                                                "name": "incrtype",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incrtype",
                                            "params": [
                                                {
                                                    "declarator": {
                                                        "name": "i",
                                                        "typemap_name": "int"
                                                    },
                                                    "specifier": [
                                                        "int"
                                                    ],
                                                    "typemap_name": "int"
                                                }
                                            ],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "storage": [
                                            "typedef"
                                        ],
                                        "typemap_name": "incrtype"
                                    },
                                    "decl": "typedef void ( * incrtype)(int i)",
                                    "name": "incrtype",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_bind": {
                                        "f": {
                                            "i": {
                                                "meta": {
                                                    "value": true
                                                }
                                            }
                                        },
                                        "share": {
                                            "i": {
                                                "meta": {
                                                    "value": true
                                                }
                                            }
                                        }
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incrtype",
                                        "F_name_api": "incrtype",
                                        "function_name": "incrtype"
                                    }
                                }
                            }
                        }
                    },
                    "f": {
                        "incrtype": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incrtype  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "func": {
                                                "name": "incrtype",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incrtype",
                                            "params": [
                                                {
                                                    "declarator": {
                                                        "name": "i",
                                                        "typemap_name": "int"
                                                    },
                                                    "specifier": [
                                                        "int"
                                                    ],
                                                    "typemap_name": "int"
                                                }
                                            ],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "storage": [
                                            "typedef"
                                        ],
                                        "typemap_name": "incrtype"
                                    },
                                    "decl": "typedef void ( * incrtype)(int i)",
                                    "name": "incrtype",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_bind": {
                                        "f": {
                                            "i": {
                                                "meta": {
                                                    "value": true
                                                }
                                            }
                                        },
                                        "share": {
                                            "i": {
                                                "meta": {
                                                    "value": true
                                                }
                                            }
                                        }
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incrtype",
                                        "F_name_api": "incrtype",
                                        "function_name": "incrtype"
                                    }
                                }
                            }
                        }
                    },
                    "share": {
                        "incrtype": {
                            "meta": {
                                "fptr": {
                                    "<FUNCTION>": "incrtype  None ****************************************",
                                    "ast": {
                                        "declarator": {
                                            "func": {
                                                "name": "incrtype",
                                                "pointer": [
                                                    {
                                                        "ptr": "*"
                                                    }
                                                ],
                                                "typemap_name": "void"
                                            },
                                            "name": "incrtype",
                                            "params": [
                                                {
                                                    "declarator": {
                                                        "name": "i",
                                                        "typemap_name": "int"
                                                    },
                                                    "specifier": [
                                                        "int"
                                                    ],
                                                    "typemap_name": "int"
                                                }
                                            ],
                                            "typemap_name": "void"
                                        },
                                        "specifier": [
                                            "void"
                                        ],
                                        "storage": [
                                            "typedef"
                                        ],
                                        "typemap_name": "incrtype"
                                    },
                                    "decl": "typedef void ( * incrtype)(int i)",
                                    "name": "incrtype",
                                    "options": {},
                                    "wrap": {
                                        "c": true,
                                        "fortran": true
                                    },
                                    "zz_bind": {
                                        "f": {
                                            "i": {
                                                "meta": {
                                                    "value": true
                                                }
                                            }
                                        },
                                        "share": {
                                            "i": {
                                                "meta": {
                                                    "value": true
                                                }
                                            }
                                        }
                                    },
                                    "zz_fmtdict": {
                                        "C_name_api": "incrtype",
                                        "F_name_api": "incrtype",
                                        "function_name": "incrtype"
                                    }
                                }
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "incrtype",
                    "C_name_typedef": "FUN_incrtype",
                    "F_name_api": "incrtype",
                    "F_name_typedef": "incrtype",
                    "cxx_type": "incrtype",
                    "typedef_name": "incrtype"
                }
            }
        ],
        "wrap": {
            "c": true,
            "fortran": true
        }
    },
    "types": {
        "incrtype": {
            "base": "procedure",
            "c_type": "FUN_incrtype",
            "cxx_type": "incrtype",
            "f_kind": "incrtype",
            "f_module": {
                "funptr_mod": [
                    "incrtype"
                ]
            },
            "f_module_name": "funptr_mod",
            "f_type": "procedure(incrtype)",
            "flat_name": "incrtype",
            "i_module": {
                "funptr_mod": [
                    "incrtype"
                ]
            },
            "sgroup": "procedure",
            "wrap_header": [
                "wrapfunptr.h"
            ]
        }
    }
}