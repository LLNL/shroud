{
    "<NOTICE>": "This file is generated by Shroud 0.13.0 and is useful for debugging.",
    "library": {
        "copyright": [
            "Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "language": "cxx",
        "options": {
            "CXX_standard": 2011,
            "C_API_case": "preserve",
            "C_enum_member_template": "{C_prefix}{C_name_scope}{enum_member_name}",
            "C_enum_template": "{C_prefix}{C_name_scope}{enum_name}",
            "C_force_wrapper": false,
            "C_header_filename_class_template": "wrap{file_scope}.{C_header_filename_suffix}",
            "C_header_filename_library_template": "wrap{library}.{C_header_filename_suffix}",
            "C_header_filename_namespace_template": "wrap{file_scope}.{C_header_filename_suffix}",
            "C_header_utility_template": "types{library}.{C_header_filename_suffix}",
            "C_impl_filename_class_template": "wrap{file_scope}.{C_impl_filename_suffix}",
            "C_impl_filename_library_template": "wrap{library}.{C_impl_filename_suffix}",
            "C_impl_filename_namespace_template": "wrap{file_scope}.{C_impl_filename_suffix}",
            "C_impl_utility_template": "util{library}.{C_impl_filename_suffix}",
            "C_line_length": 72,
            "C_memory_dtor_function_template": "{C_prefix}SHROUD_memory_destructor",
            "C_name_template": "{C_prefix}{C_name_scope}{C_name_api}{function_suffix}{template_suffix}",
            "C_name_typedef_template": "{C_prefix}{C_name_scope}{typedef_name}",
            "C_shadow_result": true,
            "C_var_capsule_template": "C{c_var}",
            "C_var_context_template": "D{c_var}",
            "F_API_case": "underscore",
            "F_CFI": false,
            "F_C_name_template": "{F_C_prefix}{F_name_scope}{F_name_api}{function_suffix}{template_suffix}",
            "F_abstract_interface_argument_template": "arg{index}",
            "F_abstract_interface_subprogram_template": "{F_name_api}_{argname}",
            "F_array_type_template": "{C_prefix}SHROUD_array",
            "F_assumed_rank_max": 7,
            "F_assumed_rank_min": 0,
            "F_auto_reference_count": false,
            "F_blanknull": false,
            "F_capsule_data_type_template": "{C_prefix}SHROUD_capsule_data",
            "F_capsule_type_template": "{C_prefix}SHROUD_capsule",
            "F_create_bufferify_function": true,
            "F_create_generic": true,
            "F_default_args": "generic",
            "F_derived_name_template": "{F_name_api}",
            "F_enum_member_template": "{F_name_scope}{enum_member_lower}",
            "F_flatten_namespace": false,
            "F_force_wrapper": false,
            "F_impl_filename_library_template": "wrapf{library_lower}.{F_filename_suffix}",
            "F_impl_filename_namespace_template": "wrapf{file_scope}.{F_filename_suffix}",
            "F_line_length": 72,
            "F_module_name_library_template": "{library_lower}_mod",
            "F_module_name_namespace_template": "{file_scope}_mod",
            "F_name_function_template": "{F_name_api}{function_suffix}{template_suffix}",
            "F_name_generic_template": "{F_name_api}",
            "F_name_impl_template": "{F_name_scope}{F_name_api}{function_suffix}{template_suffix}",
            "F_name_typedef_template": "{F_name_scope}{F_name_api}",
            "F_return_fortran_pointer": true,
            "F_standard": 2003,
            "F_string_len_trim": true,
            "F_struct_getter_setter": true,
            "F_trim_char_in": true,
            "LUA_API_case": "preserve",
            "LUA_class_reg_template": "{LUA_prefix}{cxx_class}_Reg",
            "LUA_ctor_name_template": "{cxx_class}",
            "LUA_header_filename_template": "lua{library}module.{LUA_header_filename_suffix}",
            "LUA_metadata_template": "{cxx_class}.metatable",
            "LUA_module_filename_template": "lua{library}module.{LUA_impl_filename_suffix}",
            "LUA_module_name_template": "{library_lower}",
            "LUA_module_reg_template": "{LUA_prefix}{library}_Reg",
            "LUA_name_impl_template": "{LUA_prefix}{C_name_scope}{LUA_name_api}",
            "LUA_name_template": "{function_name}",
            "LUA_userdata_member_template": "self",
            "LUA_userdata_type_template": "{LUA_prefix}{cxx_class}_Type",
            "PY_PyObject_template": "{PY_prefix}{cxx_class}",
            "PY_PyTypeObject_template": "{PY_prefix}{cxx_class}_Type",
            "PY_array_arg": "numpy",
            "PY_capsule_destructor_function_template": "{PY_prefix}SHROUD_capsule_destructor",
            "PY_create_generic": true,
            "PY_dtor_context_array_template": "{PY_prefix}SHROUD_capsule_context",
            "PY_dtor_context_typedef_template": "{PY_prefix}SHROUD_dtor_context",
            "PY_fetch_context_function_template": "{PY_prefix}SHROUD_fetch_context",
            "PY_header_filename_template": "py{library}module.{PY_header_filename_suffix}",
            "PY_member_data_template": "{variable_name}_dataobj",
            "PY_member_getter_template": "{PY_prefix}{cxx_class}_{variable_name}_getter",
            "PY_member_object_template": "{variable_name}_obj",
            "PY_member_setter_template": "{PY_prefix}{cxx_class}_{variable_name}_setter",
            "PY_module_filename_template": "py{file_scope}module.{PY_impl_filename_suffix}",
            "PY_name_impl_template": "{PY_prefix}{function_name}{function_suffix}{template_suffix}",
            "PY_numpy_array_capsule_name_template": "{PY_prefix}array_dtor",
            "PY_release_memory_function_template": "{PY_prefix}SHROUD_release_memory",
            "PY_struct_arg": "numpy",
            "PY_struct_array_descr_create_template": "{PY_prefix}{cxx_class}_create_array_descr",
            "PY_struct_array_descr_name_template": "{cxx_class}_dtype",
            "PY_struct_array_descr_variable_template": "{PY_prefix}{cxx_class}_array_descr",
            "PY_type_filename_template": "py{file_scope}type.{PY_impl_filename_suffix}",
            "PY_type_impl_template": "{PY_prefix}{cxx_class}_{PY_type_method}{function_suffix}{template_suffix}",
            "PY_utility_filename_template": "py{library}util.{PY_impl_filename_suffix}",
            "PY_write_helper_in_util": false,
            "SH_class_getter_template": "get_{wrapped_name}",
            "SH_class_setter_template": "set_{wrapped_name}",
            "SH_struct_getter_template": "{struct_name}_get_{wrapped_name}",
            "SH_struct_setter_template": "{struct_name}_set_{wrapped_name}",
            "YAML_type_filename_template": "{library_lower}_types.yaml",
            "class_baseclass": null,
            "class_ctor": null,
            "class_method": null,
            "debug": false,
            "debug_index": false,
            "debug_testsuite": true,
            "doxygen": true,
            "flatten_namespace": false,
            "literalinclude": false,
            "literalinclude2": false,
            "return_scalar_pointer": "pointer",
            "show_splicer_comments": true,
            "wrap_c": true,
            "wrap_class_as": "class",
            "wrap_fortran": true,
            "wrap_lua": false,
            "wrap_python": false,
            "wrap_struct_as": "struct"
        },
        "scope_file": [
            "library"
        ],
        "wrap": {
            "c": true,
            "fortran": true
        },
        "zz_fmtdict": {
            "CXX_local": "SHCXX_",
            "CXX_template": "",
            "CXX_this": "SH_this",
            "CXX_this_call": "",
            "C_array_type": "LIB_SHROUD_array",
            "C_bufferify_suffix": "_bufferify",
            "C_call_list": "",
            "C_capsule_data_type": "LIB_SHROUD_capsule_data",
            "C_cfi_suffix": "_CFI",
            "C_custom_return_type": "",
            "C_header_filename": "wraplibrary.h",
            "C_header_filename_suffix": "h",
            "C_header_utility": "typeslibrary.h",
            "C_impl_filename": "wraplibrary.cpp",
            "C_impl_filename_suffix": "cpp",
            "C_impl_utility": "utillibrary.cpp",
            "C_local": "SHC_",
            "C_memory_dtor_function": "LIB_SHROUD_memory_destructor",
            "C_name_scope": "",
            "C_name_typedef": "",
            "C_post_call": "",
            "C_pre_call": "",
            "C_prefix": "LIB_",
            "C_result": "rv",
            "C_string_result_as_arg": "SHF_rv",
            "C_this": "self",
            "F_C_name": "-F_C_name-",
            "F_C_prefix": "c_",
            "F_C_pure_clause": "",
            "F_C_result_clause": "",
            "F_arg_c_call": "",
            "F_array_type": "LIB_SHROUD_array",
            "F_capsule_data_type": "LIB_SHROUD_capsule_data",
            "F_capsule_delete_function": "SHROUD_capsule_delete",
            "F_capsule_final_function": "SHROUD_capsule_final",
            "F_capsule_type": "LIB_SHROUD_capsule",
            "F_derived_member": "cxxmem",
            "F_derived_member_base": "",
            "F_filename_suffix": "f",
            "F_impl_filename": "wrapflibrary.f",
            "F_module_name": "library_mod",
            "F_name_assign": "assign",
            "F_name_associated": "associated",
            "F_name_final": "final",
            "F_name_instance_get": "get_instance",
            "F_name_instance_set": "set_instance",
            "F_name_scope": "",
            "F_name_typedef": "",
            "F_pure_clause": "",
            "F_result": "SHT_rv",
            "F_result_clause": "",
            "F_result_ptr": "SHT_prv",
            "F_string_result_as_arg": "",
            "F_this": "obj",
            "LUA_header_filename_suffix": "hpp",
            "LUA_impl_filename_suffix": "cpp",
            "LUA_prefix": "l_",
            "LUA_result": "rv",
            "LUA_state_var": "L",
            "LUA_this_call": "",
            "PY_ARRAY_UNIQUE_SYMBOL": "SHROUD_LIBRARY_ARRAY_API",
            "PY_capsule_destructor_function": "PY_SHROUD_capsule_destructor",
            "PY_dtor_context_array": "PY_SHROUD_capsule_context",
            "PY_dtor_context_typedef": "PY_SHROUD_dtor_context",
            "PY_fetch_context_function": "PY_SHROUD_fetch_context",
            "PY_helper_prefix": "SHROUD_",
            "PY_helper_static": "static ",
            "PY_module_init": "library",
            "PY_module_name": "library",
            "PY_module_scope": "library",
            "PY_numpy_array_capsule_name": "PY_array_dtor",
            "PY_prefix": "PY_",
            "PY_release_memory_function": "PY_SHROUD_release_memory",
            "PY_result": "SHTPy_rv",
            "PY_this_call": "",
            "PY_type_dtor": "idtor",
            "PY_type_obj": "obj",
            "PY_typedef_converter": "LIB_SHROUD_converter_value",
            "PY_value_init": "{NULL, NULL, NULL, NULL, 0}",
            "YAML_type_filename": "library_types.yaml",
            "c_array_shape": "",
            "c_array_size": "1",
            "c_blanknull": "0",
            "c_char_len": "0",
            "c_temp": "SHT_",
            "c_temp_extents_decl": "",
            "c_temp_extents_use": "NULL",
            "c_temp_lower_decl": "",
            "c_temp_lower_use": "NULL",
            "cast1": ">\t(",
            "cast2": ")",
            "cast_const": "const_cast<",
            "cast_reinterpret": "reinterpret_cast<",
            "cast_static": "static_cast<",
            "class_scope": "",
            "cxx_class": "",
            "f_array_allocate": "",
            "f_array_shape": "",
            "f_assumed_shape": "",
            "f_c_dimension": "",
            "f_char_len": ":",
            "f_char_type": "",
            "f_declare_shape_array": "",
            "f_declare_shape_prefix": "SHAPE_",
            "f_get_shape_array": "",
            "f_intent": "",
            "f_kind": "",
            "f_shape_var": "",
            "f_type": "",
            "f_var_shape": "",
            "file_scope": "library",
            "function_suffix": "",
            "library": "library",
            "library_lower": "library",
            "library_upper": "LIBRARY",
            "namespace_scope": "",
            "nullptr": "nullptr",
            "rank": "0",
            "stdlib": "std::",
            "template_suffix": "",
            "void_proto": ""
        }
    },
    "types": {
        "--template-parameter--": {
            "base": "template",
            "c_type": "c_T",
            "cxx_type": "cxx_T",
            "f_type": "f_T",
            "flat_name": "cxx_T",
            "sgroup": "template"
        },
        "MPI_Comm": {
            "c_header": [
                "mpi.h"
            ],
            "c_to_cxx": "MPI_Comm_f2c({c_var})",
            "c_type": "MPI_Fint",
            "cxx_header": [
                "mpi.h"
            ],
            "cxx_to_c": "MPI_Comm_c2f({cxx_var})",
            "cxx_type": "MPI_Comm",
            "f_c_module": {
                "iso_c_binding": [
                    "C_INT"
                ]
            },
            "f_c_type": "integer(C_INT)",
            "f_kind": "C_INT",
            "f_type": "integer",
            "flat_name": "MPI_Comm"
        },
        "bool": {
            "LUA_pop": "lua_toboolean({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushboolean({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TBOOLEAN",
            "PYN_typenum": "NPY_BOOL",
            "PY_PyTypeObject": "PyBool_Type",
            "base": "bool",
            "c_header": [
                "<stdbool.h>"
            ],
            "c_type": "bool",
            "cfi_type": "CFI_type_Bool",
            "cxx_type": "bool",
            "f_c_type": "logical(C_BOOL)",
            "f_kind": "C_BOOL",
            "f_module": {
                "iso_c_binding": [
                    "C_BOOL"
                ]
            },
            "f_type": "logical",
            "flat_name": "bool",
            "sgroup": "bool",
            "sh_type": "SH_TYPE_BOOL"
        },
        "char": {
            "LUA_pop": "lua_tostring({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushstring({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TSTRING",
            "PYN_typenum": "NPY_INTP",
            "PY_ctor": "PyString_FromString({ctor_expr})",
            "PY_format": "s",
            "base": "string",
            "c_type": "char",
            "cxx_type": "char",
            "f_c_module": {
                "iso_c_binding": [
                    "C_CHAR"
                ]
            },
            "f_c_type": "character(kind=C_CHAR)",
            "f_kind": "C_CHAR",
            "f_type": "character(*)",
            "flat_name": "char",
            "sgroup": "char"
        },
        "double": {
            "LUA_pop": "lua_tonumber({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushnumber({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_DOUBLE",
            "PY_ctor": "PyFloat_FromDouble({ctor_expr})",
            "PY_format": "d",
            "PY_get": "PyFloat_AsDouble({py_var})",
            "base": "real",
            "c_type": "double",
            "cfi_type": "CFI_type_double",
            "cxx_type": "double",
            "f_cast": "real({f_var}, C_DOUBLE)",
            "f_kind": "C_DOUBLE",
            "f_module": {
                "iso_c_binding": [
                    "C_DOUBLE"
                ]
            },
            "f_type": "real(C_DOUBLE)",
            "flat_name": "double",
            "sgroup": "native",
            "sh_type": "SH_TYPE_DOUBLE"
        },
        "double_complex": {
            "LUA_pop": "lua_tonumber({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushnumber({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_DOUBLE",
            "PY_build_arg": "&{ctype_var}",
            "PY_ctor": "PyComplex_FromDoubles(\t{ctor_expr})",
            "PY_format": "D",
            "PY_get": "PyComplex_AsCComplex({py_var})",
            "base": "complex",
            "c_header": [
                "<complex.h>"
            ],
            "c_type": "double complex",
            "cfi_type": "CFI_type_double_Complex",
            "cxx_header": [
                "<complex>"
            ],
            "cxx_to_pytype": "{ctype_var}.real = creal({cxx_var});\n{ctype_var}.imag = cimag({cxx_var});",
            "cxx_type": "std::complex<double>",
            "f_cast": "cmplx({f_var}, C_DOUBLE_COMPLEX)",
            "f_kind": "C_DOUBLE_COMPLEX",
            "f_module": {
                "iso_c_binding": [
                    "C_DOUBLE_COMPLEX"
                ]
            },
            "f_type": "complex(C_DOUBLE_COMPLEX)",
            "flat_name": "double_complex",
            "py_ctype": "Py_complex",
            "pytype_to_cxx": "{work_var}.real + {work_var}.imag * I",
            "pytype_to_pyctor": "creal({ctor_expr}), cimag({ctor_expr})",
            "sgroup": "native",
            "sh_type": "SH_TYPE_DOUBLE_COMPLEX"
        },
        "float": {
            "LUA_pop": "lua_tonumber({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushnumber({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_FLOAT",
            "PY_ctor": "PyFloat_FromDouble({ctor_expr})",
            "PY_format": "f",
            "PY_get": "PyFloat_AsDouble({py_var})",
            "base": "real",
            "c_type": "float",
            "cfi_type": "CFI_type_float",
            "cxx_type": "float",
            "f_cast": "real({f_var}, C_FLOAT)",
            "f_kind": "C_FLOAT",
            "f_module": {
                "iso_c_binding": [
                    "C_FLOAT"
                ]
            },
            "f_type": "real(C_FLOAT)",
            "flat_name": "float",
            "sgroup": "native",
            "sh_type": "SH_TYPE_FLOAT"
        },
        "float_complex": {
            "LUA_pop": "lua_tonumber({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushnumber({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_DOUBLE",
            "PY_build_arg": "&{ctype_var}",
            "PY_ctor": "PyComplex_FromDoubles(\t{ctor_expr})",
            "PY_format": "D",
            "PY_get": "PyComplex_AsCComplex({py_var})",
            "base": "complex",
            "c_header": [
                "<complex.h>"
            ],
            "c_type": "float complex",
            "cfi_type": "CFI_type_float_Complex",
            "cxx_header": [
                "<complex>"
            ],
            "cxx_to_pytype": "{py_var}.real = creal({cxx_var});\n{py_var}.imag = cimag({cxx_var});",
            "cxx_type": "std::complex<float>",
            "f_cast": "cmplx({f_var}, C_FLOAT_COMPLEX)",
            "f_kind": "C_FLOAT_COMPLEX",
            "f_module": {
                "iso_c_binding": [
                    "C_FLOAT_COMPLEX"
                ]
            },
            "f_type": "complex(C_FLOAT_COMPLEX)",
            "flat_name": "float_complex",
            "py_ctype": "Py_complex",
            "pytype_to_cxx": "{work_var}.real + {work_var}.imag * I",
            "pytype_to_pyctor": "creal({ctor_expr}), cimag({ctor_expr})",
            "sgroup": "native",
            "sh_type": "SH_TYPE_FLOAT_COMPLEX"
        },
        "int": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_type": "int",
            "cfi_type": "CFI_type_int",
            "cxx_type": "int",
            "f_cast": "int({f_var}, C_INT)",
            "f_kind": "C_INT",
            "f_module": {
                "iso_c_binding": [
                    "C_INT"
                ]
            },
            "f_type": "integer(C_INT)",
            "flat_name": "int",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT"
        },
        "int16_t": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT16",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_header": [
                "<stdint.h>"
            ],
            "c_type": "int16_t",
            "cfi_type": "CFI_type_int16_t",
            "cxx_header": [
                "<cstdint>"
            ],
            "cxx_type": "int16_t",
            "f_cast": "int({f_var}, C_INT16_t)",
            "f_kind": "C_INT16_T",
            "f_module": {
                "iso_c_binding": [
                    "C_INT16_T"
                ]
            },
            "f_type": "integer(C_INT16_T)",
            "flat_name": "int16_t",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT16_T"
        },
        "int32_t": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT32",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_header": [
                "<stdint.h>"
            ],
            "c_type": "int32_t",
            "cfi_type": "CFI_type_int32_t",
            "cxx_header": [
                "<cstdint>"
            ],
            "cxx_type": "int32_t",
            "f_cast": "int({f_var}, C_INT32_t)",
            "f_kind": "C_INT32_T",
            "f_module": {
                "iso_c_binding": [
                    "C_INT32_T"
                ]
            },
            "f_type": "integer(C_INT32_T)",
            "flat_name": "int32_t",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT32_T"
        },
        "int64_t": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT64",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "L",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_header": [
                "<stdint.h>"
            ],
            "c_type": "int64_t",
            "cfi_type": "CFI_type_int64_t",
            "cxx_header": [
                "<cstdint>"
            ],
            "cxx_type": "int64_t",
            "f_cast": "int({f_var}, C_INT64_t)",
            "f_kind": "C_INT64_T",
            "f_module": {
                "iso_c_binding": [
                    "C_INT64_T"
                ]
            },
            "f_type": "integer(C_INT64_T)",
            "flat_name": "int64_t",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT64_T"
        },
        "int8_t": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT8",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_header": [
                "<stdint.h>"
            ],
            "c_type": "int8_t",
            "cfi_type": "CFI_type_int8_t",
            "cxx_header": [
                "<cstdint>"
            ],
            "cxx_type": "int8_t",
            "f_cast": "int({f_var}, C_INT8_t)",
            "f_kind": "C_INT8_T",
            "f_module": {
                "iso_c_binding": [
                    "C_INT8_T"
                ]
            },
            "f_type": "integer(C_INT8_T)",
            "flat_name": "int8_t",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT8_T"
        },
        "long": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_LONG",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "l",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_type": "long",
            "cfi_type": "CFI_type_long",
            "cxx_type": "long",
            "f_cast": "int({f_var}, C_LONG)",
            "f_kind": "C_LONG",
            "f_module": {
                "iso_c_binding": [
                    "C_LONG"
                ]
            },
            "f_type": "integer(C_LONG)",
            "flat_name": "long",
            "sgroup": "native",
            "sh_type": "SH_TYPE_LONG"
        },
        "long_long": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_LONGLONG",
            "PY_format": "L",
            "base": "integer",
            "c_type": "long long",
            "cfi_type": "CFI_type_long_long",
            "cxx_type": "long long",
            "f_cast": "int({f_var}, C_LONG_LONG)",
            "f_kind": "C_LONG_LONG",
            "f_module": {
                "iso_c_binding": [
                    "C_LONG_LONG"
                ]
            },
            "f_type": "integer(C_LONG_LONG)",
            "flat_name": "long_long",
            "sgroup": "native",
            "sh_type": "SH_TYPE_LONG_LONG"
        },
        "short": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_SHORT",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "h",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_type": "short",
            "cfi_type": "CFI_type_short",
            "cxx_type": "short",
            "f_cast": "int({f_var}, C_SHORT)",
            "f_kind": "C_SHORT",
            "f_module": {
                "iso_c_binding": [
                    "C_SHORT"
                ]
            },
            "f_type": "integer(C_SHORT)",
            "flat_name": "short",
            "sgroup": "native",
            "sh_type": "SH_TYPE_SHORT"
        },
        "size_t": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PY_ctor": "PyInt_FromSize_t({ctor_expr})",
            "PY_format": "n",
            "base": "integer",
            "c_header": [
                "<stddef.h>"
            ],
            "c_type": "size_t",
            "cfi_type": "CFI_type_size_t",
            "cxx_header": [
                "<cstddef>"
            ],
            "cxx_type": "size_t",
            "f_cast": "int({f_var}, C_SIZE_T)",
            "f_kind": "C_SIZE_T",
            "f_module": {
                "iso_c_binding": [
                    "C_SIZE_T"
                ]
            },
            "f_type": "integer(C_SIZE_T)",
            "flat_name": "size_t",
            "sgroup": "native",
            "sh_type": "SH_TYPE_SIZE_T"
        },
        "std::string": {
            "LUA_pop": "lua_tostring({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushstring({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TSTRING",
            "PY_build_arg": "{cxx_var}{cxx_member}data(),\t {cxx_var}{cxx_member}size()",
            "PY_build_format": "s#",
            "PY_ctor": "PyString_FromStringAndSize({ctor_expr})",
            "PY_format": "s",
            "base": "string",
            "c_type": "char",
            "cxx_to_c": "{cxx_var}{cxx_member}c_str()",
            "cxx_type": "std::string",
            "f_c_module": {
                "iso_c_binding": [
                    "C_CHAR"
                ]
            },
            "f_c_type": "character(kind=C_CHAR)",
            "f_kind": "C_CHAR",
            "f_type": "character(*)",
            "flat_name": "std_string",
            "impl_header": [
                "<string>"
            ],
            "sgroup": "string"
        },
        "std::vector": {
            "base": "vector",
            "cxx_header": [
                "<vector>"
            ],
            "cxx_type": "std::vector<{cxx_T}>",
            "flat_name": "std_vector_{cxx_T}",
            "impl_header": [
                "<vector>"
            ],
            "sgroup": "vector"
        },
        "uint16_t": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_UINT16",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_header": [
                "<stdint.h>"
            ],
            "c_type": "uint16_t",
            "cfi_type": "CFI_type_int16_t",
            "cxx_header": [
                "<cstdint>"
            ],
            "cxx_type": "uint16_t",
            "f_cast": "int({f_var}, C_INT16_t)",
            "f_kind": "C_INT16_T",
            "f_module": {
                "iso_c_binding": [
                    "C_INT16_T"
                ]
            },
            "f_type": "integer(C_INT16_T)",
            "flat_name": "uint16_t",
            "sgroup": "native",
            "sh_type": "SH_TYPE_UINT16_T"
        },
        "uint32_t": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_UINT32",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_header": [
                "<stdint.h>"
            ],
            "c_type": "uint32_t",
            "cfi_type": "CFI_type_int32_t",
            "cxx_header": [
                "<cstdint>"
            ],
            "cxx_type": "uint32_t",
            "f_cast": "int({f_var}, C_INT32_t)",
            "f_kind": "C_INT32_T",
            "f_module": {
                "iso_c_binding": [
                    "C_INT32_T"
                ]
            },
            "f_type": "integer(C_INT32_T)",
            "flat_name": "uint32_t",
            "sgroup": "native",
            "sh_type": "SH_TYPE_UINT32_T"
        },
        "uint64_t": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_UINT64",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "L",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_header": [
                "<stdint.h>"
            ],
            "c_type": "uint64_t",
            "cfi_type": "CFI_type_int64_t",
            "cxx_header": [
                "<cstdint>"
            ],
            "cxx_type": "uint64_t",
            "f_cast": "int({f_var}, C_INT64_t)",
            "f_kind": "C_INT64_T",
            "f_module": {
                "iso_c_binding": [
                    "C_INT64_T"
                ]
            },
            "f_type": "integer(C_INT64_T)",
            "flat_name": "uint64_t",
            "sgroup": "native",
            "sh_type": "SH_TYPE_UINT64_T"
        },
        "uint8_t": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_UINT8",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_header": [
                "<stdint.h>"
            ],
            "c_type": "uint8_t",
            "cfi_type": "CFI_type_int8_t",
            "cxx_header": [
                "<cstdint>"
            ],
            "cxx_type": "uint8_t",
            "f_cast": "int({f_var}, C_INT8_t)",
            "f_kind": "C_INT8_T",
            "f_module": {
                "iso_c_binding": [
                    "C_INT8_T"
                ]
            },
            "f_type": "integer(C_INT8_T)",
            "flat_name": "uint8_t",
            "sgroup": "native",
            "sh_type": "SH_TYPE_UINT8_T"
        },
        "unsigned_int": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "I",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_type": "unsigned int",
            "cfi_type": "CFI_type_int",
            "cxx_type": "unsigned int",
            "f_cast": "int({f_var}, C_INT)",
            "f_kind": "C_INT",
            "f_module": {
                "iso_c_binding": [
                    "C_INT"
                ]
            },
            "f_type": "integer(C_INT)",
            "flat_name": "unsigned_int",
            "sgroup": "native",
            "sh_type": "SH_TYPE_UNSIGNED_INT"
        },
        "unsigned_long": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_LONG",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "k",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_type": "unsigned long",
            "cfi_type": "CFI_type_long",
            "cxx_type": "unsigned long",
            "f_cast": "int({f_var}, C_LONG)",
            "f_kind": "C_LONG",
            "f_module": {
                "iso_c_binding": [
                    "C_LONG"
                ]
            },
            "f_type": "integer(C_LONG)",
            "flat_name": "unsigned_long",
            "sgroup": "native",
            "sh_type": "SH_TYPE_UNSIGNED_LONG"
        },
        "unsigned_long_long": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_LONGLONG",
            "PY_format": "K",
            "base": "integer",
            "c_type": "unsigned long long",
            "cfi_type": "CFI_type_long_long",
            "cxx_type": "unsigned long long",
            "f_cast": "int({f_var}, C_LONG_LONG)",
            "f_kind": "C_LONG_LONG",
            "f_module": {
                "iso_c_binding": [
                    "C_LONG_LONG"
                ]
            },
            "f_type": "integer(C_LONG_LONG)",
            "flat_name": "unsigned_long_long",
            "sgroup": "native",
            "sh_type": "SH_TYPE_UNSIGNED_LONG_LONG"
        },
        "unsigned_short": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_SHORT",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "H",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_type": "unsigned short",
            "cfi_type": "CFI_type_short",
            "cxx_type": "unsigned short",
            "f_cast": "int({f_var}, C_SHORT)",
            "f_kind": "C_SHORT",
            "f_module": {
                "iso_c_binding": [
                    "C_SHORT"
                ]
            },
            "f_type": "integer(C_SHORT)",
            "flat_name": "unsigned_short",
            "sgroup": "native",
            "sh_type": "SH_TYPE_UNSIGNED_SHORT"
        },
        "void": {
            "PY_ctor": "PyCapsule_New({ctor_expr}, NULL, NULL)",
            "base": "void",
            "c_type": "void",
            "cfi_type": "CFI_type_intptr_t",
            "cxx_type": "void",
            "f_c_module": {
                "iso_c_binding": [
                    "C_PTR"
                ]
            },
            "f_type": "type(C_PTR)",
            "flat_name": "void",
            "sgroup": "void",
            "sh_type": "SH_TYPE_CPTR"
        }
    }
}