{
    "<NOTICE>": "This file is generated by Shroud nowrite-version and is useful for debugging.",
    "library": {
        "copyright": [
            "Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "cxx_header": [
            "typemap.hpp"
        ],
        "functions": [
            {
                "<FUNCTION>": "0 ****************************************",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "intent": "function"
                        },
                        "name": "passIndex",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "i1",
                                    "typemap_name": "IndexType"
                                },
                                "specifier": [
                                    "IndexType"
                                ],
                                "typemap_name": "IndexType"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "out"
                                    },
                                    "metaattrs": {
                                        "intent": "out"
                                    },
                                    "name": "i2",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "IndexType"
                                },
                                "specifier": [
                                    "IndexType"
                                ],
                                "typemap_name": "IndexType"
                            }
                        ],
                        "typemap_name": "bool"
                    },
                    "specifier": [
                        "bool"
                    ],
                    "typemap_name": "bool"
                },
                "decl": "bool passIndex(IndexType i1, IndexType *i2+intent(out))",
                "declgen": "bool passIndex(IndexType i1 +value, IndexType * i2 +intent(out))",
                "fortran_generic": [
                    {
                        "decls": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "i1",
                                    "typemap_name": "int32_t"
                                },
                                "specifier": [
                                    "int32_t"
                                ],
                                "typemap_name": "int32_t"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "out"
                                    },
                                    "metaattrs": {
                                        "intent": "out"
                                    },
                                    "name": "i2",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "IndexType"
                                },
                                "specifier": [
                                    "IndexType"
                                ],
                                "typemap_name": "IndexType"
                            }
                        ],
                        "function_suffix": "_32",
                        "generic": "(int32_t i1)"
                    },
                    {
                        "decls": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "i1",
                                    "typemap_name": "int64_t"
                                },
                                "specifier": [
                                    "int64_t"
                                ],
                                "typemap_name": "int64_t"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "out"
                                    },
                                    "metaattrs": {
                                        "intent": "out"
                                    },
                                    "name": "i2",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "IndexType"
                                },
                                "specifier": [
                                    "IndexType"
                                ],
                                "typemap_name": "IndexType"
                            }
                        ],
                        "function_suffix": "_64",
                        "generic": "(int64_t i1)"
                    }
                ],
                "name": "passIndex",
                "options": {},
                "wrap": {
                    "c": true
                },
                "zz_fmtargs": {
                    "i1": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "IndexType",
                            "c_var": "i1",
                            "cfi_type": "CFI_type_other",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&i1",
                            "cxx_type": "IndexType",
                            "cxx_var": "i1",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "c_in_native_scalar",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_C_var": "i1",
                            "c_var": "i1",
                            "f_c_module_line": "typemap_mod:INDEXTYPE",
                            "f_intent": "IN",
                            "f_kind": "INDEXTYPE",
                            "f_type": "integer(INDEXTYPE)",
                            "f_var": "i1",
                            "sh_type": "SH_TYPE_OTHER"
                        }
                    },
                    "i2": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_type": "IndexType",
                            "c_var": "i2",
                            "cfi_type": "CFI_type_other",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "i2",
                            "cxx_type": "IndexType",
                            "cxx_var": "i2",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "c_out_native_*",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_C_var": "i2",
                            "c_var": "i2",
                            "f_c_module_line": "typemap_mod:INDEXTYPE",
                            "f_intent": "OUT",
                            "f_kind": "INDEXTYPE",
                            "f_type": "integer(INDEXTYPE)",
                            "f_var": "i2",
                            "sh_type": "SH_TYPE_OTHER"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_call_list": "i1,\t i2",
                    "C_name": "TYP_passIndex",
                    "C_name_api": "passIndex",
                    "C_prototype": "IndexType i1,\t IndexType * i2",
                    "C_return_type": "bool",
                    "F_C_arguments": "i1,\t i2",
                    "F_C_name": "c_pass_index",
                    "F_C_result_clause": "\fresult(SHT_rv)",
                    "F_C_subprogram": "function",
                    "F_name_api": "pass_index",
                    "cxx_rv_decl": "bool SHC_rv",
                    "function_name": "passIndex"
                },
                "zz_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_get_value": "",
                        "c_type": "bool",
                        "c_var": "SHC_rv",
                        "cfi_type": "CFI_type_Bool",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHC_rv",
                        "cxx_type": "bool",
                        "cxx_var": "SHC_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_BOOL",
                        "stmt0": "c_function_bool_scalar",
                        "stmt1": "c_function"
                    },
                    "fmtf": {
                        "F_C_var": "SHT_rv",
                        "c_var": "SHT_rv",
                        "f_intent": "OUT",
                        "f_kind": "C_BOOL",
                        "f_type": "logical",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_BOOL"
                    }
                }
            },
            {
                "<FUNCTION>": "3 ****************************************",
                "C_force_wrapper": "True",
                "C_generated_path": [
                    "fortran_generic"
                ],
                "_generated": "fortran_generic",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "intent": "function"
                        },
                        "name": "passIndex",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "i1",
                                    "typemap_name": "int32_t"
                                },
                                "specifier": [
                                    "int32_t"
                                ],
                                "typemap_name": "int32_t"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "out"
                                    },
                                    "metaattrs": {
                                        "intent": "out"
                                    },
                                    "name": "i2",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "IndexType"
                                },
                                "specifier": [
                                    "IndexType"
                                ],
                                "typemap_name": "IndexType"
                            }
                        ],
                        "typemap_name": "bool"
                    },
                    "specifier": [
                        "bool"
                    ],
                    "typemap_name": "bool"
                },
                "decl": "bool passIndex(IndexType i1, IndexType *i2+intent(out))",
                "declgen": "bool passIndex(int32_t i1 +value, IndexType * i2 +intent(out))",
                "name": "passIndex",
                "options": {},
                "wrap": {
                    "c": true,
                    "f_c": true,
                    "fortran": true
                },
                "zz_fmtargs": {
                    "i1": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "int32_t",
                            "c_var": "i1",
                            "cfi_type": "CFI_type_int32_t",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&i1",
                            "cxx_type": "int32_t",
                            "cxx_var": "i1",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT32_T",
                            "stmt0": "c_in_native_scalar",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_C_var": "i1",
                            "c_var": "i1",
                            "f_intent": "IN",
                            "f_kind": "C_INT32_T",
                            "f_type": "integer(C_INT32_T)",
                            "f_var": "i1",
                            "sh_type": "SH_TYPE_INT32_T",
                            "stmt0": "f_in_native_scalar",
                            "stmt1": "f_default",
                            "stmtc0": "c_in_native_scalar",
                            "stmtc1": "c_default"
                        }
                    },
                    "i2": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_type": "IndexType",
                            "c_var": "i2",
                            "cfi_type": "CFI_type_other",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "i2",
                            "cxx_type": "IndexType",
                            "cxx_var": "i2",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "c_out_native_*",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_C_var": "i2",
                            "c_var": "i2",
                            "f_c_module_line": "typemap_mod:INDEXTYPE",
                            "f_intent": "OUT",
                            "f_kind": "INDEXTYPE",
                            "f_type": "integer(INDEXTYPE)",
                            "f_var": "i2",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "f_out_native_*",
                            "stmt1": "f_out_native_*",
                            "stmtc0": "c_out_native_*",
                            "stmtc1": "c_default"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_call_list": "i1,\t i2",
                    "C_name": "TYP_passIndex_32",
                    "C_name_api": "passIndex",
                    "C_prototype": "int32_t i1,\t IndexType * i2",
                    "C_return_type": "bool",
                    "F_C_arguments": "i1,\t i2",
                    "F_C_call": "c_pass_index_32",
                    "F_C_name": "c_pass_index_32",
                    "F_C_result_clause": "\fresult(SHT_rv)",
                    "F_C_subprogram": "function",
                    "F_arg_c_call": "i1,\t i2",
                    "F_arguments": "i1,\t i2",
                    "F_name_api": "pass_index",
                    "F_name_function": "pass_index_32",
                    "F_name_generic": "pass_index",
                    "F_name_impl": "pass_index_32",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "cxx_rv_decl": "bool SHC_rv",
                    "function_name": "passIndex",
                    "function_suffix": "_32"
                },
                "zz_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_get_value": "",
                        "c_type": "bool",
                        "c_var": "SHC_rv",
                        "cfi_type": "CFI_type_Bool",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHC_rv",
                        "cxx_type": "bool",
                        "cxx_var": "SHC_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_BOOL",
                        "stmt0": "c_function_bool_scalar",
                        "stmt1": "c_function"
                    },
                    "fmtf": {
                        "F_C_var": "SHT_rv",
                        "c_var": "SHT_rv",
                        "cxx_type": "bool",
                        "f_intent": "OUT",
                        "f_kind": "C_BOOL",
                        "f_type": "logical",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_BOOL",
                        "stmt0": "f_function_bool_scalar",
                        "stmt1": "f_function_bool",
                        "stmtc0": "c_function_bool_scalar",
                        "stmtc1": "c_function"
                    }
                }
            },
            {
                "<FUNCTION>": "4 ****************************************",
                "C_force_wrapper": "True",
                "C_generated_path": [
                    "fortran_generic"
                ],
                "_generated": "fortran_generic",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "intent": "function"
                        },
                        "name": "passIndex",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "i1",
                                    "typemap_name": "int64_t"
                                },
                                "specifier": [
                                    "int64_t"
                                ],
                                "typemap_name": "int64_t"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "out"
                                    },
                                    "metaattrs": {
                                        "intent": "out"
                                    },
                                    "name": "i2",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "IndexType"
                                },
                                "specifier": [
                                    "IndexType"
                                ],
                                "typemap_name": "IndexType"
                            }
                        ],
                        "typemap_name": "bool"
                    },
                    "specifier": [
                        "bool"
                    ],
                    "typemap_name": "bool"
                },
                "decl": "bool passIndex(IndexType i1, IndexType *i2+intent(out))",
                "declgen": "bool passIndex(int64_t i1 +value, IndexType * i2 +intent(out))",
                "name": "passIndex",
                "options": {},
                "wrap": {
                    "c": true,
                    "f_c": true,
                    "fortran": true
                },
                "zz_fmtargs": {
                    "i1": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "int64_t",
                            "c_var": "i1",
                            "cfi_type": "CFI_type_int64_t",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&i1",
                            "cxx_type": "int64_t",
                            "cxx_var": "i1",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT64_T",
                            "stmt0": "c_in_native_scalar",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_C_var": "i1",
                            "c_var": "i1",
                            "f_intent": "IN",
                            "f_kind": "C_INT64_T",
                            "f_type": "integer(C_INT64_T)",
                            "f_var": "i1",
                            "sh_type": "SH_TYPE_INT64_T",
                            "stmt0": "f_in_native_scalar",
                            "stmt1": "f_default",
                            "stmtc0": "c_in_native_scalar",
                            "stmtc1": "c_default"
                        }
                    },
                    "i2": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_type": "IndexType",
                            "c_var": "i2",
                            "cfi_type": "CFI_type_other",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "i2",
                            "cxx_type": "IndexType",
                            "cxx_var": "i2",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "c_out_native_*",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_C_var": "i2",
                            "c_var": "i2",
                            "f_c_module_line": "typemap_mod:INDEXTYPE",
                            "f_intent": "OUT",
                            "f_kind": "INDEXTYPE",
                            "f_type": "integer(INDEXTYPE)",
                            "f_var": "i2",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "f_out_native_*",
                            "stmt1": "f_out_native_*",
                            "stmtc0": "c_out_native_*",
                            "stmtc1": "c_default"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_call_list": "i1,\t i2",
                    "C_name": "TYP_passIndex_64",
                    "C_name_api": "passIndex",
                    "C_prototype": "int64_t i1,\t IndexType * i2",
                    "C_return_type": "bool",
                    "F_C_arguments": "i1,\t i2",
                    "F_C_call": "c_pass_index_64",
                    "F_C_name": "c_pass_index_64",
                    "F_C_result_clause": "\fresult(SHT_rv)",
                    "F_C_subprogram": "function",
                    "F_arg_c_call": "i1,\t i2",
                    "F_arguments": "i1,\t i2",
                    "F_name_api": "pass_index",
                    "F_name_function": "pass_index_64",
                    "F_name_generic": "pass_index",
                    "F_name_impl": "pass_index_64",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "cxx_rv_decl": "bool SHC_rv",
                    "function_name": "passIndex",
                    "function_suffix": "_64"
                },
                "zz_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_get_value": "",
                        "c_type": "bool",
                        "c_var": "SHC_rv",
                        "cfi_type": "CFI_type_Bool",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_nonconst_ptr": "&SHC_rv",
                        "cxx_type": "bool",
                        "cxx_var": "SHC_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_BOOL",
                        "stmt0": "c_function_bool_scalar",
                        "stmt1": "c_function"
                    },
                    "fmtf": {
                        "F_C_var": "SHT_rv",
                        "c_var": "SHT_rv",
                        "cxx_type": "bool",
                        "f_intent": "OUT",
                        "f_kind": "C_BOOL",
                        "f_type": "logical",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_BOOL",
                        "stmt0": "f_function_bool_scalar",
                        "stmt1": "f_function_bool",
                        "stmtc0": "c_function_bool_scalar",
                        "stmtc1": "c_function"
                    }
                }
            },
            {
                "<FUNCTION>": "1 ****************************************",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "intent": "subroutine"
                        },
                        "name": "passIndex2",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "i1",
                                    "typemap_name": "IndexType"
                                },
                                "specifier": [
                                    "IndexType"
                                ],
                                "typemap_name": "IndexType"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void passIndex2(IndexType i1)",
                "declgen": "void passIndex2(IndexType i1 +value)",
                "fortran_generic": [
                    {
                        "decls": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "i1",
                                    "typemap_name": "int32_t"
                                },
                                "specifier": [
                                    "int32_t"
                                ],
                                "typemap_name": "int32_t"
                            }
                        ],
                        "function_suffix": "_32",
                        "generic": "(int32_t i1)"
                    },
                    {
                        "decls": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "i1",
                                    "typemap_name": "int64_t"
                                },
                                "specifier": [
                                    "int64_t"
                                ],
                                "typemap_name": "int64_t"
                            }
                        ],
                        "function_suffix": "_64",
                        "generic": "(int64_t i1)"
                    }
                ],
                "name": "passIndex2",
                "options": {},
                "wrap": {
                    "c": true,
                    "f_c": true
                },
                "zz_fmtargs": {
                    "i1": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "IndexType",
                            "c_var": "i1",
                            "cfi_type": "CFI_type_other",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&i1",
                            "cxx_type": "IndexType",
                            "cxx_var": "i1",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "c_in_native_scalar",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_C_var": "i1",
                            "c_var": "i1",
                            "f_c_module_line": "typemap_mod:INDEXTYPE",
                            "f_intent": "IN",
                            "f_kind": "INDEXTYPE",
                            "f_type": "integer(INDEXTYPE)",
                            "f_var": "i1",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "f_in_native_scalar",
                            "stmt1": "f_default",
                            "stmtc0": "c_in_native_scalar",
                            "stmtc1": "c_default"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_call_list": "i1",
                    "C_name": "TYP_passIndex2",
                    "C_name_api": "passIndex2",
                    "C_prototype": "IndexType i1",
                    "C_return_type": "void",
                    "F_C_arguments": "i1",
                    "F_C_name": "c_pass_index2",
                    "F_C_subprogram": "subroutine",
                    "F_name_api": "pass_index2",
                    "function_name": "passIndex2",
                    "stmt0": "c_subroutine",
                    "stmt1": "c_subroutine"
                }
            },
            {
                "<FUNCTION>": "5 ****************************************",
                "C_generated_path": [
                    "fortran_generic"
                ],
                "_PTR_F_C_index": "1",
                "_generated": "fortran_generic",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "intent": "subroutine"
                        },
                        "name": "passIndex2",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "i1",
                                    "typemap_name": "int32_t"
                                },
                                "specifier": [
                                    "int32_t"
                                ],
                                "typemap_name": "int32_t"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void passIndex2(IndexType i1)",
                "declgen": "void passIndex2(int32_t i1 +value)",
                "name": "passIndex2",
                "options": {},
                "wrap": {
                    "fortran": true
                },
                "zz_fmtdict": {
                    "C_name_api": "passIndex2",
                    "F_C_call": "c_pass_index2",
                    "F_arg_c_call": "int(i1, INDEXTYPE)",
                    "F_arguments": "i1",
                    "F_name_api": "pass_index2",
                    "F_name_function": "pass_index2_32",
                    "F_name_generic": "pass_index2",
                    "F_name_impl": "pass_index2_32",
                    "F_subprogram": "subroutine",
                    "function_name": "passIndex2",
                    "function_suffix": "_32",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_subroutine",
                    "stmtc0": "c_subroutine",
                    "stmtc1": "c_subroutine"
                }
            },
            {
                "<FUNCTION>": "6 ****************************************",
                "C_generated_path": [
                    "fortran_generic"
                ],
                "_PTR_F_C_index": "1",
                "_generated": "fortran_generic",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "intent": "subroutine"
                        },
                        "name": "passIndex2",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "i1",
                                    "typemap_name": "int64_t"
                                },
                                "specifier": [
                                    "int64_t"
                                ],
                                "typemap_name": "int64_t"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void passIndex2(IndexType i1)",
                "declgen": "void passIndex2(int64_t i1 +value)",
                "name": "passIndex2",
                "options": {},
                "wrap": {
                    "fortran": true
                },
                "zz_fmtdict": {
                    "C_name_api": "passIndex2",
                    "F_C_call": "c_pass_index2",
                    "F_arg_c_call": "int(i1, INDEXTYPE)",
                    "F_arguments": "i1",
                    "F_name_api": "pass_index2",
                    "F_name_function": "pass_index2_64",
                    "F_name_generic": "pass_index2",
                    "F_name_impl": "pass_index2_64",
                    "F_subprogram": "subroutine",
                    "function_name": "passIndex2",
                    "function_suffix": "_64",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_subroutine",
                    "stmtc0": "c_subroutine",
                    "stmtc1": "c_subroutine"
                }
            },
            {
                "<FUNCTION>": "2 ****************************************",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "intent": "subroutine"
                        },
                        "name": "passFloat",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "f1",
                                    "typemap_name": "FloatType"
                                },
                                "specifier": [
                                    "FloatType"
                                ],
                                "typemap_name": "FloatType"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void passFloat(FloatType f1);",
                "declgen": "void passFloat(FloatType f1 +value)",
                "fortran_generic": [
                    {
                        "decls": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "f1",
                                    "typemap_name": "float"
                                },
                                "specifier": [
                                    "float"
                                ],
                                "typemap_name": "float"
                            }
                        ],
                        "function_suffix": "_float",
                        "generic": "(float f1)"
                    },
                    {
                        "decls": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "f1",
                                    "typemap_name": "double"
                                },
                                "specifier": [
                                    "double"
                                ],
                                "typemap_name": "double"
                            }
                        ],
                        "function_suffix": "_double",
                        "generic": "(double f1)"
                    }
                ],
                "name": "passFloat",
                "options": {},
                "wrap": {
                    "c": true,
                    "f_c": true
                },
                "zz_fmtargs": {
                    "f1": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_type": "FloatType",
                            "c_var": "f1",
                            "cfi_type": "CFI_type_other",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_nonconst_ptr": "&f1",
                            "cxx_type": "FloatType",
                            "cxx_var": "f1",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "c_in_native_scalar",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_C_var": "f1",
                            "c_var": "f1",
                            "f_c_module_line": "typemap_mod:FLOATTYPE",
                            "f_intent": "IN",
                            "f_kind": "FLOATTYPE",
                            "f_type": "real(FLOATTYPE)",
                            "f_var": "f1",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "f_in_native_scalar",
                            "stmt1": "f_default",
                            "stmtc0": "c_in_native_scalar",
                            "stmtc1": "c_default"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_call_list": "f1",
                    "C_name": "TYP_passFloat",
                    "C_name_api": "passFloat",
                    "C_prototype": "FloatType f1",
                    "C_return_type": "void",
                    "F_C_arguments": "f1",
                    "F_C_name": "c_pass_float",
                    "F_C_subprogram": "subroutine",
                    "F_name_api": "pass_float",
                    "function_name": "passFloat",
                    "stmt0": "c_subroutine",
                    "stmt1": "c_subroutine"
                }
            },
            {
                "<FUNCTION>": "7 ****************************************",
                "C_generated_path": [
                    "fortran_generic"
                ],
                "_PTR_F_C_index": "2",
                "_generated": "fortran_generic",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "intent": "subroutine"
                        },
                        "name": "passFloat",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "f1",
                                    "typemap_name": "float"
                                },
                                "specifier": [
                                    "float"
                                ],
                                "typemap_name": "float"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void passFloat(FloatType f1);",
                "declgen": "void passFloat(float f1 +value)",
                "name": "passFloat",
                "options": {},
                "wrap": {
                    "fortran": true
                },
                "zz_fmtdict": {
                    "C_name_api": "passFloat",
                    "F_C_call": "c_pass_float",
                    "F_arg_c_call": "real(f1, FLOATTYPE)",
                    "F_arguments": "f1",
                    "F_name_api": "pass_float",
                    "F_name_function": "pass_float_float",
                    "F_name_generic": "pass_float",
                    "F_name_impl": "pass_float_float",
                    "F_subprogram": "subroutine",
                    "function_name": "passFloat",
                    "function_suffix": "_float",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_subroutine",
                    "stmtc0": "c_subroutine",
                    "stmtc1": "c_subroutine"
                }
            },
            {
                "<FUNCTION>": "8 ****************************************",
                "C_generated_path": [
                    "fortran_generic"
                ],
                "_PTR_F_C_index": "2",
                "_generated": "fortran_generic",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "intent": "subroutine"
                        },
                        "name": "passFloat",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "value": true
                                    },
                                    "metaattrs": {
                                        "intent": "in"
                                    },
                                    "name": "f1",
                                    "typemap_name": "double"
                                },
                                "specifier": [
                                    "double"
                                ],
                                "typemap_name": "double"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void passFloat(FloatType f1);",
                "declgen": "void passFloat(double f1 +value)",
                "name": "passFloat",
                "options": {},
                "wrap": {
                    "fortran": true
                },
                "zz_fmtdict": {
                    "C_name_api": "passFloat",
                    "F_C_call": "c_pass_float",
                    "F_arg_c_call": "real(f1, FLOATTYPE)",
                    "F_arguments": "f1",
                    "F_name_api": "pass_float",
                    "F_name_function": "pass_float_double",
                    "F_name_generic": "pass_float",
                    "F_name_impl": "pass_float_double",
                    "F_subprogram": "subroutine",
                    "function_name": "passFloat",
                    "function_suffix": "_double",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_subroutine",
                    "stmtc0": "c_subroutine",
                    "stmtc1": "c_subroutine"
                }
            }
        ],
        "language": "cxx",
        "scope_file": [
            "typemap"
        ],
        "wrap": {
            "c": true,
            "fortran": true
        }
    }
}