{
    "<NOTICE>": "This file is generated by Shroud nowrite-version and is useful for debugging.",
    "library": {
        "class_map": [
            "Class2",
            "outer1_class0",
            "outer2_class0",
            "three_Class1"
        ],
        "classes": [
            {
                "<CLASS>": "****************************************",
                "cxx_header": [],
                "functions": [
                    {
                        "<FUNCTION>": "0 ****************************************",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "subroutine"
                                },
                                "name": "method1",
                                "params": [
                                    {
                                        "declarator": {
                                            "attrs": {
                                                "value": true
                                            },
                                            "metaattrs": {
                                                "intent": "in"
                                            },
                                            "name": "comm",
                                            "typemap_name": "MPI_Comm"
                                        },
                                        "specifier": [
                                            "MPI_Comm"
                                        ],
                                        "typemap_name": "MPI_Comm"
                                    }
                                ],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void method1(MPI_Comm comm)",
                        "declgen": "void method1(MPI_Comm comm +value)",
                        "name": "method1",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "f_c": true,
                            "fortran": true
                        },
                        "zz_fmtargs": {
                            "comm": {
                                "fmtc": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_type": "MPI_Fint",
                                    "c_var": "comm",
                                    "cfi_type": "CFI_type_other",
                                    "cxx_addr": "&",
                                    "cxx_decl": "MPI_Comm SHCXX_comm",
                                    "cxx_member": ".",
                                    "cxx_nonconst_ptr": "&SHCXX_comm",
                                    "cxx_type": "MPI_Comm",
                                    "cxx_val": "MPI_Comm_f2c(comm)",
                                    "cxx_var": "SHCXX_comm",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "c_in_unknown_scalar",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_C_var": "comm",
                                    "c_var": "comm",
                                    "f_intent": "IN",
                                    "f_kind": "C_INT",
                                    "f_type": "integer",
                                    "f_var": "comm",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "f_in_unknown_scalar",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_in_unknown_scalar",
                                    "stmtc1": "c_default"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "C_call_list": "SHCXX_comm",
                            "C_name": "LIB_Class2_method1",
                            "C_name_api": "method1",
                            "C_prototype": "LIB_Class2 * self,\t MPI_Fint comm",
                            "C_return_type": "void",
                            "F_C_arguments": "self,\t comm",
                            "F_C_call": "c_class2_method1",
                            "F_C_name": "c_class2_method1",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "obj%cxxmem,\t comm",
                            "F_arguments": "obj,\t comm",
                            "F_name_api": "method1",
                            "F_name_function": "method1",
                            "F_name_generic": "method1",
                            "F_name_impl": "class2_method1",
                            "F_subprogram": "subroutine",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "method1",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_subroutine",
                            "stmtc0": "c_subroutine",
                            "stmtc1": "c_subroutine"
                        }
                    },
                    {
                        "<FUNCTION>": "1 ****************************************",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "subroutine"
                                },
                                "name": "method2",
                                "params": [
                                    {
                                        "declarator": {
                                            "metaattrs": {
                                                "intent": "inout"
                                            },
                                            "name": "c2",
                                            "pointer": [
                                                {
                                                    "ptr": "*"
                                                }
                                            ],
                                            "typemap_name": "three::Class1"
                                        },
                                        "specifier": [
                                            "three::Class1"
                                        ],
                                        "typemap_name": "three::Class1"
                                    }
                                ],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void method2(three::Class1 * c2)",
                        "declgen": "void method2(three::Class1 * c2)",
                        "name": "method2",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "f_c": true,
                            "fortran": true
                        },
                        "zz_fmtargs": {
                            "c2": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_type": "LIB_three_Class1",
                                    "c_var": "c2",
                                    "cfi_type": "CFI_type_other",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "SHCXX_c2",
                                    "cxx_type": "three::Class1",
                                    "cxx_var": "SHCXX_c2",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "c_inout_shadow_*",
                                    "stmt1": "c_inout_shadow_*"
                                },
                                "fmtf": {
                                    "F_C_var": "c2",
                                    "c_var": "c2",
                                    "f_c_module_line": "--import--:LIB_SHROUD_capsule_data",
                                    "f_capsule_data_type": "LIB_SHROUD_capsule_data",
                                    "f_intent": "INOUT",
                                    "f_type": "type(class1)",
                                    "f_var": "c2",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "f_inout_shadow_*",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_inout_shadow_*",
                                    "stmtc1": "c_inout_shadow_*"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "C_call_list": "SHCXX_c2",
                            "C_name": "LIB_Class2_method2",
                            "C_name_api": "method2",
                            "C_prototype": "LIB_Class2 * self,\t LIB_three_Class1 * c2",
                            "C_return_type": "void",
                            "F_C_arguments": "self,\t c2",
                            "F_C_call": "c_class2_method2",
                            "F_C_name": "c_class2_method2",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "obj%cxxmem,\t c2%cxxmem",
                            "F_arguments": "obj,\t c2",
                            "F_name_api": "method2",
                            "F_name_function": "method2",
                            "F_name_generic": "method2",
                            "F_name_impl": "class2_method2",
                            "F_subprogram": "subroutine",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "function_name": "method2",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_subroutine",
                            "stmtc0": "c_subroutine",
                            "stmtc1": "c_subroutine"
                        }
                    }
                ],
                "name": "Class2",
                "options": {},
                "parse_keyword": "class",
                "scope": "Class2::",
                "typemap_name": "Class2",
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapClass2.h",
                    "C_impl_filename": "wrapClass2.cpp",
                    "C_name_api": "Class2",
                    "C_name_scope": "Class2_",
                    "C_type_name": "LIB_Class2",
                    "F_derived_name": "class2",
                    "F_name_api": "class2",
                    "F_name_scope": "class2_",
                    "class_scope": "Class2::",
                    "cxx_class": "Class2",
                    "cxx_type": "Class2",
                    "f_capsule_data_type": "LIB_SHROUD_capsule_data",
                    "file_scope": "Class2",
                    "hnamefunc0": "capsule_data_helper"
                }
            }
        ],
        "copyright": [
            "Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "cxx_header": [
            "zzheader.hpp",
            "global_header.hpp"
        ],
        "language": "cxx",
        "namespaces": [
            {
                "<NAMESPACE>": "****************************************",
                "name": "one",
                "namespaces": [
                    {
                        "<NAMESPACE>": "****************************************",
                        "functions": [
                            {
                                "<FUNCTION>": "5 ****************************************",
                                "ast": {
                                    "declarator": {
                                        "metaattrs": {
                                            "intent": "subroutine"
                                        },
                                        "name": "function1",
                                        "params": [],
                                        "typemap_name": "void"
                                    },
                                    "specifier": [
                                        "void"
                                    ],
                                    "typemap_name": "void"
                                },
                                "decl": "void function1()",
                                "declgen": "void function1(void)",
                                "name": "function1",
                                "options": {},
                                "wrap": {
                                    "c": true,
                                    "f_c": true,
                                    "fortran": true
                                },
                                "zz_fmtdict": {
                                    "C_name": "LIB_one_two_function1",
                                    "C_name_api": "function1",
                                    "C_prototype": "void",
                                    "C_return_type": "void",
                                    "F_C_arguments": "",
                                    "F_C_call": "c_function1",
                                    "F_C_name": "function1",
                                    "F_C_subprogram": "subroutine",
                                    "F_arguments": "",
                                    "F_name_api": "function1",
                                    "F_name_function": "function1",
                                    "F_name_generic": "function1",
                                    "F_name_impl": "function1",
                                    "F_subprogram": "subroutine",
                                    "function_name": "function1",
                                    "stmt0": "f_subroutine",
                                    "stmt1": "f_subroutine",
                                    "stmtc0": "c_subroutine",
                                    "stmtc1": "c_subroutine"
                                }
                            }
                        ],
                        "name": "two",
                        "options": {},
                        "scope": "one::two::",
                        "scope_file": [
                            "library",
                            "one",
                            "two"
                        ],
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "CXX_this_call": "one::two::",
                            "C_header_filename": "wraplibrary_one_two.h",
                            "C_impl_filename": "wraplibrary_one_two.cpp",
                            "C_name_api": "two",
                            "C_name_scope": "one_two_",
                            "F_impl_filename": "wrapflibrary_one_two.f",
                            "F_module_name": "library_one_two_mod",
                            "F_name_api": "two",
                            "LUA_this_call": "one::two::",
                            "PY_module_init": "library_one_two",
                            "PY_module_name": "two",
                            "PY_module_scope": "library.one.two",
                            "PY_this_call": "one::two::",
                            "file_scope": "library_one_two",
                            "namespace_scope": "one::two::"
                        }
                    }
                ],
                "options": {},
                "scope": "one::",
                "scope_file": [
                    "library",
                    "one"
                ],
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "one::",
                    "C_header_filename": "wraplibrary_one.h",
                    "C_impl_filename": "wraplibrary_one.cpp",
                    "C_name_api": "one",
                    "C_name_scope": "one_",
                    "F_impl_filename": "wrapflibrary_one.f",
                    "F_module_name": "library_one_mod",
                    "F_name_api": "one",
                    "LUA_this_call": "one::",
                    "PY_module_init": "library_one",
                    "PY_module_name": "one",
                    "PY_module_scope": "library.one",
                    "PY_this_call": "one::",
                    "file_scope": "library_one",
                    "namespace_scope": "one::"
                }
            },
            {
                "<NAMESPACE>": "****************************************",
                "classes": [
                    {
                        "<CLASS>": "****************************************",
                        "cxx_header": [
                            "class_header.hpp"
                        ],
                        "functions": [
                            {
                                "<FUNCTION>": "2 ****************************************",
                                "ast": {
                                    "declarator": {
                                        "metaattrs": {
                                            "intent": "subroutine"
                                        },
                                        "name": "method1",
                                        "params": [
                                            {
                                                "declarator": {
                                                    "attrs": {
                                                        "value": true
                                                    },
                                                    "metaattrs": {
                                                        "intent": "in"
                                                    },
                                                    "name": "arg1",
                                                    "typemap_name": "CustomType"
                                                },
                                                "specifier": [
                                                    "CustomType"
                                                ],
                                                "typemap_name": "CustomType"
                                            }
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "specifier": [
                                        "void"
                                    ],
                                    "typemap_name": "void"
                                },
                                "decl": "void method1(CustomType arg1)",
                                "declgen": "void method1(CustomType arg1 +value)",
                                "name": "method1",
                                "options": {},
                                "wrap": {
                                    "c": true,
                                    "f_c": true,
                                    "fortran": true
                                },
                                "zz_fmtargs": {
                                    "arg1": {
                                        "fmtc": {
                                            "c_addr": "&",
                                            "c_const": "",
                                            "c_deref": "",
                                            "c_member": ".",
                                            "c_type": "LIB_CustomType",
                                            "c_var": "arg1",
                                            "cfi_type": "CFI_type_int",
                                            "cxx_addr": "&",
                                            "cxx_member": ".",
                                            "cxx_nonconst_ptr": "&arg1",
                                            "cxx_type": "CustomType",
                                            "cxx_var": "arg1",
                                            "idtor": "0",
                                            "sh_type": "SH_TYPE_INT",
                                            "stmt0": "c_in_native_scalar",
                                            "stmt1": "c_default"
                                        },
                                        "fmtf": {
                                            "F_C_var": "arg1",
                                            "c_var": "arg1",
                                            "f_c_module_line": "--import--:custom_type",
                                            "f_intent": "IN",
                                            "f_kind": "custom_type",
                                            "f_type": "integer(custom_type)",
                                            "f_var": "arg1",
                                            "sh_type": "SH_TYPE_INT",
                                            "stmt0": "f_in_native_scalar",
                                            "stmt1": "f_default",
                                            "stmtc0": "c_in_native_scalar",
                                            "stmtc1": "c_default"
                                        }
                                    }
                                },
                                "zz_fmtdict": {
                                    "C_call_list": "arg1",
                                    "C_name": "LIB_three_Class1_method1",
                                    "C_name_api": "method1",
                                    "C_prototype": "LIB_three_Class1 * self,\t LIB_CustomType arg1",
                                    "C_return_type": "void",
                                    "F_C_arguments": "self,\t arg1",
                                    "F_C_call": "c_class1_method1",
                                    "F_C_name": "c_class1_method1",
                                    "F_C_subprogram": "subroutine",
                                    "F_arg_c_call": "obj%cxxmem,\t arg1",
                                    "F_arguments": "obj,\t arg1",
                                    "F_name_api": "method1",
                                    "F_name_function": "method1",
                                    "F_name_generic": "method1",
                                    "F_name_impl": "class1_method1",
                                    "F_subprogram": "subroutine",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "self",
                                    "function_name": "method1",
                                    "stmt0": "f_subroutine",
                                    "stmt1": "f_subroutine",
                                    "stmtc0": "c_subroutine",
                                    "stmtc1": "c_subroutine"
                                }
                            }
                        ],
                        "name": "Class1",
                        "options": {},
                        "parse_keyword": "class",
                        "scope": "three::Class1::",
                        "typemap_name": "three::Class1",
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "CXX_this_call": "SH_this->",
                            "C_header_filename": "wrapthree_Class1.h",
                            "C_impl_filename": "wrapthree_Class1.cpp",
                            "C_name_api": "Class1",
                            "C_name_scope": "three_Class1_",
                            "C_type_name": "LIB_three_Class1",
                            "F_derived_name": "class1",
                            "F_name_api": "class1",
                            "F_name_scope": "class1_",
                            "class_scope": "Class1::",
                            "cxx_class": "Class1",
                            "cxx_type": "Class1",
                            "f_capsule_data_type": "LIB_SHROUD_capsule_data",
                            "file_scope": "three_Class1",
                            "hnamefunc0": "capsule_data_helper"
                        }
                    }
                ],
                "name": "three",
                "options": {},
                "scope": "three::",
                "scope_file": [
                    "library",
                    "three"
                ],
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "three::",
                    "C_header_filename": "wraplibrary_three.h",
                    "C_impl_filename": "wraplibrary_three.cpp",
                    "C_name_api": "three",
                    "C_name_scope": "three_",
                    "F_impl_filename": "wrapflibrary_three.f",
                    "F_module_name": "library_three_mod",
                    "F_name_api": "three",
                    "LUA_this_call": "three::",
                    "PY_module_init": "library_three",
                    "PY_module_name": "three",
                    "PY_module_scope": "library.three",
                    "PY_this_call": "three::",
                    "file_scope": "library_three",
                    "namespace_scope": "three::"
                }
            },
            {
                "<NAMESPACE>": "****************************************",
                "classes": [
                    {
                        "<CLASS>": "****************************************",
                        "cxx_header": [],
                        "functions": [
                            {
                                "<FUNCTION>": "3 ****************************************",
                                "ast": {
                                    "declarator": {
                                        "metaattrs": {
                                            "intent": "subroutine"
                                        },
                                        "name": "method",
                                        "params": [],
                                        "typemap_name": "void"
                                    },
                                    "specifier": [
                                        "void"
                                    ],
                                    "typemap_name": "void"
                                },
                                "decl": "void method()",
                                "declgen": "void method(void)",
                                "name": "method",
                                "options": {},
                                "wrap": {
                                    "c": true,
                                    "f_c": true,
                                    "fortran": true
                                },
                                "zz_fmtdict": {
                                    "C_name": "LIB_outer1_class0_method",
                                    "C_name_api": "method",
                                    "C_prototype": "LIB_outer1_class0 * self",
                                    "C_return_type": "void",
                                    "F_C_arguments": "self",
                                    "F_C_call": "c_class0_method",
                                    "F_C_name": "c_class0_method",
                                    "F_C_subprogram": "subroutine",
                                    "F_arg_c_call": "obj%cxxmem",
                                    "F_arguments": "obj",
                                    "F_name_api": "method",
                                    "F_name_function": "method",
                                    "F_name_generic": "method",
                                    "F_name_impl": "class0_method",
                                    "F_subprogram": "subroutine",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "self",
                                    "function_name": "method",
                                    "stmt0": "f_subroutine",
                                    "stmt1": "f_subroutine",
                                    "stmtc0": "c_subroutine",
                                    "stmtc1": "c_subroutine"
                                }
                            }
                        ],
                        "name": "class0",
                        "options": {},
                        "parse_keyword": "class",
                        "scope": "outer1::class0::",
                        "typemap_name": "outer1::class0",
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "CXX_this_call": "SH_this->",
                            "C_header_filename": "wrapouter1_class0.h",
                            "C_impl_filename": "wrapouter1_class0.cpp",
                            "C_name_api": "class0",
                            "C_name_scope": "outer1_class0_",
                            "C_type_name": "LIB_outer1_class0",
                            "F_derived_name": "class0",
                            "F_name_api": "class0",
                            "F_name_scope": "class0_",
                            "class_scope": "class0::",
                            "cxx_class": "class0",
                            "cxx_type": "class0",
                            "f_capsule_data_type": "LIB_SHROUD_capsule_data",
                            "file_scope": "outer1_class0",
                            "hnamefunc0": "capsule_data_helper"
                        }
                    }
                ],
                "functions": [
                    {
                        "<FUNCTION>": "6 ****************************************",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "subroutine"
                                },
                                "name": "outer_func",
                                "params": [],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void outer_func()",
                        "declgen": "void outer_func(void)",
                        "name": "outer_func",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "f_c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "C_name": "LIB_outer1_outer_func",
                            "C_name_api": "outer_func",
                            "C_prototype": "void",
                            "C_return_type": "void",
                            "F_C_arguments": "",
                            "F_C_call": "c_outer_func",
                            "F_C_name": "outer_func",
                            "F_C_subprogram": "subroutine",
                            "F_arguments": "",
                            "F_name_api": "outer_func",
                            "F_name_function": "outer_func",
                            "F_name_generic": "outer_func",
                            "F_name_impl": "outer_func",
                            "F_subprogram": "subroutine",
                            "function_name": "outer_func",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_subroutine",
                            "stmtc0": "c_subroutine",
                            "stmtc1": "c_subroutine"
                        }
                    }
                ],
                "name": "outer1",
                "options": {},
                "scope": "outer1::",
                "scope_file": [
                    "library",
                    "outer1"
                ],
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "outer1::",
                    "C_header_filename": "wraplibrary_outer1.h",
                    "C_impl_filename": "wraplibrary_outer1.cpp",
                    "C_name_api": "outer1",
                    "C_name_scope": "outer1_",
                    "F_impl_filename": "wrapflibrary_outer1.f",
                    "F_module_name": "library_outer1_mod",
                    "F_name_api": "outer1",
                    "LUA_this_call": "outer1::",
                    "PY_module_init": "library_outer1",
                    "PY_module_name": "outer1",
                    "PY_module_scope": "library.outer1",
                    "PY_this_call": "outer1::",
                    "file_scope": "library_outer1",
                    "namespace_scope": "outer1::"
                }
            },
            {
                "<NAMESPACE>": "****************************************",
                "classes": [
                    {
                        "<CLASS>": "****************************************",
                        "cxx_header": [
                            "classA.hpp",
                            "classAb.hpp"
                        ],
                        "functions": [
                            {
                                "<FUNCTION>": "4 ****************************************",
                                "ast": {
                                    "declarator": {
                                        "metaattrs": {
                                            "intent": "subroutine"
                                        },
                                        "name": "method",
                                        "params": [],
                                        "typemap_name": "void"
                                    },
                                    "specifier": [
                                        "void"
                                    ],
                                    "typemap_name": "void"
                                },
                                "decl": "void method()",
                                "declgen": "void method(void)",
                                "name": "method",
                                "options": {},
                                "wrap": {
                                    "c": true,
                                    "f_c": true,
                                    "fortran": true
                                },
                                "zz_fmtdict": {
                                    "C_name": "LIB_outer2_class0_method",
                                    "C_name_api": "method",
                                    "C_prototype": "LIB_outer2_class0 * self",
                                    "C_return_type": "void",
                                    "F_C_arguments": "self",
                                    "F_C_call": "c_class0_method",
                                    "F_C_name": "c_class0_method",
                                    "F_C_subprogram": "subroutine",
                                    "F_arg_c_call": "obj%cxxmem",
                                    "F_arguments": "obj",
                                    "F_name_api": "method",
                                    "F_name_function": "method",
                                    "F_name_generic": "method",
                                    "F_name_impl": "class0_method",
                                    "F_subprogram": "subroutine",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "self",
                                    "function_name": "method",
                                    "stmt0": "f_subroutine",
                                    "stmt1": "f_subroutine",
                                    "stmtc0": "c_subroutine",
                                    "stmtc1": "c_subroutine"
                                }
                            }
                        ],
                        "name": "class0",
                        "options": {},
                        "parse_keyword": "class",
                        "scope": "outer2::class0::",
                        "typemap_name": "outer2::class0",
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "CXX_this_call": "SH_this->",
                            "C_header_filename": "wrapouter2_class0.h",
                            "C_impl_filename": "wrapouter2_class0.cpp",
                            "C_name_api": "class0",
                            "C_name_scope": "outer2_class0_",
                            "C_type_name": "LIB_outer2_class0",
                            "F_derived_name": "class0",
                            "F_name_api": "class0",
                            "F_name_scope": "class0_",
                            "class_scope": "class0::",
                            "cxx_class": "class0",
                            "cxx_type": "class0",
                            "f_capsule_data_type": "LIB_SHROUD_capsule_data",
                            "file_scope": "outer2_class0",
                            "hnamefunc0": "capsule_data_helper"
                        }
                    }
                ],
                "functions": [
                    {
                        "<FUNCTION>": "7 ****************************************",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "subroutine"
                                },
                                "name": "outer_func",
                                "params": [],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void outer_func()",
                        "declgen": "void outer_func(void)",
                        "name": "outer_func",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "f_c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "C_name": "LIB_outer2_outer_func",
                            "C_name_api": "outer_func",
                            "C_prototype": "void",
                            "C_return_type": "void",
                            "F_C_arguments": "",
                            "F_C_call": "c_outer_func",
                            "F_C_name": "outer_func",
                            "F_C_subprogram": "subroutine",
                            "F_arguments": "",
                            "F_name_api": "outer_func",
                            "F_name_function": "outer_func",
                            "F_name_generic": "outer_func",
                            "F_name_impl": "outer_func",
                            "F_subprogram": "subroutine",
                            "function_name": "outer_func",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_subroutine",
                            "stmtc0": "c_subroutine",
                            "stmtc1": "c_subroutine"
                        }
                    }
                ],
                "name": "outer2",
                "options": {},
                "scope": "outer2::",
                "scope_file": [
                    "library",
                    "outer2"
                ],
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "outer2::",
                    "C_header_filename": "wraplibrary_outer2.h",
                    "C_impl_filename": "wraplibrary_outer2.cpp",
                    "C_name_api": "outer2",
                    "C_name_scope": "outer2_",
                    "F_impl_filename": "wrapflibrary_outer2.f",
                    "F_module_name": "library_outer2_mod",
                    "F_name_api": "outer2",
                    "LUA_this_call": "outer2::",
                    "PY_module_init": "library_outer2",
                    "PY_module_name": "outer2",
                    "PY_module_scope": "library.outer2",
                    "PY_this_call": "outer2::",
                    "file_scope": "library_outer2",
                    "namespace_scope": "outer2::"
                }
            }
        ],
        "scope_file": [
            "library"
        ],
        "typedefs": [
            {
                "<TYPEDEF>": "****************************************",
                "ast": {
                    "declarator": {
                        "name": "CustomType",
                        "typemap_name": "int"
                    },
                    "specifier": [
                        "int"
                    ],
                    "storage": [
                        "typedef"
                    ],
                    "typemap_name": "CustomType"
                },
                "f_kind": "C_INT",
                "f_module": {
                    "iso_c_binding": [
                        "C_INT"
                    ]
                },
                "name": "CustomType",
                "options": {},
                "user_fields": {
                    "c_header": "type_header.h",
                    "cxx_header": "type_header.hpp"
                },
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "C_name_api": "CustomType",
                    "C_name_typedef": "LIB_CustomType",
                    "F_name_api": "custom_type",
                    "F_name_typedef": "custom_type",
                    "cxx_type": "CustomType",
                    "typedef_name": "CustomType"
                }
            }
        ],
        "wrap": {
            "c": true,
            "fortran": true
        }
    },
    "symtab": {
        "Class2": "Class2",
        "outer1": {
            "class0": "outer1::class0"
        },
        "outer2": {
            "class0": "outer2::class0"
        },
        "three": {
            "Class1": "three::Class1"
        }
    },
    "types": {
        "Class2": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "base": "shadow",
            "c_to_cxx": "static_cast<{c_const}Class2 *>\t({c_var}->addr)",
            "c_type": "LIB_Class2",
            "cxx_to_c": "static_cast<{c_const}void *>(\t{cxx_addr}{cxx_var})",
            "cxx_type": "Class2",
            "f_c_module": {
                "--import--": [
                    "LIB_SHROUD_capsule_data"
                ]
            },
            "f_c_module_line": "--import--:LIB_SHROUD_capsule_data",
            "f_c_type": "type(LIB_SHROUD_capsule_data)",
            "f_capsule_data_type": "LIB_SHROUD_capsule_data",
            "f_class": "class(class2)",
            "f_derived_type": "class2",
            "f_module": {
                "library_mod": [
                    "class2"
                ]
            },
            "f_module_line": "library_mod:class2",
            "f_module_name": "library_mod",
            "f_to_c": "{f_var}%cxxmem",
            "f_type": "type(class2)",
            "flat_name": "Class2",
            "impl_header": [
                "zzheader.hpp",
                "global_header.hpp"
            ],
            "sgroup": "shadow",
            "wrap_header": [
                "typeslibrary.h"
            ]
        },
        "CustomType": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_header": [
                "type_header.h"
            ],
            "c_type": "LIB_CustomType",
            "cfi_type": "CFI_type_int",
            "cxx_header": [
                "type_header.hpp"
            ],
            "cxx_type": "CustomType",
            "f_c_module": {
                "--import--": [
                    "custom_type"
                ]
            },
            "f_c_module_line": "--import--:custom_type",
            "f_cast": "int({f_var}, C_INT)",
            "f_kind": "custom_type",
            "f_module": {
                "library_mod": [
                    "custom_type"
                ]
            },
            "f_module_line": "library_mod:custom_type",
            "f_type": "integer(custom_type)",
            "flat_name": "int",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT",
            "typedef": "int",
            "wrap_header": [
                "wraplibrary.h"
            ]
        },
        "outer1::class0": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "base": "shadow",
            "c_to_cxx": "static_cast<{c_const}outer1::class0 *>\t({c_var}->addr)",
            "c_type": "LIB_outer1_class0",
            "cxx_to_c": "static_cast<{c_const}void *>(\t{cxx_addr}{cxx_var})",
            "cxx_type": "outer1::class0",
            "f_c_module": {
                "--import--": [
                    "LIB_SHROUD_capsule_data"
                ]
            },
            "f_c_module_line": "--import--:LIB_SHROUD_capsule_data",
            "f_c_type": "type(LIB_SHROUD_capsule_data)",
            "f_capsule_data_type": "LIB_SHROUD_capsule_data",
            "f_class": "class(class0)",
            "f_derived_type": "class0",
            "f_module": {
                "library_outer1_mod": [
                    "class0"
                ]
            },
            "f_module_line": "library_outer1_mod:class0",
            "f_module_name": "library_outer1_mod",
            "f_to_c": "{f_var}%cxxmem",
            "f_type": "type(class0)",
            "flat_name": "outer1_class0",
            "impl_header": [
                "outer1.hpp"
            ],
            "sgroup": "shadow",
            "wrap_header": [
                "typeslibrary.h"
            ]
        },
        "outer2::class0": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "base": "shadow",
            "c_to_cxx": "static_cast<{c_const}outer2::class0 *>\t({c_var}->addr)",
            "c_type": "LIB_outer2_class0",
            "cxx_to_c": "static_cast<{c_const}void *>(\t{cxx_addr}{cxx_var})",
            "cxx_type": "outer2::class0",
            "f_c_module": {
                "--import--": [
                    "LIB_SHROUD_capsule_data"
                ]
            },
            "f_c_module_line": "--import--:LIB_SHROUD_capsule_data",
            "f_c_type": "type(LIB_SHROUD_capsule_data)",
            "f_capsule_data_type": "LIB_SHROUD_capsule_data",
            "f_class": "class(class0)",
            "f_derived_type": "class0",
            "f_module": {
                "library_outer2_mod": [
                    "class0"
                ]
            },
            "f_module_line": "library_outer2_mod:class0",
            "f_module_name": "library_outer2_mod",
            "f_to_c": "{f_var}%cxxmem",
            "f_type": "type(class0)",
            "flat_name": "outer2_class0",
            "impl_header": [
                "classA.hpp",
                "classAb.hpp"
            ],
            "sgroup": "shadow",
            "wrap_header": [
                "typeslibrary.h"
            ]
        },
        "three::Class1": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "base": "shadow",
            "c_to_cxx": "static_cast<{c_const}three::Class1 *>\t({c_var}->addr)",
            "c_type": "LIB_three_Class1",
            "cxx_to_c": "static_cast<{c_const}void *>(\t{cxx_addr}{cxx_var})",
            "cxx_type": "three::Class1",
            "f_c_module": {
                "--import--": [
                    "LIB_SHROUD_capsule_data"
                ]
            },
            "f_c_module_line": "--import--:LIB_SHROUD_capsule_data",
            "f_c_type": "type(LIB_SHROUD_capsule_data)",
            "f_capsule_data_type": "LIB_SHROUD_capsule_data",
            "f_class": "class(class1)",
            "f_derived_type": "class1",
            "f_module": {
                "library_three_mod": [
                    "class1"
                ]
            },
            "f_module_line": "library_three_mod:class1",
            "f_module_name": "library_three_mod",
            "f_to_c": "{f_var}%cxxmem",
            "f_type": "type(class1)",
            "flat_name": "three_Class1",
            "impl_header": [
                "class_header.hpp"
            ],
            "sgroup": "shadow",
            "wrap_header": [
                "typeslibrary.h"
            ]
        }
    }
}