// wrapClass2.cpp
// This file is generated by Shroud nowrite-version. Do not edit.
// Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
// other Shroud Project Developers.
// See the top-level COPYRIGHT file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//

// cxx_header
#include "zzheader.hpp"
#include "global_header.hpp"
// typemap
#include "class_header.hpp"
// shroud
#include "wrapClass2.h"


extern "C" {


// ----------------------------------------
// Function:  void method1
// Attrs:     +intent(subroutine)
// Exact:     c_subroutine
// ----------------------------------------
// Argument:  MPI_Comm comm +value
// Attrs:     +intent(in)
// Requested: c_in_unknown_scalar
// Match:     c_default
void LIB_Class2_method1(LIB_Class2 * self, MPI_Fint comm)
{
    Class2 *SH_this = static_cast<Class2 *>(self->addr);
    MPI_Comm SHCXX_comm = MPI_Comm_f2c(comm);
    SH_this->method1(SHCXX_comm);
}

// ----------------------------------------
// Function:  void method2
// Attrs:     +intent(subroutine)
// Exact:     c_subroutine
// ----------------------------------------
// Argument:  three::Class1 * c2
// Attrs:     +intent(inout)
// Exact:     c_inout_shadow_*
void LIB_Class2_method2(LIB_Class2 * self, LIB_three_Class1 * c2)
{
    Class2 *SH_this = static_cast<Class2 *>(self->addr);
    three::Class1 * SHCXX_c2 = static_cast<three::Class1 *>(c2->addr);
    SH_this->method2(SHCXX_c2);
}

}  // extern "C"
