{
    "__NOTICE__": "This file is generated by Shroud 0.11.0 and is useful for debugging.",
    "library": {
        "copyright": [
            "Copyright (c) 2017-2019, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "functions": [
            {
                "ast": {
                    "declarator": {
                        "name": "worker3",
                        "pointer": []
                    },
                    "params": [],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void worker3();",
                "declgen": "void worker3()",
                "fmtdict": {
                    "C_name": "WWW_inner3_worker3",
                    "C_prototype": "",
                    "C_return_type": "void",
                    "F_C_call": "c_inner3_worker3",
                    "F_C_name": "inner3_worker3",
                    "F_arguments": "",
                    "F_name_function": "worker3",
                    "F_name_generic": "worker3",
                    "F_name_impl": "inner3_worker3",
                    "F_subprogram": "subroutine",
                    "PY_name_impl": "PY_worker3",
                    "function_name": "worker3",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_default",
                    "stmtc0": "c",
                    "stmtc1": "c_default",
                    "underscore_name": "worker3"
                },
                "options": {}
            },
            {
                "ast": {
                    "declarator": {
                        "name": "worker",
                        "pointer": []
                    },
                    "params": [],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void worker();",
                "declgen": "void worker()",
                "fmtdict": {
                    "C_name": "WWW_worker",
                    "C_prototype": "",
                    "C_return_type": "void",
                    "F_C_call": "c_worker",
                    "F_C_name": "worker",
                    "F_arguments": "",
                    "F_name_function": "worker",
                    "F_name_generic": "worker",
                    "F_name_impl": "worker",
                    "F_subprogram": "subroutine",
                    "PY_name_impl": "PY_worker",
                    "function_name": "worker",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_default",
                    "stmtc0": "c",
                    "stmtc1": "c_default",
                    "underscore_name": "worker"
                },
                "options": {}
            }
        ],
        "language": "cxx",
        "namespaces": [
            {
                "fmtdict": {
                    "CXX_this_call": "outer::inner1::",
                    "C_header_filename": "wrapwrapped_inner1.h",
                    "C_impl_filename": "wrapwrapped_inner1.cpp",
                    "C_name_scope": "inner1_",
                    "F_impl_filename": "wrapfwrapped_inner1.f",
                    "F_module_name": "wrapped_inner1_mod",
                    "LUA_this_call": "outer::inner1::",
                    "PY_library_doc": "library documentation",
                    "PY_module_filename": "pywrapped_inner1module.cpp",
                    "PY_module_init": "wrapped_inner1",
                    "PY_module_name": "inner1",
                    "PY_module_scope": "wrapped.inner1",
                    "PY_this_call": "outer::inner1::",
                    "file_scope": "wrapped_inner1",
                    "namespace_scope": "outer::inner1::"
                },
                "functions": [
                    {
                        "ast": {
                            "declarator": {
                                "name": "worker",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void worker();",
                        "declgen": "void worker()",
                        "fmtdict": {
                            "C_name": "WWW_inner1_worker",
                            "C_prototype": "",
                            "C_return_type": "void",
                            "F_C_call": "c_worker",
                            "F_C_name": "worker",
                            "F_arguments": "",
                            "F_name_function": "worker",
                            "F_name_generic": "worker",
                            "F_name_impl": "worker",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_worker",
                            "function_name": "worker",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "worker"
                        },
                        "options": {}
                    }
                ],
                "name": "inner1",
                "options": {},
                "scope": "outer::inner1::",
                "scope_file": [
                    "wrapped",
                    "inner1"
                ]
            },
            {
                "fmtdict": {
                    "CXX_this_call": "outer::inner2::",
                    "C_header_filename": "wrapwrapped_inner2.h",
                    "C_impl_filename": "wrapwrapped_inner2.cpp",
                    "C_name_scope": "inner2_",
                    "F_impl_filename": "wrapfwrapped_inner2.f",
                    "F_module_name": "wrapped_inner2_mod",
                    "LUA_this_call": "outer::inner2::",
                    "PY_library_doc": "library documentation",
                    "PY_module_filename": "pywrapped_inner2module.cpp",
                    "PY_module_init": "wrapped_inner2",
                    "PY_module_name": "inner2",
                    "PY_module_scope": "wrapped.inner2",
                    "PY_this_call": "outer::inner2::",
                    "file_scope": "wrapped_inner2",
                    "namespace_scope": "outer::inner2::"
                },
                "functions": [
                    {
                        "ast": {
                            "declarator": {
                                "name": "worker",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void worker();",
                        "declgen": "void worker()",
                        "fmtdict": {
                            "C_name": "WWW_inner2_worker",
                            "C_prototype": "",
                            "C_return_type": "void",
                            "F_C_call": "c_worker",
                            "F_C_name": "worker",
                            "F_arguments": "",
                            "F_name_function": "worker",
                            "F_name_generic": "worker",
                            "F_name_impl": "worker",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_worker",
                            "function_name": "worker",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "worker"
                        },
                        "options": {}
                    }
                ],
                "name": "inner2",
                "options": {},
                "scope": "outer::inner2::",
                "scope_file": [
                    "wrapped",
                    "inner2"
                ]
            },
            {
                "fmtdict": {
                    "CXX_this_call": "outer::inner4::",
                    "C_header_filename": "wrapwrapped_inner4.h",
                    "C_impl_filename": "wrapwrapped_inner4.cpp",
                    "C_name_scope": "inner4_",
                    "F_impl_filename": "wrapfwrapped_inner4.f",
                    "F_module_name": "wrapped_inner4_mod",
                    "F_name_scope": "inner4_",
                    "LUA_this_call": "outer::inner4::",
                    "PY_library_doc": "library documentation",
                    "PY_module_filename": "pywrapped_inner4module.cpp",
                    "PY_module_init": "wrapped_inner4",
                    "PY_module_name": "inner4",
                    "PY_module_scope": "wrapped.inner4",
                    "PY_this_call": "outer::inner4::",
                    "file_scope": "wrapped_inner4",
                    "namespace_scope": "outer::inner4::"
                },
                "functions": [
                    {
                        "ast": {
                            "declarator": {
                                "name": "worker4",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void worker4();",
                        "declgen": "void worker4()",
                        "fmtdict": {
                            "C_name": "WWW_inner4_worker4",
                            "C_prototype": "",
                            "C_return_type": "void",
                            "F_C_call": "c_inner4_worker4",
                            "F_C_name": "inner4_worker4",
                            "F_arguments": "",
                            "F_name_function": "worker4",
                            "F_name_generic": "worker4",
                            "F_name_impl": "inner4_worker4",
                            "F_subprogram": "subroutine",
                            "PY_name_impl": "PY_worker4",
                            "function_name": "worker4",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "worker4"
                        },
                        "options": {}
                    }
                ],
                "name": "inner4",
                "options": {
                    "F_flatten_namespace": true
                },
                "scope": "outer::inner4::",
                "scope_file": [
                    "wrapped",
                    "inner4"
                ]
            }
        ],
        "scope_file": [
            "wrapped"
        ]
    }
}