Read yaml tutorial.yaml
Skipping std::string, unable to create C wrapper for function returning ConcatenateStrings instance (must return a pointer or reference). Bufferify version will still be created.
Read splicer ftutorialsplicer.f
C c void NoReturnNoArguments(void)  +intent(subroutine)
C f void NoReturnNoArguments(void)  +intent(subroutine)
C c double PassByValue(double arg1 +value, int arg2 +value)  +intent(function)
C f double PassByValue(double arg1 +value, int arg2 +value)  +intent(function)
C f const std::string ConcatenateStrings(const std::string & arg1, const std::string & arg2)  +api(cdesc)+deref(allocatable)+intent(function)
C c double UseDefaultArguments(void)  +intent(function)
C f double UseDefaultArguments(void)  +intent(function)
C c double UseDefaultArguments(double arg1=3.1415 +value)  +intent(function)
C f double UseDefaultArguments(double arg1=3.1415 +value)  +intent(function)
C c double UseDefaultArguments(double arg1=3.1415 +value, bool arg2=true +value)  +intent(function)
C f double UseDefaultArguments(double arg1=3.1415 +value, bool arg2=true +value)  +intent(function)
C c void OverloadedFunction(const std::string & name)  +intent(subroutine)
C f void OverloadedFunction(const std::string & name)  +intent(subroutine)
C c void OverloadedFunction(int indx +value)  +intent(subroutine)
C f void OverloadedFunction(int indx +value)  +intent(subroutine)
C c void TemplateArgument(int arg +value)  +intent(subroutine)
C f void TemplateArgument(int arg +value)  +intent(subroutine)
C c void TemplateArgument(double arg +value)  +intent(subroutine)
C f void TemplateArgument(double arg +value)  +intent(subroutine)
C c int TemplateReturn(void)  +intent(function)
C f int TemplateReturn(void)  +intent(function)
C c double TemplateReturn(void)  +intent(function)
C f double TemplateReturn(void)  +intent(function)
C c void FortranGenericOverloaded(void)  +intent(subroutine)
C f void FortranGenericOverloaded(void)  +intent(subroutine)
C c void FortranGenericOverloaded(const std::string & name, double arg2 +value)  +intent(subroutine)
C f void FortranGenericOverloaded(const std::string & name, float arg2 +value)  +intent(subroutine)
C f void FortranGenericOverloaded(const std::string & name, double arg2 +value)  +intent(subroutine)
C c int UseDefaultOverload(int num +value)  +intent(function)
C f int UseDefaultOverload(int num +value)  +intent(function)
C c int UseDefaultOverload(int num +value, int offset=0 +value)  +intent(function)
C f int UseDefaultOverload(int num +value, int offset=0 +value)  +intent(function)
C c int UseDefaultOverload(int num +value, int offset=0 +value, int stride=1 +value)  +intent(function)
C f int UseDefaultOverload(int num +value, int offset=0 +value, int stride=1 +value)  +intent(function)
C c int UseDefaultOverload(double type +value, int num +value)  +intent(function)
C f int UseDefaultOverload(double type +value, int num +value)  +intent(function)
C c int UseDefaultOverload(double type +value, int num +value, int offset=0 +value)  +intent(function)
C f int UseDefaultOverload(double type +value, int num +value, int offset=0 +value)  +intent(function)
C c int UseDefaultOverload(double type +value, int num +value, int offset=0 +value, int stride=1 +value)  +intent(function)
C f int UseDefaultOverload(double type +value, int num +value, int offset=0 +value, int stride=1 +value)  +intent(function)
C c TypeID typefunc(TypeID arg +value)  +intent(function)
C f TypeID typefunc(TypeID arg +value)  +intent(function)
C c EnumTypeID enumfunc(EnumTypeID arg +value)  +intent(function)
C f EnumTypeID enumfunc(EnumTypeID arg +value)  +intent(function)
C c Color colorfunc(Color arg +value)  +intent(function)
C f Color colorfunc(Color arg +value)  +intent(function)
C c void getMinMax(int & min +intent(out), int & max +intent(out))  +intent(subroutine)
C f void getMinMax(int & min +intent(out), int & max +intent(out))  +intent(subroutine)
C c int callback1(int in +value, int ( * incr)(int +value) +value)  +intent(function)
C f int callback1(int in +value, int ( * incr)(int +value) +value)  +intent(function)
C c const std::string & LastFunctionCalled(void) +len(30)  +deref(copy)+intent(function)
C f const std::string & LastFunctionCalled(void) +len(30)  +api(buf)+deref(copy)+intent(function)
Close wrapTutorial.h
Close wrapTutorial.cpp
typedef TypeID
typedef EnumTypeID
Fortran void NoReturnNoArguments(void)  +intent(subroutine)
Fortran double PassByValue(double arg1 +value, int arg2 +value)  +intent(function)
Fortran const std::string ConcatenateStrings(const std::string & arg1, const std::string & arg2)  +api(cdesc)+deref(allocatable)+intent(function)
Fortran double UseDefaultArguments(void)  +intent(function)
Fortran double UseDefaultArguments(double arg1=3.1415 +value)  +intent(function)
Fortran double UseDefaultArguments(double arg1=3.1415 +value, bool arg2=true +value)  +intent(function)
Fortran void OverloadedFunction(const std::string & name)  +intent(subroutine)
Fortran void OverloadedFunction(int indx +value)  +intent(subroutine)
Fortran void TemplateArgument(int arg +value)  +intent(subroutine)
Fortran void TemplateArgument(double arg +value)  +intent(subroutine)
Fortran int TemplateReturn(void)  +intent(function)
Fortran double TemplateReturn(void)  +intent(function)
Fortran void FortranGenericOverloaded(void)  +intent(subroutine)
Fortran void FortranGenericOverloaded(const std::string & name, float arg2 +value)  +intent(subroutine)
Fortran void FortranGenericOverloaded(const std::string & name, double arg2 +value)  +intent(subroutine)
Fortran int UseDefaultOverload(int num +value)  +intent(function)
Fortran int UseDefaultOverload(int num +value, int offset=0 +value)  +intent(function)
Fortran int UseDefaultOverload(int num +value, int offset=0 +value, int stride=1 +value)  +intent(function)
Fortran int UseDefaultOverload(double type +value, int num +value)  +intent(function)
Fortran int UseDefaultOverload(double type +value, int num +value, int offset=0 +value)  +intent(function)
Fortran int UseDefaultOverload(double type +value, int num +value, int offset=0 +value, int stride=1 +value)  +intent(function)
Fortran TypeID typefunc(TypeID arg +value)  +intent(function)
Fortran EnumTypeID enumfunc(EnumTypeID arg +value)  +intent(function)
Fortran Color colorfunc(Color arg +value)  +intent(function)
Fortran void getMinMax(int & min +intent(out), int & max +intent(out))  +intent(subroutine)
Fortran int callback1(int in +value, int ( * incr)(int +value) +value)  +intent(function)
Fortran const std::string & LastFunctionCalled(void) +len(30)  +api(buf)+deref(copy)+intent(function)
C-interface f void NoReturnNoArguments(void)  +intent(subroutine)
C-interface f double PassByValue(double arg1 +value, int arg2 +value)  +intent(function)
C-interface f const std::string ConcatenateStrings(const std::string & arg1, const std::string & arg2)  +api(cdesc)+deref(allocatable)+intent(function)
C-interface f double UseDefaultArguments(void)  +intent(function)
C-interface f double UseDefaultArguments(double arg1=3.1415 +value)  +intent(function)
C-interface f double UseDefaultArguments(double arg1=3.1415 +value, bool arg2=true +value)  +intent(function)
C-interface c void OverloadedFunction(const std::string & name)  +intent(subroutine)
C-interface f void OverloadedFunction(const std::string & name)  +intent(subroutine)
C-interface f void OverloadedFunction(int indx +value)  +intent(subroutine)
C-interface f void TemplateArgument(int arg +value)  +intent(subroutine)
C-interface f void TemplateArgument(double arg +value)  +intent(subroutine)
C-interface f int TemplateReturn(void)  +intent(function)
C-interface f double TemplateReturn(void)  +intent(function)
C-interface f void FortranGenericOverloaded(void)  +intent(subroutine)
C-interface c void FortranGenericOverloaded(const std::string & name, double arg2 +value)  +intent(subroutine)
C-interface f void FortranGenericOverloaded(const std::string & name, float arg2 +value)  +intent(subroutine)
C-interface f void FortranGenericOverloaded(const std::string & name, double arg2 +value)  +intent(subroutine)
C-interface f int UseDefaultOverload(int num +value)  +intent(function)
C-interface f int UseDefaultOverload(int num +value, int offset=0 +value)  +intent(function)
C-interface f int UseDefaultOverload(int num +value, int offset=0 +value, int stride=1 +value)  +intent(function)
C-interface f int UseDefaultOverload(double type +value, int num +value)  +intent(function)
C-interface f int UseDefaultOverload(double type +value, int num +value, int offset=0 +value)  +intent(function)
C-interface f int UseDefaultOverload(double type +value, int num +value, int offset=0 +value, int stride=1 +value)  +intent(function)
C-interface f TypeID typefunc(TypeID arg +value)  +intent(function)
C-interface f EnumTypeID enumfunc(EnumTypeID arg +value)  +intent(function)
C-interface f Color colorfunc(Color arg +value)  +intent(function)
C-interface f void getMinMax(int & min +intent(out), int & max +intent(out))  +intent(subroutine)
C-interface f int callback1(int in +value, int ( * incr)(int +value) +value)  +intent(function)
C-interface c const std::string & LastFunctionCalled(void) +len(30)  +deref(copy)+intent(function)
C-interface f const std::string & LastFunctionCalled(void) +len(30)  +api(buf)+deref(copy)+intent(function)
Close wrapftutorial.f
Close utilTutorial.cpp
Close typesTutorial.h
Python function void NoReturnNoArguments(void)
Python function double PassByValue(double arg1 +value, int arg2 +value)
Python function const std::string ConcatenateStrings(const std::string & arg1, const std::string & arg2)
Python function double UseDefaultArguments(double arg1=3.1415 +value, bool arg2=true +value)
Python function void OverloadedFunction(const std::string & name)
Python function void OverloadedFunction(int indx +value)
Python function void TemplateArgument(int arg +value)
Python function void TemplateArgument(double arg +value)
Python function void FortranGenericOverloaded(void)
Python function void FortranGenericOverloaded(const std::string & name, double arg2 +value)
Python function int UseDefaultOverload(int num +value, int offset=0 +value, int stride=1 +value)
Python function int UseDefaultOverload(double type +value, int num +value, int offset=0 +value, int stride=1 +value)
Python function TypeID typefunc(TypeID arg +value)
Python function EnumTypeID enumfunc(EnumTypeID arg +value)
Python function Color colorfunc(Color arg +value)
Python function void getMinMax(int & min +intent(out), int & max +intent(out))
Python function const std::string & LastFunctionCalled(void) +len(30)
Close pyTutorialmodule.cpp
Close pyTutorialmodule.hpp
Close setup.py
Lua function void NoReturnNoArguments(void)
Lua function double PassByValue(double arg1 +value, int arg2 +value)
Lua function const std::string ConcatenateStrings(const std::string & arg1, const std::string & arg2)
Lua function double UseDefaultArguments(double arg1=3.1415 +value, bool arg2=true +value)
Lua function double UseDefaultArguments(double arg1=3.1415 +value, bool arg2=true +value)
Lua function double UseDefaultArguments(double arg1=3.1415 +value, bool arg2=true +value)
Lua function void OverloadedFunction(const std::string & name)
Lua function void OverloadedFunction(int indx +value)
Lua function void TemplateArgument(int arg +value)
Lua function void TemplateArgument(double arg +value)
Lua function void FortranGenericOverloaded(void)
Lua function void FortranGenericOverloaded(const std::string & name, double arg2 +value)
Lua function int UseDefaultOverload(int num +value, int offset=0 +value, int stride=1 +value)
Lua function int UseDefaultOverload(int num +value, int offset=0 +value, int stride=1 +value)
Lua function int UseDefaultOverload(double type +value, int num +value, int offset=0 +value, int stride=1 +value)
Lua function int UseDefaultOverload(int num +value, int offset=0 +value, int stride=1 +value)
Lua function int UseDefaultOverload(double type +value, int num +value, int offset=0 +value, int stride=1 +value)
Lua function int UseDefaultOverload(double type +value, int num +value, int offset=0 +value, int stride=1 +value)
Lua function TypeID typefunc(TypeID arg +value)
Lua function EnumTypeID enumfunc(EnumTypeID arg +value)
Lua function Color colorfunc(Color arg +value)
Lua function const std::string & LastFunctionCalled(void) +len(30)
Close luaTutorialmodule.hpp
Close luaTutorialmodule.cpp
