{
    "<NOTICE>": "This file is generated by Shroud nowrite-version and is useful for debugging.",
    "library": {
        "class_map": [
            "nested",
            "struct1"
        ],
        "classes": [
            {
                "<CLASS>": "struct1 ****************************************",
                "cxx_header": [],
                "name": "struct1",
                "options": {},
                "parse_keyword": "struct",
                "scope": "struct1::",
                "typemap_name": "struct1",
                "variables": [
                    {
                        "<VARIABLE>": "arg1 ****************************************",
                        "ast": {
                            "declarator": {
                                "attrs": {
                                    "badvar": true,
                                    "dimension": "10"
                                },
                                "metaattrs": {
                                    "dimension": [
                                        {
                                            "constant": "10"
                                        }
                                    ]
                                },
                                "name": "arg1",
                                "typemap_name": "int"
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "name": "arg1",
                        "options": {},
                        "wrap": {},
                        "zz_fmtdict": {
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "arg1",
                            "variable_lower": "arg1",
                            "variable_name": "arg1",
                            "variable_upper": "ARG1"
                        }
                    },
                    {
                        "<VARIABLE>": "narg2 ****************************************",
                        "ast": {
                            "declarator": {
                                "name": "narg2",
                                "typemap_name": "int"
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "name": "narg2",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "fortran": true,
                            "python": true
                        },
                        "zz_fmtdict": {
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "narg2",
                            "variable_lower": "narg2",
                            "variable_name": "narg2",
                            "variable_upper": "NARG2"
                        }
                    },
                    {
                        "<VARIABLE>": "arg2 ****************************************",
                        "ast": {
                            "declarator": {
                                "attrs": {
                                    "deref": "pointerxx",
                                    "dimension": "narg2"
                                },
                                "metaattrs": {
                                    "dimension": [
                                        {
                                            "name": "narg2"
                                        }
                                    ]
                                },
                                "name": "arg2",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ],
                                "typemap_name": "int"
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "name": "arg2",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "fortran": true,
                            "python": true
                        },
                        "zz_fmtdict": {
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "arg2",
                            "variable_lower": "arg2",
                            "variable_name": "arg2",
                            "variable_upper": "ARG2"
                        }
                    }
                ],
                "wrap": {
                    "c": true,
                    "fortran": true,
                    "python": true
                },
                "zz_fmtdict": {
                    "C_header_filename": "wrapstruct1.h",
                    "C_impl_filename": "wrapstruct1.cpp",
                    "C_name_api": "struct1",
                    "C_name_scope": "struct1_",
                    "C_type_name": "ERR_struct1",
                    "F_derived_name": "struct1",
                    "F_name_api": "struct1",
                    "F_name_scope": "struct1_",
                    "PY_PyObject": "PY_struct1",
                    "PY_PyTypeObject": "PY_struct1_Type",
                    "PY_from_object_func": "PP_struct1_from_Object",
                    "PY_struct_array_descr_create": "PY_struct1_create_array_descr",
                    "PY_struct_array_descr_name": "struct1_dtype",
                    "PY_struct_array_descr_variable": "PY_struct1_array_descr",
                    "PY_to_object_func": "PP_struct1_to_Object",
                    "PY_to_object_idtor_func": "PP_struct1_to_Object_idtor",
                    "class_scope": "struct1::",
                    "cxx_class": "struct1",
                    "cxx_type": "struct1",
                    "file_scope": "struct1"
                }
            },
            {
                "<CLASS>": "nested ****************************************",
                "classes": [
                    {
                        "<CLASS>": "nested ****************************************",
                        "cxx_header": [],
                        "name": "nested",
                        "options": {},
                        "parse_keyword": "struct",
                        "scope": "nested::nested::",
                        "typemap_name": "nested",
                        "wrap": {},
                        "zz_fmtdict": {
                            "C_header_filename": "wrapnested_nested.h",
                            "C_impl_filename": "wrapnested_nested.cpp",
                            "C_name_api": "nested",
                            "C_name_scope": "nested_nested_",
                            "C_type_name": "ERR_nested",
                            "F_derived_name": "nested",
                            "F_name_api": "nested",
                            "F_name_scope": "nested_nested_",
                            "PY_struct_array_descr_create": "PY_nested_create_array_descr",
                            "PY_struct_array_descr_name": "nested_dtype",
                            "PY_struct_array_descr_variable": "PY_nested_array_descr",
                            "class_scope": "nested::",
                            "cxx_class": "nested",
                            "cxx_type": "nested",
                            "file_scope": "nested_nested"
                        }
                    }
                ],
                "cxx_header": [],
                "name": "nested",
                "options": {
                    "wrap_python": false
                },
                "parse_keyword": "struct",
                "scope": "nested::",
                "typemap_name": "nested",
                "variables": [
                    {
                        "<VARIABLE>": "sublevels ****************************************",
                        "ast": {
                            "declarator": {
                                "name": "sublevels",
                                "typemap_name": "int"
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "name": "sublevels",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "sublevels",
                            "variable_lower": "sublevels",
                            "variable_name": "sublevels",
                            "variable_upper": "SUBLEVELS"
                        }
                    }
                ],
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "C_header_filename": "wrapnested.h",
                    "C_impl_filename": "wrapnested.cpp",
                    "C_name_api": "nested",
                    "C_name_scope": "nested_",
                    "C_type_name": "ERR_nested",
                    "F_derived_name": "nested",
                    "F_name_api": "nested",
                    "F_name_scope": "nested_",
                    "PY_struct_array_descr_create": "PY_nested_create_array_descr",
                    "PY_struct_array_descr_name": "nested_dtype",
                    "PY_struct_array_descr_variable": "PY_nested_array_descr",
                    "class_scope": "nested::",
                    "cxx_class": "nested",
                    "cxx_type": "nested",
                    "file_scope": "nested"
                }
            }
        ],
        "copyright": [
            "Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "cxx_header": [
            "error.hpp"
        ],
        "functions": [
            {
                "<FUNCTION>": "func0  0 ****************************************",
                "ast": {
                    "declarator": {
                        "attrs": {
                            "badfunc": true
                        },
                        "name": "func0",
                        "params": [],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func0() +badfunc",
                "declgen": "void func0(void) +badfunc",
                "name": "func0",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func0",
                    "F_name_api": "func0",
                    "function_name": "func0"
                }
            },
            {
                "<FUNCTION>": "func0a  1 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func0a",
                        "params": [
                            {
                                "declarator": {
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func0a(int)",
                "declgen": "void func0a(int)",
                "name": "func0a",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "no-name": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func0a",
                    "F_name_api": "func0a",
                    "function_name": "func0a"
                }
            },
            {
                "<FUNCTION>": "func0b  2 ****************************************",
                "ast": {
                    "declarator": {
                        "attrs": {
                            "deref": "pointer"
                        },
                        "name": "func0b",
                        "params": [],
                        "pointer": [
                            {
                                "ptr": "*"
                            },
                            {
                                "ptr": "*"
                            },
                            {
                                "ptr": "*"
                            }
                        ],
                        "typemap_name": "int"
                    },
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int ***func0b() +deref(pointer)",
                "declgen": "int * * * func0b(void) +deref(pointer)",
                "name": "func0b",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "c": {
                        "+result": {
                            "meta": {
                                "intent": "function"
                            },
                            "stmt": "f_mixin_unknown"
                        }
                    },
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "function"
                            }
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "function"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func0b",
                    "F_name_api": "func0b",
                    "function_name": "func0b"
                }
            },
            {
                "<FUNCTION>": "func0c  3 ****************************************",
                "ast": {
                    "declarator": {
                        "attrs": {
                            "deref": "pointer"
                        },
                        "name": "func0c",
                        "params": [],
                        "typemap_name": "int"
                    },
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int func0c() +deref(pointer)",
                "declgen": "int func0c(void) +deref(pointer)",
                "name": "func0c",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "c": {
                        "+result": {
                            "meta": {
                                "intent": "function"
                            },
                            "stmt": "c_function_native_scalar"
                        }
                    },
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "function"
                            }
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "function"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func0c",
                    "F_name_api": "func0c",
                    "function_name": "func0c"
                }
            },
            {
                "<FUNCTION>": "func0e  4 ****************************************",
                "ast": {
                    "declarator": {
                        "attrs": {
                            "dimension": true
                        },
                        "name": "func0e",
                        "params": [],
                        "pointer": [
                            {
                                "ptr": "*"
                            }
                        ],
                        "typemap_name": "int"
                    },
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int *func0e() +dimension",
                "declgen": "int * func0e(void) +dimension",
                "name": "func0e",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "function"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func0e",
                    "F_name_api": "func0e",
                    "function_name": "func0e"
                }
            },
            {
                "<FUNCTION>": "func0f  5 ****************************************",
                "ast": {
                    "declarator": {
                        "attrs": {
                            "dimension": "10"
                        },
                        "name": "func0f",
                        "params": [],
                        "typemap_name": "int"
                    },
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int func0f() +dimension(10)",
                "declgen": "int func0f(void) +dimension(10)",
                "name": "func0f",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "dimension": [
                                    {
                                        "constant": "10"
                                    }
                                ],
                                "intent": "function"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func0f",
                    "F_name_api": "func0f",
                    "function_name": "func0f"
                }
            },
            {
                "<FUNCTION>": "func1  6 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func1",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "bad": true
                                    },
                                    "name": "arg1",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func1(int arg1 +bad)",
                "declgen": "void func1(int arg1 +bad)",
                "name": "func1",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func1",
                    "F_name_api": "func1",
                    "function_name": "func1"
                }
            },
            {
                "<FUNCTION>": "func2  7 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func2",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "assumedtype": true,
                                        "value": true
                                    },
                                    "name": "arg1",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func2(int arg1 +assumedtype+value)",
                "declgen": "void func2(int arg1 +assumedtype+value)",
                "name": "func2",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func2",
                    "F_name_api": "func2",
                    "function_name": "func2"
                }
            },
            {
                "<FUNCTION>": "func3  8 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func3",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "charlen": true
                                    },
                                    "name": "arg1",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func3(int arg1 +charlen)",
                "declgen": "void func3(int arg1 +charlen)",
                "name": "func3",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func3",
                    "F_name_api": "func3",
                    "function_name": "func3"
                }
            },
            {
                "<FUNCTION>": "func3b  9 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func3b",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "charlen": true
                                    },
                                    "name": "arg1",
                                    "typemap_name": "char"
                                },
                                "specifier": [
                                    "char"
                                ],
                                "typemap_name": "char"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func3b(char arg1 +charlen)",
                "declgen": "void func3b(char arg1 +charlen)",
                "name": "func3b",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func3b",
                    "F_name_api": "func3b",
                    "function_name": "func3b"
                }
            },
            {
                "<FUNCTION>": "func3c  10 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func3c",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "charlen": true
                                    },
                                    "name": "arg1",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "char"
                                },
                                "specifier": [
                                    "char"
                                ],
                                "typemap_name": "char"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func3c(char *arg1 +charlen)",
                "declgen": "void func3c(char * arg1 +charlen)",
                "name": "func3c",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func3c",
                    "F_name_api": "func3c",
                    "function_name": "func3c"
                }
            },
            {
                "<FUNCTION>": "func4  11 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func4",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "blanknull": true
                                    },
                                    "name": "arg1",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "char"
                                },
                                "specifier": [
                                    "char"
                                ],
                                "typemap_name": "char"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func4(char *arg1 +blanknull)",
                "declgen": "void func4(char * arg1 +blanknull)",
                "name": "func4",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "c": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "c_subroutine"
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            },
                            "stmt": "c_inout_char_*"
                        }
                    },
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "api": "buf",
                                "blanknull": true,
                                "intent": "inout"
                            }
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func4",
                    "F_name_api": "func4",
                    "function_name": "func4"
                }
            },
            {
                "<FUNCTION>": "func6  12 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func6",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "rank": 1
                                    },
                                    "name": "arg1",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "std::vector"
                                },
                                "specifier": [
                                    "vector"
                                ],
                                "typemap_name": "std::vector"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func6(vector *arg1)",
                "declgen": "void func6(vector * arg1 +rank(1))",
                "name": "func6",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func6",
                    "F_name_api": "func6",
                    "function_name": "func6"
                }
            },
            {
                "<FUNCTION>": "func7  13 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func7",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "dimension": "n+=2"
                                    },
                                    "name": "arg1",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func7(int *arg1 +dimension(n+=2))",
                "declgen": "void func7(int * arg1 +dimension(n+=2))",
                "name": "func7",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func7",
                    "F_name_api": "func7",
                    "function_name": "func7"
                }
            },
            {
                "<FUNCTION>": "func8  14 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func8",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "none"
                                    },
                                    "name": "arg1",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func8(int arg1+intent(none))",
                "declgen": "void func8(int arg1 +intent(none))",
                "name": "func8",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func8",
                    "F_name_api": "func8",
                    "function_name": "func8"
                }
            },
            {
                "<FUNCTION>": "func8a  15 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func8a",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "out"
                                    },
                                    "name": "arg1",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func8a(int arg1+intent(out))",
                "declgen": "void func8a(int arg1 +intent(out))",
                "name": "func8a",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "out"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func8a",
                    "F_name_api": "func8a",
                    "function_name": "func8a"
                }
            },
            {
                "<FUNCTION>": "func9  16 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func9",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "deref": "none"
                                    },
                                    "name": "arg1",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func9(int *arg1+deref(none))",
                "declgen": "void func9(int * arg1 +deref(none))",
                "name": "func9",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "c": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "c_subroutine"
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            },
                            "stmt": "c_inout_native_*"
                        }
                    },
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            }
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func9",
                    "F_name_api": "func9",
                    "function_name": "func9"
                }
            },
            {
                "<FUNCTION>": "func9b  17 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func9b",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "deref": "pointer"
                                    },
                                    "name": "arg1",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func9b(int *arg1+deref(pointer))",
                "declgen": "void func9b(int * arg1 +deref(pointer))",
                "name": "func9b",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "c": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "c_subroutine"
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            },
                            "stmt": "c_inout_native_*"
                        }
                    },
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "deref": "pointer",
                                "intent": "inout"
                            }
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func9b",
                    "F_name_api": "func9b",
                    "function_name": "func9b"
                }
            },
            {
                "<FUNCTION>": "func9c  18 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func9c",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "deref": "pointer",
                                        "intent": "in"
                                    },
                                    "name": "arg1",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        },
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func9c(int **arg1+deref(pointer)+intent(in))",
                "declgen": "void func9c(int * * arg1 +deref(pointer)+intent(in))",
                "name": "func9c",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "c": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "c_subroutine"
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            },
                            "stmt": "c_in_native_**"
                        }
                    },
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "deref": "pointer",
                                "intent": "in"
                            }
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func9c",
                    "F_name_api": "func9c",
                    "function_name": "func9c"
                }
            },
            {
                "<FUNCTION>": "func10  19 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func10",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "api": "none"
                                    },
                                    "name": "arg1",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func10(int arg1 +api(none))",
                "declgen": "void func10(int arg1 +api(none))",
                "name": "func10",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "c": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            },
                            "stmt": "c_subroutine"
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            },
                            "stmt": "c_in_native_scalar"
                        }
                    },
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func10",
                    "F_name_api": "func10",
                    "function_name": "func10"
                }
            },
            {
                "<FUNCTION>": "func10b  20 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func10b",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "rank": true
                                    },
                                    "name": "arg1",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func10b(int arg1+rank)",
                "declgen": "void func10b(int arg1 +rank)",
                "name": "func10b",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func10b",
                    "F_name_api": "func10b",
                    "function_name": "func10b"
                }
            },
            {
                "<FUNCTION>": "func10c  21 ****************************************",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "name": "func10c",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "rank": "nrank"
                                    },
                                    "name": "arg1",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func10c(int *arg1+rank(nrank))",
                "declgen": "void func10c(int * arg1 +rank(nrank))",
                "name": "func10c",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func10c",
                    "F_name_api": "func10c",
                    "function_name": "func10c",
                    "function_suffix": "_0"
                }
            },
            {
                "<FUNCTION>": "func10c  22 ****************************************",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "name": "func10c",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "rank": 30
                                    },
                                    "name": "arg1",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func10c(int *arg1+rank(30))",
                "declgen": "void func10c(int * arg1 +rank(30))",
                "name": "func10c",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "inout"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func10c",
                    "F_name_api": "func10c",
                    "function_name": "func10c",
                    "function_suffix": "_1"
                }
            },
            {
                "<FUNCTION>": "func11  23 ****************************************",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "name": "func11",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "dimension": true
                                    },
                                    "name": "arg1",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func11(int arg1 +dimension)",
                "declgen": "void func11(int arg1 +dimension)",
                "name": "func11",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func11",
                    "F_name_api": "func11",
                    "function_name": "func11",
                    "function_suffix": "_0"
                }
            },
            {
                "<FUNCTION>": "func11  24 ****************************************",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "name": "func11",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "dimension": true,
                                        "value": true
                                    },
                                    "name": "arg1",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func11(int arg1 +dimension+value)",
                "declgen": "void func11(int arg1 +dimension+value)",
                "name": "func11",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func11",
                    "F_name_api": "func11",
                    "function_name": "func11",
                    "function_suffix": "_1"
                }
            },
            {
                "<FUNCTION>": "func11  25 ****************************************",
                "_overloaded": true,
                "ast": {
                    "declarator": {
                        "name": "func11",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "dimension": true,
                                        "rank": 2
                                    },
                                    "name": "arg1",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func11(int arg1 +dimension+rank(2))",
                "declgen": "void func11(int arg1 +dimension+rank(2))",
                "name": "func11",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func11",
                    "F_name_api": "func11",
                    "function_name": "func11",
                    "function_suffix": "_2"
                }
            },
            {
                "<FUNCTION>": "func12  26 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func12",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "out",
                                        "owner": "none"
                                    },
                                    "name": "arg1",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        },
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func12(int **arg1 +intent(out)+owner(none))",
                "declgen": "void func12(int * * arg1 +intent(out)+owner(none))",
                "name": "func12",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "arg1": {
                            "meta": {
                                "intent": "out"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func12",
                    "F_name_api": "func12",
                    "function_name": "func12"
                }
            },
            {
                "<FUNCTION>": "func13  27 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func13",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "in",
                                        "rank": 1
                                    },
                                    "name": "in",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "double"
                                },
                                "specifier": [
                                    "double"
                                ],
                                "typemap_name": "double"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "implied": "size(in,2,3)"
                                    },
                                    "name": "sizein",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func13(double *in     +intent(in)  +rank(1), int     sizein +implied(size(in,2,3)))",
                "declgen": "void func13(double * in +intent(in)+rank(1), int sizein +implied(size(in,2,3)))",
                "name": "func13",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "in": {
                            "meta": {
                                "intent": "in"
                            }
                        },
                        "sizein": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func13",
                    "F_name_api": "func13",
                    "function_name": "func13"
                }
            },
            {
                "<FUNCTION>": "func13b  28 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func13b",
                        "params": [
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "in",
                                        "rank": 1
                                    },
                                    "name": "in",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "double"
                                },
                                "specifier": [
                                    "double"
                                ],
                                "typemap_name": "double"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "implied": "size(none)"
                                    },
                                    "name": "sizein",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func13b(double *in     +intent(in)  +rank(1), int     sizein +implied(size(none)))",
                "declgen": "void func13b(double * in +intent(in)+rank(1), int sizein +implied(size(none)))",
                "name": "func13b",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "in": {
                            "meta": {
                                "intent": "in"
                            }
                        },
                        "sizein": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func13b",
                    "F_name_api": "func13b",
                    "function_name": "func13b"
                }
            },
            {
                "<FUNCTION>": "func13c  29 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func13c",
                        "params": [
                            {
                                "const": true,
                                "declarator": {
                                    "name": "text",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "char"
                                },
                                "specifier": [
                                    "char"
                                ],
                                "typemap_name": "char"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "implied": "len(text,2)"
                                    },
                                    "name": "ntext",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "implied": "len_trim(text,3)"
                                    },
                                    "name": "mtext",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func13c(const char *text, int ntext+implied(len(text,2)), int mtext+implied(len_trim(text,3)))",
                "declgen": "void func13c(const char * text, int ntext +implied(len(text,2)), int mtext +implied(len_trim(text,3)))",
                "name": "func13c",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "mtext": {
                            "meta": {
                                "intent": "in"
                            }
                        },
                        "ntext": {
                            "meta": {
                                "intent": "in"
                            }
                        },
                        "text": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func13c",
                    "F_name_api": "func13c",
                    "function_name": "func13c"
                }
            },
            {
                "<FUNCTION>": "func13d  30 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "func13d",
                        "params": [
                            {
                                "const": true,
                                "declarator": {
                                    "name": "text",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "char"
                                },
                                "specifier": [
                                    "char"
                                ],
                                "typemap_name": "char"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "implied": "len(text2)"
                                    },
                                    "name": "ntext",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "implied": "len_trim(text3)"
                                    },
                                    "name": "mtext",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void func13d(const char *text, int ntext+implied(len(text2)), int mtext+implied(len_trim(text3)))",
                "declgen": "void func13d(const char * text, int ntext +implied(len(text2)), int mtext +implied(len_trim(text3)))",
                "name": "func13d",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "mtext": {
                            "meta": {
                                "intent": "in"
                            }
                        },
                        "ntext": {
                            "meta": {
                                "intent": "in"
                            }
                        },
                        "text": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "func13d",
                    "F_name_api": "func13d",
                    "function_name": "func13d"
                }
            },
            {
                "<FUNCTION>": "callback_set_alloc  31 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "callback_set_alloc",
                        "params": [
                            {
                                "declarator": {
                                    "func": {
                                        "name": "alloc",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            }
                                        ],
                                        "typemap_name": "void"
                                    },
                                    "name": "alloc",
                                    "params": [
                                        {
                                            "declarator": {
                                                "attrs": {
                                                    "intent": "inout",
                                                    "value": true
                                                },
                                                "name": "tc",
                                                "typemap_name": "int"
                                            },
                                            "specifier": [
                                                "int"
                                            ],
                                            "typemap_name": "int"
                                        }
                                    ],
                                    "typemap_name": "void"
                                },
                                "specifier": [
                                    "void"
                                ],
                                "typemap_name": "void"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void callback_set_alloc(void (*alloc)(int tc+intent(none)))",
                "declgen": "void callback_set_alloc(void ( * alloc)(int tc +intent(none)))",
                "name": "callback_set_alloc",
                "options": {},
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "alloc": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "callback_set_alloc",
                    "F_name_api": "callback_set_alloc",
                    "function_name": "callback_set_alloc"
                }
            },
            {
                "<FUNCTION>": "AssignValues  32 ****************************************",
                "ast": {
                    "declarator": {
                        "name": "AssignValues",
                        "params": [
                            {
                                "const": true,
                                "declarator": {
                                    "name": "from",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            },
                            {
                                "declarator": {
                                    "name": "nfrom",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "out"
                                    },
                                    "name": "to",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            },
                            {
                                "declarator": {
                                    "name": "nto",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void AssignValues(const int *from, int nfrom, int *to+intent(out), int nto)",
                "declgen": "void AssignValues(const int * from, int nfrom, int * to +intent(out), int nto)",
                "fortran_generic": [
                    {
                        "decls": [
                            {
                                "const": true,
                                "declarator": {
                                    "name": "from",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            },
                            {
                                "declarator": {
                                    "name": "nfrom",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "rank": 8
                                    },
                                    "name": "to",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            },
                            {
                                "declarator": {
                                    "name": "nto",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "function_suffix": "_broadcast",
                        "generic": "(const int *from, int *to+rank(8))"
                    },
                    {
                        "decls": [
                            {
                                "const": true,
                                "declarator": {
                                    "name": "from",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            },
                            {
                                "declarator": {
                                    "name": "nfrom",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "deref": "allocatable2"
                                    },
                                    "name": "to",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            },
                            {
                                "declarator": {
                                    "name": "nto",
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "function_suffix": "_broadcast2",
                        "generic": "(const int *from, int *to+deref(allocatable2))"
                    }
                ],
                "name": "AssignValues",
                "options": {
                    "wrap_c": false,
                    "wrap_python": false
                },
                "wrap": {},
                "zz_bind": {
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "from": {
                            "meta": {
                                "intent": "in"
                            }
                        },
                        "nfrom": {
                            "meta": {
                                "intent": "in"
                            }
                        },
                        "nto": {
                            "meta": {
                                "intent": "in"
                            }
                        },
                        "to": {
                            "meta": {
                                "intent": "out"
                            }
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "AssignValues",
                    "F_name_api": "assign_values",
                    "function_name": "AssignValues"
                }
            },
            {
                "<FUNCTION>": "struct1_get_arg2  33 ****************************************",
                "_generated": "getter/setter",
                "_generated_path": [
                    "getter/setter"
                ],
                "ast": {
                    "declarator": {
                        "attrs": {
                            "deref": "pointerxx",
                            "dimension": "narg2"
                        },
                        "name": "struct1_get_arg2",
                        "params": [
                            {
                                "declarator": {
                                    "name": "SH_this",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "struct1"
                                },
                                "specifier": [
                                    "struct1"
                                ],
                                "typemap_name": "struct1"
                            }
                        ],
                        "pointer": [
                            {
                                "ptr": "*"
                            }
                        ],
                        "typemap_name": "int"
                    },
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int * struct1_get_arg2(struct1 *SH_this)",
                "declgen": "int * struct1_get_arg2(struct1 * SH_this) +deref(pointerxx)+dimension(narg2)",
                "helpers": {
                    "c": [
                        "type_defines",
                        "array_context"
                    ],
                    "f": [
                        "array_context"
                    ]
                },
                "name": "struct1_get_arg2",
                "options": {},
                "struct_parent": "struct1",
                "user_fmt": {
                    "field_name": "arg2",
                    "struct_name": "struct1",
                    "wrapped_name": "arg2"
                },
                "wrap": {
                    "fortran": true
                },
                "zz_bind": {
                    "f": {
                        "+result": {
                            "meta": {
                                "api": "cdesc",
                                "deref": "pointer",
                                "dimension": [
                                    {
                                        "name": "narg2"
                                    }
                                ],
                                "intent": "getter"
                            },
                            "stmt": "f_getter_native_*_cdesc_pointer"
                        },
                        "SH_this": {
                            "meta": {
                                "intent": "in"
                            },
                            "stmt": "f_in_struct_*"
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "dimension": [
                                    {
                                        "name": "narg2"
                                    }
                                ],
                                "intent": "function"
                            }
                        },
                        "SH_this": {
                            "meta": {
                                "intent": "inout"
                            }
                        }
                    }
                },
                "zz_fmtargs": {
                    "+result": {
                        "fmtf": {
                            "C_call_function": "struct1_get_arg2(\tSH_this)",
                            "C_call_list": "SH_this",
                            "C_name": "ERR_struct1_get_arg2",
                            "C_prototype": "ERR_struct1 * SH_this,\t ERR_SHROUD_array *SHT_rv_cdesc",
                            "C_return_type": "void",
                            "F_C_arguments": "SH_this,\t SHT_rv_cdesc",
                            "F_C_call": "c_struct1_get_arg2",
                            "F_C_name": "c_struct1_get_arg2",
                            "F_C_result_clause": "",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "SH_this,\t SHT_rv_cdesc",
                            "F_arguments": "SH_this",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "c_array_shape": "\nSHT_rv_cdesc->shape[0] = SH_this->narg2;",
                            "c_array_size": "SHT_rv_cdesc->shape[0]",
                            "c_array_size2": "SH_this->narg2",
                            "c_const": "",
                            "c_helper_array_context": "ERR_SHROUD_array",
                            "c_type": "int",
                            "c_var": "SHC_rv",
                            "c_var_cdesc": "SHT_rv_cdesc",
                            "cfi_type": "CFI_type_int",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_rv_decl": "int * SHC_rv",
                            "cxx_type": "int",
                            "cxx_var": "SHC_rv",
                            "f_array_allocate": "(SHT_rv_cdesc%shape(1))",
                            "f_array_shape": ",\t SHT_rv_cdesc%shape(1:1)",
                            "f_assumed_shape": "(:)",
                            "f_cdesc_shape": "\nSHT_rv_cdesc%shape(1:1) = shape(SHT_rv)",
                            "f_helper_array_context": "ERR_SHROUD_array",
                            "f_intent": "OUT",
                            "f_kind": "C_INT",
                            "f_type": "integer(C_INT)",
                            "f_type_module": "iso_c_binding",
                            "f_var": "SHT_rv",
                            "f_var_cdesc": "SHT_rv_cdesc",
                            "fc_var": "SHT_rv",
                            "i_var": "SHT_rv",
                            "i_var_cdesc": "SHT_rv_cdesc",
                            "idtor": "0",
                            "rank": "1",
                            "sh_type": "SH_TYPE_INT",
                            "stmt_name": "f_getter_native_*_cdesc_pointer"
                        }
                    },
                    "SH_this": {
                        "fmtf": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_type": "ERR_struct1",
                            "c_var": "SH_this",
                            "cfi_type": "CFI_type_struct",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "SH_this",
                            "cxx_type": "struct1",
                            "cxx_var": "SH_this",
                            "f_derived_type": "struct1",
                            "f_intent": "IN",
                            "f_kind": "struct1",
                            "f_type": "type(struct1)",
                            "f_type_module": "error_mod",
                            "f_var": "SH_this",
                            "fc_var": "SH_this",
                            "i_var": "SH_this",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt_name": "f_in_struct_*"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "struct1_get_arg2",
                    "F_name_api": "struct1_get_arg2",
                    "F_name_function": "struct1_get_arg2",
                    "F_name_generic": "struct1_get_arg2",
                    "F_name_impl": "struct1_get_arg2",
                    "field_name": "arg2",
                    "function_name": "struct1_get_arg2",
                    "struct_name": "struct1",
                    "wrapped_name": "arg2"
                }
            },
            {
                "<FUNCTION>": "struct1_set_arg2  34 ****************************************",
                "_generated": "getter/setter",
                "_generated_path": [
                    "getter/setter"
                ],
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "intent": "setter"
                        },
                        "name": "struct1_set_arg2",
                        "params": [
                            {
                                "declarator": {
                                    "name": "SH_this",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "struct1"
                                },
                                "specifier": [
                                    "struct1"
                                ],
                                "typemap_name": "struct1"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "in",
                                        "rank": 1
                                    },
                                    "name": "val",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void struct1_set_arg2(struct1 *SH_this,int * val)",
                "declgen": "void struct1_set_arg2(struct1 * SH_this, int * val +intent(in)+rank(1))",
                "name": "struct1_set_arg2",
                "options": {},
                "user_fmt": {
                    "field_name": "arg2",
                    "struct_name": "struct1",
                    "wrapped_name": "arg2"
                },
                "wrap": {
                    "fortran": true
                },
                "zz_bind": {
                    "f": {
                        "+result": {
                            "meta": {
                                "intent": "setter"
                            },
                            "stmt": "f_setter"
                        },
                        "SH_this": {
                            "meta": {
                                "intent": "inout"
                            },
                            "stmt": "f_inout_struct_*"
                        },
                        "val": {
                            "meta": {
                                "intent": "setter"
                            },
                            "stmt": "f_setter_native_*"
                        }
                    },
                    "share": {
                        "+result": {
                            "meta": {
                                "intent": "subroutine"
                            }
                        },
                        "SH_this": {
                            "meta": {
                                "intent": "inout"
                            }
                        },
                        "val": {
                            "meta": {
                                "intent": "in"
                            }
                        }
                    }
                },
                "zz_fmtargs": {
                    "+result": {
                        "fmtf": {
                            "C_call_function": "struct1_set_arg2(\tSH_this,\t val)",
                            "C_call_list": "SH_this,\t val",
                            "C_name": "ERR_struct1_set_arg2",
                            "C_prototype": "ERR_struct1 * SH_this,\t int * val",
                            "C_return_type": "void",
                            "F_C_arguments": "SH_this,\t val",
                            "F_C_call": "c_struct1_set_arg2",
                            "F_C_name": "struct1_set_arg2",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "SH_this,\t val",
                            "F_arguments": "SH_this,\t val",
                            "F_subprogram": "subroutine",
                            "stmt_name": "f_setter"
                        }
                    },
                    "SH_this": {
                        "fmtf": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_type": "ERR_struct1",
                            "c_var": "SH_this",
                            "cfi_type": "CFI_type_struct",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "SH_this",
                            "cxx_type": "struct1",
                            "cxx_var": "SH_this",
                            "f_derived_type": "struct1",
                            "f_intent": "INOUT",
                            "f_kind": "struct1",
                            "f_type": "type(struct1)",
                            "f_type_module": "error_mod",
                            "f_var": "SH_this",
                            "fc_var": "SH_this",
                            "i_var": "SH_this",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt_name": "f_inout_struct_*"
                        }
                    },
                    "val": {
                        "fmtf": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_type": "int",
                            "c_var": "val",
                            "cfi_type": "CFI_type_int",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "val",
                            "cxx_type": "int",
                            "cxx_var": "val",
                            "f_assumed_shape": "(:)",
                            "f_intent": "IN",
                            "f_kind": "C_INT",
                            "f_type": "integer(C_INT)",
                            "f_type_module": "iso_c_binding",
                            "f_var": "val",
                            "fc_var": "val",
                            "i_dimension": "(*)",
                            "i_var": "val",
                            "idtor": "0",
                            "rank": "1",
                            "sh_type": "SH_TYPE_INT",
                            "size": "size(val)",
                            "stmt_name": "f_setter_native_*"
                        }
                    }
                },
                "zz_fmtdict": {
                    "C_name_api": "struct1_set_arg2",
                    "F_name_api": "struct1_set_arg2",
                    "F_name_function": "struct1_set_arg2",
                    "F_name_generic": "struct1_set_arg2",
                    "F_name_impl": "struct1_set_arg2",
                    "field_name": "arg2",
                    "function_name": "struct1_set_arg2",
                    "struct_name": "struct1",
                    "wrapped_name": "arg2"
                }
            }
        ],
        "language": "cxx",
        "scope_file": [
            "error"
        ],
        "wrap": {
            "c": true,
            "fortran": true,
            "python": true
        }
    },
    "symtab": {
        "nested": "struct-nested",
        "struct-nested": "nested",
        "struct-struct1": "struct1",
        "struct1": "struct-struct1"
    },
    "types": {
        "nested": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "PYN_descr": "PY_nested_array_descr",
            "PY_struct_as": "numpy",
            "base": "struct",
            "c_type": "ERR_nested",
            "cfi_type": "CFI_type_struct",
            "cxx_type": "nested",
            "f_derived_type": "nested",
            "f_kind": "nested",
            "f_module": {
                "error_mod": [
                    "nested"
                ]
            },
            "f_module_name": "error_mod",
            "f_type": "type(nested)",
            "flat_name": "nested",
            "i_module": {
                "error_mod": [
                    "nested"
                ]
            },
            "sgroup": "struct",
            "sh_type": "SH_TYPE_STRUCT"
        },
        "struct1": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "PYN_descr": "PY_struct1_array_descr",
            "PY_PyObject": "PY_struct1",
            "PY_PyTypeObject": "PY_struct1_Type",
            "PY_from_object": "PP_struct1_from_Object",
            "PY_struct_as": "numpy",
            "PY_to_object": "PP_struct1_to_Object",
            "PY_to_object_idtor": "PP_struct1_to_Object_idtor",
            "base": "struct",
            "c_type": "ERR_struct1",
            "cfi_type": "CFI_type_struct",
            "cxx_type": "struct1",
            "f_derived_type": "struct1",
            "f_kind": "struct1",
            "f_module": {
                "error_mod": [
                    "struct1"
                ]
            },
            "f_module_name": "error_mod",
            "f_type": "type(struct1)",
            "flat_name": "struct1",
            "i_module": {
                "error_mod": [
                    "struct1"
                ]
            },
            "sgroup": "struct",
            "sh_type": "SH_TYPE_STRUCT"
        }
    }
}