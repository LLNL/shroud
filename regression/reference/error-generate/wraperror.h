// wraperror.h
// This file is generated by Shroud nowrite-version. Do not edit.
// Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
// other Shroud Project Developers.
// See the top-level COPYRIGHT file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//
/**
 * \file wraperror.h
 * \brief Shroud generated wrapper for error library
 */
// For C users and C++ implementation

#ifndef WRAPERROR_H
#define WRAPERROR_H

// shroud
#include "typeserror.h"

// splicer begin CXX_declarations
// splicer end CXX_declarations

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
}
#endif
#ifdef __cplusplus
using ERR_struct1 = struct1;
using ERR_nested = nested;
#else  // __cplusplus

typedef struct s_ERR_struct1 ERR_struct1;
struct s_ERR_struct1 {
    int arg1;
    int narg2;
    int * arg2;
};

typedef struct s_ERR_nested ERR_nested;
struct s_ERR_nested {
    int sublevels;
};
#endif  // __cplusplus

#ifdef __cplusplus
extern "C" {
#endif

// splicer begin C_declarations
// splicer end C_declarations

void ERR_struct1_get_arg2(ERR_struct1 * SH_this,
    ERR_SHROUD_array *SHT_rv_cdesc);

void ERR_struct1_set_arg2(ERR_struct1 * SH_this, int * val);

#ifdef __cplusplus
}
#endif

#endif  // WRAPERROR_H
