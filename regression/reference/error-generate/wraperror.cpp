// wraperror.cpp
// This file is generated by Shroud nowrite-version. Do not edit.
// Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
// other Shroud Project Developers.
// See the top-level COPYRIGHT file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//

// cxx_header
#include "error.hpp"
// shroud
#include "wraperror.h"

// splicer begin CXX_definitions
// splicer end CXX_definitions

extern "C" {

// splicer begin C_definitions
// splicer end C_definitions

// Generated by getter/setter
// ----------------------------------------
// Function:  int * struct1_get_arg2 +deref(pointerxx)+dimension(narg2)+intent(getter)
// Statement: f_mixin_unknown
// ----------------------------------------
// Argument:  struct1 * SH_this +intent(in)
// Statement: f_in_struct_*
int * ERR_struct1_get_arg2(ERR_struct1 * SH_this, ===>SHC_rv<===)
{
    // splicer begin function.struct1_get_arg2
    int * SHC_rv = struct1_get_arg2(SH_this);
    return SHC_rv;
    // splicer end function.struct1_get_arg2
}

// Generated by getter/setter
// ----------------------------------------
// Function:  void struct1_set_arg2 +intent(setter)
// Statement: f_setter
// ----------------------------------------
// Argument:  struct1 * SH_this
// Statement: f_inout_struct_*
// ----------------------------------------
// Argument:  int * val +intent(setter)+rank(1)
// Statement: f_setter_native_*
void ERR_struct1_set_arg2(ERR_struct1 * SH_this, int * val)
{
    // splicer begin function.struct1_set_arg2
    // skip call c_setter
    SH_this->arg2 = val;
    // splicer end function.struct1_set_arg2
}

}  // extern "C"
