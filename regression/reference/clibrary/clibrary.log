Read yaml clibrary.yaml
Close clibrary_types.yaml
C void NoReturnNoArguments(void)  +intent(subroutine)
C double PassByValue(double arg1 +value, int arg2 +value)  +intent(function)
C void PassByReference(double * arg1 +intent(in), int * arg2 +intent(out))  +intent(subroutine)
C double PassByValueMacro(int arg2 +value)  +intent(function)
C void checkBool(const bool arg1 +value, bool * arg2 +intent(out), bool * arg3 +intent(inout))  +intent(subroutine)
C char * Function4a(const char * arg1, const char * arg2) +len(30)  +deref(copy)+intent(function)
C char * Function4a(const char * arg1, const char * arg2) +len(30)  +api(buf)+deref(copy)+intent(function)
C void acceptName(const char * name)  +intent(subroutine)
C void passCharPtrInOut(char * s +intent(inout))  +intent(subroutine)
C void passCharPtrInOut(char * s +intent(inout))  +intent(subroutine)
C void returnOneName(char * name1 +charlen(MAXNAME)+intent(out))  +intent(subroutine)
C void returnOneName(char * name1 +charlen(MAXNAME)+intent(out))  +intent(subroutine)
C void returnTwoNames(char * name1 +charlen(MAXNAME)+intent(out), char * name2 +charlen(MAXNAME)+intent(out))  +intent(subroutine)
C void returnTwoNames(char * name1 +charlen(MAXNAME)+intent(out), char * name2 +charlen(MAXNAME)+intent(out))  +intent(subroutine)
C void ImpliedTextLen(char * text +charlen(MAXNAME)+intent(out), int ltext +implied(len(text))+value)  +intent(subroutine)
C void ImpliedTextLen(char * text +charlen(MAXNAME)+intent(out), int ltext +implied(len(text))+value)  +intent(subroutine)
C int ImpliedLen(const char * text, int ltext +implied(len(text))+value, bool flag +implied(false)+value)  +intent(function)
C int ImpliedLenTrim(const char * text, int ltext +implied(len_trim(text))+value, bool flag +implied(true)+value)  +intent(function)
C bool ImpliedBoolTrue(bool flag +implied(true)+value)  +intent(function)
C bool ImpliedBoolFalse(bool flag +implied(false)+value)  +intent(function)
C void bindC1(void)  +intent(subroutine)
C void bindC2(char * outbuf +intent(out))  +intent(subroutine)
C void bindC2(char * outbuf +intent(out))  +intent(subroutine)
C void passVoidStarStar(void * in +intent(in)+value, void * * out +intent(out))  +intent(subroutine)
C int passAssumedType(void * arg +assumedtype)  +intent(function)
C void passAssumedTypeDim(void * arg +assumedtype+rank(1))  +intent(subroutine)
C int passAssumedTypeBuf(void * arg +assumedtype, char * outbuf +intent(out))  +intent(function)
C int passAssumedTypeBuf(void * arg +assumedtype, char * outbuf +intent(out))  +intent(function)
C void callback1(int type +value, void ( * incr)(void) +external+value)  +intent(subroutine)
C void callback1a(int type +value, void ( * incr)(void) +external+value)  +intent(subroutine)
C void callback2(int type +value, void * in +assumedtype, void ( * incr)(int *) +external+value)  +intent(subroutine)
C void callback3(const char * type, void * in +assumedtype, void ( * incr)(int *) +external+value, char * outbuf +intent(out))  +intent(subroutine)
C void callback3(const char * type, void * in +assumedtype, void ( * incr)(int *) +external+value, char * outbuf +intent(out))  +intent(subroutine)
C void callback_set_alloc(int tc +value, array_info * arr +intent(inout), void ( * alloc)(int tc +intent(in)+value, array_info * arr +intent(inout)) +value)  +intent(subroutine)
Close wrapClibrary.h
Close wrapClibrary.c
class array_info
typedef TypeID
typedef EnumTypeID
Fortran void NoReturnNoArguments(void)  +intent(subroutine)
Fortran double PassByValue(double arg1 +value, int arg2 +value)  +intent(function)
Fortran void PassByReference(double * arg1 +intent(in), int * arg2 +intent(out))  +intent(subroutine)
Fortran double PassByValueMacro(int arg2 +value)  +intent(function)
Fortran void checkBool(const bool arg1 +value, bool * arg2 +intent(out), bool * arg3 +intent(inout))  +intent(subroutine)
Fortran char * Function4a(const char * arg1, const char * arg2) +len(30)  +deref(copy)+intent(function)
Fortran void acceptName(const char * name)  +intent(subroutine)
Fortran void passCharPtrInOut(char * s +intent(inout))  +intent(subroutine)
Fortran void returnOneName(char * name1 +charlen(MAXNAME)+intent(out))  +intent(subroutine)
Fortran void returnTwoNames(char * name1 +charlen(MAXNAME)+intent(out), char * name2 +charlen(MAXNAME)+intent(out))  +intent(subroutine)
Fortran void ImpliedTextLen(char * text +charlen(MAXNAME)+intent(out), int ltext +implied(len(text))+value)  +intent(subroutine)
Fortran int ImpliedLen(const char * text, int ltext +implied(len(text))+value, bool flag +implied(false)+value)  +intent(function)
Fortran int ImpliedLenTrim(const char * text, int ltext +implied(len_trim(text))+value, bool flag +implied(true)+value)  +intent(function)
Fortran bool ImpliedBoolTrue(bool flag +implied(true)+value)  +intent(function)
Fortran bool ImpliedBoolFalse(bool flag +implied(false)+value)  +intent(function)
Fortran void bindC1(void)  +intent(subroutine)
Fortran void bindC2(char * outbuf +intent(out))  +intent(subroutine)
Fortran void passVoidStarStar(void * in +intent(in)+value, void * * out +intent(out))  +intent(subroutine)
Fortran int passAssumedType(void * arg +assumedtype)  +intent(function)
Fortran void passAssumedTypeDim(void * arg +assumedtype+rank(1))  +intent(subroutine)
Fortran int passAssumedTypeBuf(void * arg +assumedtype, char * outbuf +intent(out))  +intent(function)
Fortran void callback1(int type +value, void ( * incr)(void) +external+value)  +intent(subroutine)
Fortran void callback1a(int type +value, void ( * incr)(void) +external+value)  +intent(subroutine)
Fortran void callback2(int type +value, void * in +assumedtype, void ( * incr)(int *) +external+value)  +intent(subroutine)
Fortran void callback3(const char * type, void * in +assumedtype, void ( * incr)(int *) +external+value, char * outbuf +intent(out))  +intent(subroutine)
Fortran void callback_set_alloc(int tc +value, array_info * arr +intent(inout), void ( * alloc)(int tc +intent(in)+value, array_info * arr +intent(inout)) +value)  +intent(subroutine)
C-interface void NoReturnNoArguments(void)  +intent(subroutine)
C-interface double PassByValue(double arg1 +value, int arg2 +value)  +intent(function)
C-interface void PassByReference(double * arg1 +intent(in), int * arg2 +intent(out))  +intent(subroutine)
C-interface double PassByValueMacro(int arg2 +value)  +intent(function)
C-interface void checkBool(const bool arg1 +value, bool * arg2 +intent(out), bool * arg3 +intent(inout))  +intent(subroutine)
C-interface char * Function4a(const char * arg1, const char * arg2) +len(30)  +deref(copy)+intent(function)
C-interface char * Function4a(const char * arg1, const char * arg2) +len(30)  +api(buf)+deref(copy)+intent(function)
C-interface void acceptName(const char * name)  +intent(subroutine)
C-interface void passCharPtrInOut(char * s +intent(inout))  +intent(subroutine)
C-interface void passCharPtrInOut(char * s +intent(inout))  +intent(subroutine)
C-interface void returnOneName(char * name1 +charlen(MAXNAME)+intent(out))  +intent(subroutine)
C-interface void returnOneName(char * name1 +charlen(MAXNAME)+intent(out))  +intent(subroutine)
C-interface void returnTwoNames(char * name1 +charlen(MAXNAME)+intent(out), char * name2 +charlen(MAXNAME)+intent(out))  +intent(subroutine)
C-interface void returnTwoNames(char * name1 +charlen(MAXNAME)+intent(out), char * name2 +charlen(MAXNAME)+intent(out))  +intent(subroutine)
C-interface void ImpliedTextLen(char * text +charlen(MAXNAME)+intent(out), int ltext +implied(len(text))+value)  +intent(subroutine)
C-interface void ImpliedTextLen(char * text +charlen(MAXNAME)+intent(out), int ltext +implied(len(text))+value)  +intent(subroutine)
C-interface int ImpliedLen(const char * text, int ltext +implied(len(text))+value, bool flag +implied(false)+value)  +intent(function)
C-interface int ImpliedLenTrim(const char * text, int ltext +implied(len_trim(text))+value, bool flag +implied(true)+value)  +intent(function)
C-interface bool ImpliedBoolTrue(bool flag +implied(true)+value)  +intent(function)
C-interface bool ImpliedBoolFalse(bool flag +implied(false)+value)  +intent(function)
C-interface void bindC1(void)  +intent(subroutine)
C-interface void bindC2(char * outbuf +intent(out))  +intent(subroutine)
C-interface void bindC2(char * outbuf +intent(out))  +intent(subroutine)
C-interface void passVoidStarStar(void * in +intent(in)+value, void * * out +intent(out))  +intent(subroutine)
C-interface int passAssumedType(void * arg +assumedtype)  +intent(function)
C-interface void passAssumedTypeDim(void * arg +assumedtype+rank(1))  +intent(subroutine)
C-interface int passAssumedTypeBuf(void * arg +assumedtype, char * outbuf +intent(out))  +intent(function)
C-interface int passAssumedTypeBuf(void * arg +assumedtype, char * outbuf +intent(out))  +intent(function)
C-interface void callback1(int type +value, void ( * incr)(void) +external+value)  +intent(subroutine)
C-interface void callback1a(int type +value, void ( * incr)(void) +external+value)  +intent(subroutine)
C-interface void callback2(int type +value, void * in +assumedtype, void ( * incr)(int *) +external+value)  +intent(subroutine)
C-interface void callback3(const char * type, void * in +assumedtype, void ( * incr)(int *) +external+value, char * outbuf +intent(out))  +intent(subroutine)
C-interface void callback3(const char * type, void * in +assumedtype, void ( * incr)(int *) +external+value, char * outbuf +intent(out))  +intent(subroutine)
C-interface void callback_set_alloc(int tc +value, array_info * arr +intent(inout), void ( * alloc)(int tc +intent(in)+value, array_info * arr +intent(inout)) +value)  +intent(subroutine)
Close wrapfclibrary.f
Close utilClibrary.c
Close typesClibrary.h
Python function void NoReturnNoArguments(void)
Python function double PassByValue(double arg1 +value, int arg2 +value)
Python function void PassByReference(double * arg1 +intent(in), int * arg2 +intent(out))
Python function double PassByValueMacro(int arg2 +value)
Python function void checkBool(const bool arg1 +value, bool * arg2 +intent(out), bool * arg3 +intent(inout))
Python function char * Function4a(const char * arg1, const char * arg2) +len(30)
Python function void acceptName(const char * name)
Python function void passCharPtrInOut(char * s +intent(inout))
Python function void returnOneName(char * name1 +charlen(MAXNAME)+intent(out))
Python function void returnTwoNames(char * name1 +charlen(MAXNAME)+intent(out), char * name2 +charlen(MAXNAME)+intent(out))
Python function void ImpliedTextLen(char * text +charlen(MAXNAME)+intent(out), int ltext +implied(len(text))+value)
Python function int ImpliedLen(const char * text, int ltext +implied(len(text))+value, bool flag +implied(false)+value)
Python function int ImpliedLenTrim(const char * text, int ltext +implied(len_trim(text))+value, bool flag +implied(true)+value)
Python function bool ImpliedBoolTrue(bool flag +implied(true)+value)
Python function bool ImpliedBoolFalse(bool flag +implied(false)+value)
Close pyClibrarymodule.c
Close pyClibrarymodule.h
Close setup.py
