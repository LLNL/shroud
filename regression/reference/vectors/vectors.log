Read yaml vectors.yaml
C c int vector_sum(const std::vector<int> & arg +rank(1))
C f int vector_sum(const std::vector<int> & arg +rank(1))
C c void vector_iota_out(std::vector<int> & arg +intent(out)+rank(1))
C f void vector_iota_out(std::vector<int> & arg +intent(out)+rank(1))
C c void vector_iota_out_with_num(std::vector<int> & arg +intent(out)+rank(1))
C f void vector_iota_out_with_num(std::vector<int> & arg +intent(out)+rank(1))
C c void vector_iota_out_with_num2(std::vector<int> & arg +intent(out)+rank(1))
C f void vector_iota_out_with_num2(std::vector<int> & arg +intent(out)+rank(1))
C c void vector_iota_out_alloc(std::vector<int> & arg +deref(allocatable)+intent(out)+rank(1))
C f void vector_iota_out_alloc(std::vector<int> & arg +deref(allocatable)+intent(out)+rank(1))
C c void vector_iota_inout_alloc(std::vector<int> & arg +deref(allocatable)+intent(inout)+rank(1))
C f void vector_iota_inout_alloc(std::vector<int> & arg +deref(allocatable)+intent(inout)+rank(1))
C c void vector_increment(std::vector<int> & arg +rank(1))
C f void vector_increment(std::vector<int> & arg +rank(1))
C c void vector_iota_out_d(std::vector<double> & arg +intent(out)+rank(1))
C f void vector_iota_out_d(std::vector<double> & arg +intent(out)+rank(1))
C c int vector_of_pointers(std::vector<const double * > & arg1 +intent(in)+rank(1), int num +value)
C f int vector_of_pointers(std::vector<const double * > & arg1 +intent(in)+rank(1), int num +value)
C c int vector_string_count(const std::vector<std::string> & arg +rank(1))
C f int vector_string_count(const std::vector<std::string> & arg +rank(1))
C c void vector_string_fill(std::vector<std::string> & arg +intent(out)+rank(1))
C f void vector_string_fill(std::vector<std::string> & arg +intent(out)+rank(1))
C c void vector_string_fill_allocatable(std::vector<std::string> & arg +deref(allocatable)+intent(out)+rank(1))
C f void vector_string_fill_allocatable(std::vector<std::string> & arg +deref(allocatable)+intent(out)+rank(1))
C c void vector_string_fill_allocatable_len(std::vector<std::string> & arg +deref(allocatable)+intent(out)+len(20)+rank(1))
C f void vector_string_fill_allocatable_len(std::vector<std::string> & arg +deref(allocatable)+intent(out)+len(20)+rank(1))
C c std::vector<int> ReturnVectorAlloc(int n +value) +rank(1)
C f std::vector<int> ReturnVectorAlloc(int n +value) +rank(1)
C c int returnDim2(int * arg +intent(in)+rank(2), int len +implied(size(arg,2))+value)
C f int returnDim2(int * arg +intent(in)+rank(2), int len +implied(size(arg,2))+value)
Close wrapvectors.h
Close wrapvectors.cpp
Fortran int vector_sum(const std::vector<int> & arg +rank(1))
Fortran void vector_iota_out(std::vector<int> & arg +intent(out)+rank(1))
Fortran void vector_iota_out_with_num(std::vector<int> & arg +intent(out)+rank(1))
Fortran void vector_iota_out_with_num2(std::vector<int> & arg +intent(out)+rank(1))
Fortran void vector_iota_out_alloc(std::vector<int> & arg +deref(allocatable)+intent(out)+rank(1))
Fortran void vector_iota_inout_alloc(std::vector<int> & arg +deref(allocatable)+intent(inout)+rank(1))
Fortran void vector_increment(std::vector<int> & arg +rank(1))
Fortran void vector_iota_out_d(std::vector<double> & arg +intent(out)+rank(1))
Fortran int vector_of_pointers(std::vector<const double * > & arg1 +intent(in)+rank(1), int num +value)
Fortran int vector_string_count(const std::vector<std::string> & arg +rank(1))
Fortran void vector_string_fill(std::vector<std::string> & arg +intent(out)+rank(1))
Fortran void vector_string_fill_allocatable(std::vector<std::string> & arg +deref(allocatable)+intent(out)+rank(1))
Fortran void vector_string_fill_allocatable_len(std::vector<std::string> & arg +deref(allocatable)+intent(out)+len(20)+rank(1))
Fortran std::vector<int> ReturnVectorAlloc(int n +value) +rank(1)
Fortran int returnDim2(int * arg +intent(in)+rank(2), int len +implied(size(arg,2))+value)
C-interface f int vector_sum(const std::vector<int> & arg +rank(1))
C-interface c void vector_iota_out(std::vector<int> & arg +intent(out)+rank(1))
C-interface f void vector_iota_out(std::vector<int> & arg +intent(out)+rank(1))
C-interface c void vector_iota_out_with_num(std::vector<int> & arg +intent(out)+rank(1))
C-interface f void vector_iota_out_with_num(std::vector<int> & arg +intent(out)+rank(1))
C-interface c void vector_iota_out_with_num2(std::vector<int> & arg +intent(out)+rank(1))
C-interface f void vector_iota_out_with_num2(std::vector<int> & arg +intent(out)+rank(1))
C-interface c void vector_iota_out_alloc(std::vector<int> & arg +deref(allocatable)+intent(out)+rank(1))
C-interface f void vector_iota_out_alloc(std::vector<int> & arg +deref(allocatable)+intent(out)+rank(1))
C-interface c void vector_iota_inout_alloc(std::vector<int> & arg +deref(allocatable)+intent(inout)+rank(1))
C-interface f void vector_iota_inout_alloc(std::vector<int> & arg +deref(allocatable)+intent(inout)+rank(1))
C-interface c void vector_increment(std::vector<int> & arg +rank(1))
C-interface f void vector_increment(std::vector<int> & arg +rank(1))
C-interface c void vector_iota_out_d(std::vector<double> & arg +intent(out)+rank(1))
C-interface f void vector_iota_out_d(std::vector<double> & arg +intent(out)+rank(1))
C-interface f int vector_of_pointers(std::vector<const double * > & arg1 +intent(in)+rank(1), int num +value)
C-interface f int vector_string_count(const std::vector<std::string> & arg +rank(1))
C-interface c void vector_string_fill(std::vector<std::string> & arg +intent(out)+rank(1))
C-interface f void vector_string_fill(std::vector<std::string> & arg +intent(out)+rank(1))
C-interface c void vector_string_fill_allocatable(std::vector<std::string> & arg +deref(allocatable)+intent(out)+rank(1))
C-interface f void vector_string_fill_allocatable(std::vector<std::string> & arg +deref(allocatable)+intent(out)+rank(1))
C-interface c void vector_string_fill_allocatable_len(std::vector<std::string> & arg +deref(allocatable)+intent(out)+len(20)+rank(1))
C-interface f void vector_string_fill_allocatable_len(std::vector<std::string> & arg +deref(allocatable)+intent(out)+len(20)+rank(1))
C-interface c std::vector<int> ReturnVectorAlloc(int n +value) +rank(1)
C-interface f std::vector<int> ReturnVectorAlloc(int n +value) +rank(1)
C-interface f int returnDim2(int * arg +intent(in)+rank(2), int len +implied(size(arg,2))+value)
Close wrapfvectors.f
Close utilvectors.cpp
Close typesvectors.h
