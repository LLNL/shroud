Read yaml cxxlibrary.yaml
Close cxxlibrary_types.yaml
struct Cstruct1
C int passStructByReference(Cstruct1 & arg)  +intent(function)
C int passStructByReferenceIn(const Cstruct1 & arg)  +intent(function)
C void passStructByReferenceInout(Cstruct1 & arg +intent(inout))  +intent(subroutine)
C void passStructByReferenceOut(Cstruct1 & arg +intent(out))  +intent(subroutine)
Close wrapcxxlibrary_structns.h
Close wrapcxxlibrary_structns.cpp
class Class1
C Class1(void)  +api(capptr)+intent(ctor)
C int check_length(void)  +intent(function)
C int check_length(int length=1 +value)  +intent(function)
C Class1 * declare(int flag +value)  +api(this)+intent(function)
C Class1 * declare(int flag +value, int length=1 +value)  +api(this)+intent(function)
C int get_length(void)  +intent(getter)
Close wrapClass1.h
Close wrapClass1.cpp
struct nested
C bool defaultPtrIsNULL(void)  +intent(function)
C bool defaultPtrIsNULL(double * data=nullptr +intent(IN)+rank(1))  +intent(function)
C void defaultArgsInOut(int in1 +value, int * out1 +intent(out), int * out2 +intent(out))  +intent(subroutine)
C void defaultArgsInOut(int in1 +value, int * out1 +intent(out), int * out2 +intent(out), bool flag=false +value)  +intent(subroutine)
C const std::string & getGroupName(long idx +value) +len(30)  +deref(copy)+intent(function)
C const std::string & getGroupName(int32_t idx +value) +len(30)  +api(buf)+deref(copy)+intent(function)
C const std::string & getGroupName(int64_t idx +value) +len(30)  +api(buf)+deref(copy)+intent(function)
C nested * nested_get_parent(nested * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)
C void nested_set_parent(nested * SH_this, nested * val +intent(in))  +intent(setter)
C nested * * nested_get_child(nested * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)
C void nested_set_child(nested * SH_this, nested * * val +intent(in)+rank(1))  +intent(setter)
Close wrapcxxlibrary.h
Close wrapcxxlibrary.cpp
class nested
class Class1
Fortran Class1(void)  +api(capptr)+intent(ctor)
Fortran int check_length(void)  +intent(function)
Fortran int check_length(int length=1 +value)  +intent(function)
Fortran int check_length(long length=1 +value)  +intent(function)
Fortran Class1 * declare(int flag +value)  +api(this)+intent(function)
Fortran Class1 * declare(int flag +value, int length=1 +value)  +api(this)+intent(function)
Fortran Class1 * declare(int flag +value, long length=1 +value)  +api(this)+intent(function)
Fortran int get_length(void)  +intent(getter)
C-interface Class1(void)  +api(capptr)+intent(ctor)
C-interface int check_length(void)  +intent(function)
C-interface int check_length(int length=1 +value)  +intent(function)
C-interface Class1 * declare(int flag +value)  +api(this)+intent(function)
C-interface Class1 * declare(int flag +value, int length=1 +value)  +api(this)+intent(function)
C-interface int get_length(void)  +intent(getter)
Fortran bool defaultPtrIsNULL(void)  +intent(function)
Fortran bool defaultPtrIsNULL(double * data=nullptr +intent(IN)+rank(1))  +intent(function)
Fortran void defaultArgsInOut(int in1 +value, int * out1 +intent(out), int * out2 +intent(out))  +intent(subroutine)
Fortran void defaultArgsInOut(int in1 +value, int * out1 +intent(out), int * out2 +intent(out), bool flag=false +value)  +intent(subroutine)
Fortran const std::string & getGroupName(int32_t idx +value) +len(30)  +api(buf)+deref(copy)+intent(function)
Fortran const std::string & getGroupName(int64_t idx +value) +len(30)  +api(buf)+deref(copy)+intent(function)
Fortran nested * nested_get_parent(nested * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)
Fortran void nested_set_parent(nested * SH_this, nested * val +intent(in))  +intent(setter)
Fortran nested * * nested_get_child(nested * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)
Fortran void nested_set_child(nested * SH_this, nested * * val +intent(in)+rank(1))  +intent(setter)
C-interface bool defaultPtrIsNULL(void)  +intent(function)
C-interface bool defaultPtrIsNULL(double * data=nullptr +intent(IN)+rank(1))  +intent(function)
C-interface void defaultArgsInOut(int in1 +value, int * out1 +intent(out), int * out2 +intent(out))  +intent(subroutine)
C-interface void defaultArgsInOut(int in1 +value, int * out1 +intent(out), int * out2 +intent(out), bool flag=false +value)  +intent(subroutine)
C-interface const std::string & getGroupName(long idx +value) +len(30)  +deref(copy)+intent(function)
C-interface const std::string & getGroupName(int32_t idx +value) +len(30)  +api(buf)+deref(copy)+intent(function)
C-interface const std::string & getGroupName(int64_t idx +value) +len(30)  +api(buf)+deref(copy)+intent(function)
C-interface nested * nested_get_parent(nested * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)
C-interface void nested_set_parent(nested * SH_this, nested * val +intent(in))  +intent(setter)
C-interface nested * * nested_get_child(nested * SH_this)  +api(cdesc)+deref(pointer)+intent(getter)
C-interface void nested_set_child(nested * SH_this, nested * * val +intent(in)+rank(1))  +intent(setter)
class Cstruct1
Fortran int passStructByReference(Cstruct1 & arg)  +intent(function)
Fortran int passStructByReferenceIn(const Cstruct1 & arg)  +intent(function)
Fortran void passStructByReferenceInout(Cstruct1 & arg +intent(inout))  +intent(subroutine)
Fortran void passStructByReferenceOut(Cstruct1 & arg +intent(out))  +intent(subroutine)
C-interface int passStructByReference(Cstruct1 & arg)  +intent(function)
C-interface int passStructByReferenceIn(const Cstruct1 & arg)  +intent(function)
C-interface void passStructByReferenceInout(Cstruct1 & arg +intent(inout))  +intent(subroutine)
C-interface void passStructByReferenceOut(Cstruct1 & arg +intent(out))  +intent(subroutine)
Close wrapfcxxlibrary_structns.f
Close wrapfcxxlibrary.f
Close utilcxxlibrary.cpp
Close typescxxlibrary.h
Python function int passStructByReference(Cstruct1 & arg)
Python function int passStructByReferenceIn(const Cstruct1 & arg)
Python function void passStructByReferenceInout(Cstruct1 & arg +intent(inout))
Python function void passStructByReferenceOut(Cstruct1 & arg +intent(out))
Close pycxxlibrary_structnsmodule.cpp
class Cstruct1_cls
Python method Cstruct1_cls(int ifield, double dfield) +name(Cstruct1_cls_ctor)
Close pyCstruct1_clstype.cpp
Python function int passStructByReferenceCls(Cstruct1_cls & arg)
Python function int passStructByReferenceInCls(const Cstruct1_cls & arg)
Python function void passStructByReferenceInoutCls(Cstruct1_cls & arg +intent(inout))
Python function void passStructByReferenceOutCls(Cstruct1_cls & arg +intent(out))
Python function bool defaultPtrIsNULL(double * data=nullptr +intent(IN)+rank(1))
Python function void defaultArgsInOut(int in1 +value, int * out1 +intent(out), int * out2 +intent(out), bool flag=false +value)
Close pycxxlibrarymodule.cpp
Close pycxxlibraryutil.cpp
Close pycxxlibrarymodule.hpp
Close setup.py
