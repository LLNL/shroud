// wrapcxxlibrary.h
// This file is generated by Shroud nowrite-version. Do not edit.
// Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
// other Shroud Project Developers.
// See the top-level COPYRIGHT file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//
/**
 * \file wrapcxxlibrary.h
 * \brief Shroud generated wrapper for cxxlibrary library
 */
// For C users and C++ implementation

#ifndef WRAPCXXLIBRARY_H
#define WRAPCXXLIBRARY_H

// typemap
#ifdef __cplusplus
#include <cstdint>
#else
#include <stdbool.h>
#include <stdint.h>
#endif
// shroud
#include "typescxxlibrary.h"

// splicer begin CXX_declarations
// splicer end CXX_declarations

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
}
#endif
#ifdef __cplusplus
using CXX_nested = nested;
#else  // __cplusplus

typedef struct s_CXX_nested CXX_nested;
struct s_CXX_nested {
    int index;
    int sublevels;
    CXX_nested * parent;
    CXX_nested * * child;
};
#endif  // __cplusplus

#ifdef __cplusplus
extern "C" {
#endif

// splicer begin C_declarations
// splicer end C_declarations

bool CXX_defaultPtrIsNULL_0(void);

bool CXX_defaultPtrIsNULL_1(double * data);

void CXX_defaultArgsInOut_0(int in1, int * out1, int * out2);

void CXX_defaultArgsInOut_1(int in1, int * out1, int * out2, bool flag);

const char * CXX_getGroupName(long idx);

void CXX_getGroupName_int32_t_bufferify(int32_t idx, char *SHC_rv,
    int SHT_rv_len);

void CXX_getGroupName_int64_t_bufferify(int64_t idx, char *SHC_rv,
    int SHT_rv_len);

void CXX_nested_get_parent(CXX_nested * SH_this,
    CXX_SHROUD_array *SHT_rv_cdesc);

void CXX_nested_set_parent(CXX_nested * SH_this, CXX_nested * val);

void CXX_nested_get_child_bufferify(CXX_nested * SH_this,
    CXX_SHROUD_array *SHT_rv_cdesc);

void CXX_nested_set_child(CXX_nested * SH_this, CXX_nested * * val);

#ifdef __cplusplus
}
#endif

#endif  // WRAPCXXLIBRARY_H
