{
    "__NOTICE__": "This file is generated by Shroud 0.11.0 and is useful for debugging.",
    "library": {
        "classes": [
            {
                "cxx_header": [],
                "enums": [
                    {
                        "_fmtmembers": {
                            "DOWN": {
                                "C_enum_member": "CLA_Class1_DOWN",
                                "F_enum_member": "class1_down",
                                "F_value": 3,
                                "enum_member_lower": "down",
                                "enum_member_name": "DOWN",
                                "enum_member_upper": "DOWN"
                            },
                            "LEFT": {
                                "C_enum_member": "CLA_Class1_LEFT",
                                "C_value": 100,
                                "F_enum_member": "class1_left",
                                "F_value": 100,
                                "enum_member_lower": "left",
                                "enum_member_name": "LEFT",
                                "enum_member_upper": "LEFT"
                            },
                            "RIGHT": {
                                "C_enum_member": "CLA_Class1_RIGHT",
                                "F_enum_member": "class1_right",
                                "F_value": 101,
                                "enum_member_lower": "right",
                                "enum_member_name": "RIGHT",
                                "enum_member_upper": "RIGHT"
                            },
                            "UP": {
                                "C_enum_member": "CLA_Class1_UP",
                                "C_value": 2,
                                "F_enum_member": "class1_up",
                                "F_value": 2,
                                "enum_member_lower": "up",
                                "enum_member_name": "UP",
                                "enum_member_upper": "UP"
                            }
                        },
                        "ast": {
                            "members": [
                                {
                                    "name": "UP",
                                    "value": {
                                        "constant": "2"
                                    }
                                },
                                {
                                    "name": "DOWN"
                                },
                                {
                                    "name": "LEFT",
                                    "value": {
                                        "constant": "100"
                                    }
                                },
                                {
                                    "name": "RIGHT"
                                }
                            ],
                            "name": "DIRECTION"
                        },
                        "decl": "enum DIRECTION { UP = 2, DOWN, LEFT= 100, RIGHT };",
                        "fmtdict": {
                            "C_enum": "CLA_Class1_DIRECTION",
                            "enum_lower": "direction",
                            "enum_name": "DIRECTION",
                            "enum_upper": "DIRECTION",
                            "namespace_scope": "classes::Class1::"
                        },
                        "name": "DIRECTION",
                        "options": {},
                        "typemap_name": "classes::Class1::DIRECTION"
                    }
                ],
                "fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapClass1.h",
                    "C_impl_filename": "wrapClass1.cpp",
                    "C_name_scope": "Class1_",
                    "C_type_name": "CLA_Class1",
                    "F_capsule_data_type": "SHROUD_class1_capsule",
                    "F_derived_name": "class1",
                    "F_name_scope": "class1_",
                    "PY_PyObject": "PY_Class1",
                    "PY_PyTypeObject": "PY_Class1_Type",
                    "PY_capsule_name": "PY_Class1_capsule_name",
                    "PY_from_object_func": "PP_Class1_from_Object",
                    "PY_this_call": "self->obj->",
                    "PY_to_object_func": "PP_Class1_to_Object",
                    "PY_to_object_idtor_func": "PP_Class1_to_Object_idtor",
                    "PY_type_filename": "pyClass1type.cpp",
                    "class_scope": "Class1::",
                    "cxx_class": "Class1",
                    "cxx_type": "Class1",
                    "file_scope": "Class1"
                },
                "functions": [
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_type": "CLA_Class1",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_type": "classes::Class1",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "c_shadow_scalar_ctor",
                                "stmt1": "c_shadow_scalar_ctor"
                            },
                            "fmtf": {
                                "cxx_type": "classes::Class1",
                                "f_type": "type(class1)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "f_shadow_ctor",
                                "stmt1": "f_shadow_ctor",
                                "stmtc0": "c_shadow_ctor",
                                "stmtc1": "c_shadow_ctor"
                            },
                            "fmtpy": {
                                "PY_build_format": "O",
                                "PY_to_object_idtor_func": "PP_Class1_to_Object_idtor",
                                "PyObject": "PY_Class1",
                                "PyTypeObject": "PY_Class1_Type",
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "classes::Class1",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": null,
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_default",
                                "stmt1": "py_default",
                                "vargs": "SHCXX_rv"
                            }
                        },
                        "_overloaded": true,
                        "ast": {
                            "attrs": {
                                "_constructor": true,
                                "_name": "ctor",
                                "name": "new"
                            },
                            "params": [],
                            "specifier": [
                                "Class1"
                            ],
                            "typemap_name": "classes::Class1"
                        },
                        "decl": "Class1()         +name(new)",
                        "declgen": "Class1() +name(new)",
                        "fmtdict": {
                            "C_name": "CLA_Class1_new_default",
                            "C_prototype": "CLA_Class1 * SHC_rv",
                            "C_return_type": "CLA_Class1 *",
                            "F_C_call": "c_class1_new_default",
                            "F_C_name": "c_class1_new_default",
                            "F_arg_c_call": "SHT_rv%cxxmem",
                            "F_arguments": "",
                            "F_name_function": "new_default",
                            "F_name_generic": "new",
                            "F_name_impl": "class1_new_default",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_Class1_tp_init_default",
                            "PY_type_impl": "PY_Class1_tp_init_default",
                            "PY_type_method": "tp_init",
                            "cxx_rv_decl": "classes::Class1 SHCXX_rv",
                            "function_name": "new",
                            "function_suffix": "_default",
                            "underscore_name": "new"
                        },
                        "options": {}
                    },
                    {
                        "_fmtargs": {
                            "flag": {
                                "fmtc": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_var": "flag",
                                    "capsule_addr": "base",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_type": "int",
                                    "cxx_var": "flag",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_scalar_in",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_flag",
                                    "c_var": "flag",
                                    "f_intent": "IN",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "flag",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "f_native_scalar_in",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_native_scalar_in",
                                    "stmtc1": "c_default"
                                },
                                "fmtpy": {
                                    "c_const": "",
                                    "c_decl": "int flag",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "flag",
                                    "cxx_addr": "&",
                                    "cxx_decl": "int flag",
                                    "cxx_member": ".",
                                    "cxx_type": "int",
                                    "cxx_var": "flag",
                                    "data_var": "SHData_flag",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_flag",
                                    "size_var": "SHSize_flag",
                                    "stmt0": "py_native_scalar_in",
                                    "stmt1": "py_default"
                                }
                            }
                        },
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_type": "CLA_Class1",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_type": "classes::Class1",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "c_shadow_scalar_ctor",
                                "stmt1": "c_shadow_scalar_ctor"
                            },
                            "fmtf": {
                                "cxx_type": "classes::Class1",
                                "f_type": "type(class1)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "f_shadow_ctor",
                                "stmt1": "f_shadow_ctor",
                                "stmtc0": "c_shadow_ctor",
                                "stmtc1": "c_shadow_ctor"
                            },
                            "fmtpy": {
                                "PY_build_format": "O",
                                "PY_to_object_idtor_func": "PP_Class1_to_Object_idtor",
                                "PyObject": "PY_Class1",
                                "PyTypeObject": "PY_Class1_Type",
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "classes::Class1",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": null,
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_default",
                                "stmt1": "py_default",
                                "vargs": "SHCXX_rv"
                            }
                        },
                        "_overloaded": true,
                        "ast": {
                            "attrs": {
                                "_constructor": true,
                                "_name": "ctor",
                                "name": "new"
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "in",
                                        "value": true
                                    },
                                    "declarator": {
                                        "name": "flag",
                                        "pointer": []
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "Class1"
                            ],
                            "typemap_name": "classes::Class1"
                        },
                        "decl": "Class1(int flag) +name(new)",
                        "declgen": "Class1(int flag +intent(in)+value) +name(new)",
                        "fmtdict": {
                            "C_call_list": "flag",
                            "C_name": "CLA_Class1_new_flag",
                            "C_prototype": "int flag,\t CLA_Class1 * SHC_rv",
                            "C_return_type": "CLA_Class1 *",
                            "F_C_call": "c_class1_new_flag",
                            "F_C_name": "c_class1_new_flag",
                            "F_arg_c_call": "flag,\t SHT_rv%cxxmem",
                            "F_arguments": "flag",
                            "F_name_function": "new_flag",
                            "F_name_generic": "new",
                            "F_name_impl": "class1_new_flag",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_Class1_tp_init_flag",
                            "PY_type_impl": "PY_Class1_tp_init_flag",
                            "PY_type_method": "tp_init",
                            "cxx_rv_decl": "classes::Class1 SHCXX_rv",
                            "function_name": "new",
                            "function_suffix": "_flag",
                            "underscore_name": "new"
                        },
                        "options": {}
                    },
                    {
                        "ast": {
                            "attrs": {
                                "_destructor": true,
                                "_name": "dtor",
                                "name": "delete"
                            },
                            "params": [],
                            "specifier": [
                                "Class1"
                            ],
                            "typemap_name": "classes::Class1"
                        },
                        "decl": "~Class1()        +name(delete)",
                        "declgen": "~Class1() +name(delete)",
                        "fmtdict": {
                            "C_name": "CLA_Class1_delete",
                            "C_prototype": "CLA_Class1 * self",
                            "C_return_type": "void",
                            "F_C_call": "c_class1_delete",
                            "F_C_name": "c_class1_delete",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "delete",
                            "F_name_generic": "delete",
                            "F_name_impl": "class1_delete",
                            "F_subprogram": "subroutine",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "function_name": "delete",
                            "stmt0": "f_shadow_dtor",
                            "stmt1": "f_default",
                            "stmtc0": "c_shadow_dtor",
                            "stmtc1": "c_shadow_dtor",
                            "underscore_name": "delete"
                        },
                        "options": {}
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_get_value": "",
                                "c_type": "int",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "int",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "c_native_scalar_result",
                                "stmt1": "c_default"
                            },
                            "fmtf": {
                                "cxx_type": "int",
                                "f_type": "integer(C_INT)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "f_native_scalar_result",
                                "stmt1": "f_default",
                                "stmtc0": "c_native_scalar_result",
                                "stmtc1": "c_default"
                            },
                            "fmtpy": {
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "int",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": "NPY_INT",
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_native_result",
                                "stmt1": "py_default"
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "Method1",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "decl": "int Method1()",
                        "declgen": "int Method1()",
                        "doxygen": {
                            "brief": "returns the value of flag member"
                        },
                        "fmtdict": {
                            "C_name": "CLA_Class1_method1",
                            "C_prototype": "CLA_Class1 * self",
                            "C_return_type": "int",
                            "F_C_call": "c_class1_method1",
                            "F_C_name": "c_class1_method1",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "method1",
                            "F_name_generic": "method1",
                            "F_name_impl": "class1_method1",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_Method1",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "cxx_rv_decl": "int SHC_rv",
                            "function_name": "Method1",
                            "underscore_name": "method1"
                        },
                        "options": {}
                    },
                    {
                        "_fmtargs": {
                            "obj2": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "const ",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "obj2",
                                    "capsule_addr": "cbase",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_type": "classes::Class1",
                                    "cxx_var": "SHCXX_obj2",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "c_shadow_&_in",
                                    "stmt1": "c_shadow_in"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_obj2",
                                    "c_var": "obj2",
                                    "f_intent": "IN",
                                    "f_type": "type(class1)",
                                    "f_var": "obj2",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "f_shadow_&_in",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_shadow_&_in",
                                    "stmtc1": "c_shadow_in"
                                },
                                "fmtpy": {
                                    "PY_to_object_idtor_func": "PP_Class1_to_Object_idtor",
                                    "PyObject": "PY_Class1",
                                    "PyTypeObject": "PY_Class1_Type",
                                    "c_const": "const ",
                                    "c_decl": "CLA_Class1 obj2",
                                    "c_deref": "",
                                    "c_type": "CLA_Class1",
                                    "c_var": "obj2",
                                    "cxx_addr": "&",
                                    "cxx_decl": "classes::Class1 obj2",
                                    "cxx_member": "->",
                                    "cxx_type": "classes::Class1",
                                    "cxx_var": "obj2",
                                    "data_var": "SHData_obj2",
                                    "numpy_type": null,
                                    "py_type": "PY_Class1",
                                    "py_var": "SHPy_obj2",
                                    "size_var": "SHSize_obj2",
                                    "stmt0": "py_shadow_&_in",
                                    "stmt1": "py_shadow_in"
                                }
                            }
                        },
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_get_value": "",
                                "c_type": "bool",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "bool",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_BOOL",
                                "stmt0": "c_bool_scalar_result",
                                "stmt1": "c_default"
                            },
                            "fmtf": {
                                "cxx_type": "bool",
                                "f_type": "logical",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_BOOL",
                                "stmt0": "f_bool_scalar_result",
                                "stmt1": "f_bool_result",
                                "stmtc0": "c_bool_scalar_result",
                                "stmtc1": "c_default"
                            },
                            "fmtpy": {
                                "PyTypeObject": "PyBool_Type",
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "bool",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": "NPY_BOOL",
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_bool_result",
                                "stmt1": "py_bool_result"
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "equivalent",
                                "pointer": []
                            },
                            "func_const": true,
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "in"
                                    },
                                    "const": true,
                                    "declarator": {
                                        "name": "obj2",
                                        "pointer": [
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "Class1"
                                    ],
                                    "typemap_name": "classes::Class1"
                                }
                            ],
                            "specifier": [
                                "bool"
                            ],
                            "typemap_name": "bool"
                        },
                        "decl": "bool equivalent(Class1 const &obj2) const;",
                        "declgen": "bool equivalent(const Class1 & obj2 +intent(in)) const",
                        "doxygen": {
                            "brief": "Pass in reference to instance"
                        },
                        "fmtdict": {
                            "C_call_list": "*SHCXX_obj2",
                            "C_name": "CLA_Class1_equivalent",
                            "C_prototype": "const CLA_Class1 * self,\t CLA_Class1 * obj2",
                            "C_return_type": "bool",
                            "F_C_call": "c_class1_equivalent",
                            "F_C_name": "c_class1_equivalent",
                            "F_arg_c_call": "obj%cxxmem,\t obj2%cxxmem",
                            "F_arguments": "obj,\t obj2",
                            "F_name_function": "equivalent",
                            "F_name_generic": "equivalent",
                            "F_name_impl": "class1_equivalent",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_equivalent",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "cbase",
                            "cxx_rv_decl": "bool SHC_rv",
                            "function_name": "equivalent",
                            "underscore_name": "equivalent"
                        },
                        "options": {
                            "wrap_lua": false
                        }
                    },
                    {
                        "ast": {
                            "declarator": {
                                "name": "returnThis",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "params": [],
                            "specifier": [
                                "Class1"
                            ],
                            "typemap_name": "classes::Class1"
                        },
                        "decl": "Class1 * returnThis();",
                        "declgen": "Class1 * returnThis()",
                        "doxygen": {
                            "brief": "Return pointer to 'this' to allow chaining calls"
                        },
                        "fmtdict": {
                            "C_name": "CLA_Class1_return_this",
                            "C_prototype": "CLA_Class1 * self",
                            "C_return_type": "void",
                            "F_C_call": "c_class1_return_this",
                            "F_C_name": "c_class1_return_this",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "return_this",
                            "F_name_generic": "return_this",
                            "F_name_impl": "class1_return_this",
                            "F_subprogram": "subroutine",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "function_name": "returnThis",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "return_this"
                        },
                        "options": {
                            "wrap_lua": false,
                            "wrap_python": false
                        },
                        "return_this": true
                    },
                    {
                        "_fmtargs": {
                            "flag": {
                                "fmtc": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_var": "flag",
                                    "capsule_addr": "base",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_type": "bool",
                                    "cxx_var": "flag",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_BOOL",
                                    "stmt0": "c_bool_scalar_in",
                                    "stmt1": "c_default"
                                }
                            },
                            "name": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "name",
                                    "capsule_addr": "base",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_type": "std::string",
                                    "cxx_var": "SHCXX_name",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "c_string_&_in",
                                    "stmt1": "c_string_in"
                                }
                            }
                        },
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_type": "CLA_Class1",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_type": "classes::Class1",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "c_shadow_*_result",
                                "stmt1": "c_shadow_result"
                            },
                            "fmtf": {
                                "cxx_type": "classes::Class1",
                                "f_type": "type(class1)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "f_shadow_*_result",
                                "stmt1": "f_shadow_result",
                                "stmtc0": "c_shadow_*_result_buf",
                                "stmtc1": "c_shadow_result"
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "returnThisBuffer",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "in"
                                    },
                                    "declarator": {
                                        "name": "name",
                                        "pointer": [
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "std::string"
                                    ],
                                    "typemap_name": "std::string"
                                },
                                {
                                    "attrs": {
                                        "intent": "in",
                                        "value": true
                                    },
                                    "declarator": {
                                        "name": "flag",
                                        "pointer": []
                                    },
                                    "specifier": [
                                        "bool"
                                    ],
                                    "typemap_name": "bool"
                                }
                            ],
                            "specifier": [
                                "Class1"
                            ],
                            "typemap_name": "classes::Class1"
                        },
                        "decl": "Class1 * returnThisBuffer(std::string & name +intent(in), bool flag);",
                        "declgen": "Class1 * returnThisBuffer(std::string & name +intent(in), bool flag +intent(in)+value)",
                        "doxygen": {
                            "brief": "Return pointer to 'this' to allow chaining calls"
                        },
                        "fmtdict": {
                            "C_call_list": "SHCXX_name,\t flag",
                            "C_name": "CLA_Class1_return_this_buffer",
                            "C_prototype": "CLA_Class1 * self,\t char * name,\t bool flag,\t CLA_Class1 * SHC_rv",
                            "C_return_type": "CLA_Class1 *",
                            "F_C_call": "c_class1_return_this_buffer_bufferify",
                            "F_C_name": "c_class1_return_this_buffer",
                            "F_arg_c_call": "obj%cxxmem,\t name,\t len_trim(name, kind=C_INT),\t SH_flag,\t SHT_rv%cxxmem",
                            "F_arguments": "obj,\t name,\t flag",
                            "F_name_function": "return_this_buffer",
                            "F_name_generic": "return_this_buffer",
                            "F_name_impl": "class1_return_this_buffer",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "cxx_rv_decl": "classes::Class1 * SHCXX_rv",
                            "function_name": "returnThisBuffer",
                            "underscore_name": "return_this_buffer"
                        },
                        "options": {
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    },
                    {
                        "_fmtargs": {
                            "flag": {
                                "fmtc": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_var": "flag",
                                    "capsule_addr": "base",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_type": "bool",
                                    "cxx_var": "flag",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_BOOL",
                                    "stmt0": "c_bool_scalar_in_buf",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_flag",
                                    "c_var": "SH_flag",
                                    "f_intent": "IN",
                                    "f_type": "logical",
                                    "f_var": "flag",
                                    "sh_type": "SH_TYPE_BOOL",
                                    "stmt0": "f_bool_scalar_in",
                                    "stmt1": "f_bool_in",
                                    "stmtc0": "c_bool_scalar_in_buf",
                                    "stmtc1": "c_default"
                                }
                            },
                            "name": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "name",
                                    "c_var_trim": "Lname",
                                    "capsule_addr": "base",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_type": "std::string",
                                    "cxx_var": "SHCXX_name",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "c_string_&_in_buf",
                                    "stmt1": "c_string_in_buf"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_name",
                                    "c_var": "name",
                                    "c_var_trim": "Lname",
                                    "f_intent": "IN",
                                    "f_type": "character(*)",
                                    "f_var": "name",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "f_string_&_in",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_string_&_in_buf",
                                    "stmtc1": "c_string_in_buf"
                                }
                            }
                        },
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_type": "CLA_Class1",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_type": "classes::Class1",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "c_shadow_*_result_buf",
                                "stmt1": "c_shadow_result"
                            }
                        },
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "declarator": {
                                "name": "returnThisBuffer",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "in",
                                        "len_trim": "Lname"
                                    },
                                    "declarator": {
                                        "name": "name",
                                        "pointer": [
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "std::string"
                                    ],
                                    "stmts_suffix": "buf",
                                    "typemap_name": "std::string"
                                },
                                {
                                    "attrs": {
                                        "intent": "in",
                                        "value": true
                                    },
                                    "declarator": {
                                        "name": "flag",
                                        "pointer": []
                                    },
                                    "specifier": [
                                        "bool"
                                    ],
                                    "stmts_suffix": "buf",
                                    "typemap_name": "bool"
                                }
                            ],
                            "specifier": [
                                "Class1"
                            ],
                            "typemap_name": "classes::Class1"
                        },
                        "decl": "Class1 * returnThisBuffer(std::string & name +intent(in), bool flag);",
                        "declgen": "Class1 * returnThisBuffer(std::string & name +intent(in)+len_trim(Lname), bool flag +intent(in)+value)",
                        "doxygen": {
                            "brief": "Return pointer to 'this' to allow chaining calls"
                        },
                        "fmtdict": {
                            "C_call_list": "SHCXX_name,\t flag",
                            "C_name": "CLA_Class1_return_this_buffer_bufferify",
                            "C_prototype": "CLA_Class1 * self,\t char * name,\t int Lname,\t bool flag,\t CLA_Class1 * SHC_rv",
                            "C_return_type": "CLA_Class1 *",
                            "F_C_name": "c_class1_return_this_buffer_bufferify",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "cxx_rv_decl": "classes::Class1 * SHCXX_rv",
                            "function_name": "returnThisBuffer",
                            "function_suffix": "_bufferify",
                            "underscore_name": "return_this_buffer"
                        },
                        "options": {
                            "wrap_c": true,
                            "wrap_fortran": false,
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_type": "CLA_Class1",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_type": "classes::Class1",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "c_shadow_*_result",
                                "stmt1": "c_shadow_result"
                            },
                            "fmtf": {
                                "cxx_type": "classes::Class1",
                                "f_type": "type(class1)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "f_shadow_*_result",
                                "stmt1": "f_shadow_result",
                                "stmtc0": "c_shadow_*_result",
                                "stmtc1": "c_shadow_result"
                            },
                            "fmtpy": {
                                "PY_to_object_idtor_func": "PP_Class1_to_Object_idtor",
                                "PyObject": "PY_Class1",
                                "PyTypeObject": "PY_Class1_Type",
                                "c_deref": "*",
                                "c_var": "SHCXX_rv",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_type": "classes::Class1",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": null,
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_shadow_result",
                                "stmt1": "py_shadow_result"
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "getclass3",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "func_const": true,
                            "params": [],
                            "specifier": [
                                "Class1"
                            ],
                            "typemap_name": "classes::Class1"
                        },
                        "decl": "Class1 *getclass3() const",
                        "declgen": "Class1 * getclass3() const",
                        "doxygen": {
                            "brief": "Test const method"
                        },
                        "fmtdict": {
                            "C_name": "CLA_Class1_getclass3",
                            "C_prototype": "const CLA_Class1 * self,\t CLA_Class1 * SHC_rv",
                            "C_return_type": "CLA_Class1 *",
                            "F_C_call": "c_class1_getclass3",
                            "F_C_name": "c_class1_getclass3",
                            "F_arg_c_call": "obj%cxxmem,\t SHT_rv%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "getclass3",
                            "F_name_generic": "getclass3",
                            "F_name_impl": "class1_getclass3",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_getclass3",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "cbase",
                            "cxx_rv_decl": "classes::Class1 * SHCXX_rv",
                            "function_name": "getclass3",
                            "underscore_name": "getclass3"
                        },
                        "options": {
                            "wrap_lua": false
                        }
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "const ",
                                "c_rv_decl": "const char * SHC_rv",
                                "c_type": "char",
                                "c_val": "SHCXX_rv.c_str()",
                                "c_var": "SHC_rv",
                                "capsule_addr": "cbase",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "std::string",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "c_string_&_result",
                                "stmt1": "c_string_result"
                            },
                            "fmtf": {
                                "cxx_type": "std::string",
                                "f_type": "character(*)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "f_string_scalar_result_allocatable",
                                "stmt1": "f_string_result_allocatable",
                                "stmtc0": "c_string_scalar_result_buf",
                                "stmtc1": "c_string_scalar_result_buf"
                            },
                            "fmtpy": {
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "std::string",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": null,
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_string_result",
                                "stmt1": "py_default"
                            }
                        },
                        "ast": {
                            "attrs": {
                                "deref": "allocatable"
                            },
                            "const": true,
                            "declarator": {
                                "name": "getName",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "params": [],
                            "return_pointer_as": "allocatable",
                            "specifier": [
                                "std::string"
                            ],
                            "typemap_name": "std::string"
                        },
                        "decl": "const std::string& getName();",
                        "declgen": "const std::string & getName() +deref(allocatable)",
                        "doxygen": {
                            "brief": "test helper"
                        },
                        "fmtdict": {
                            "C_name": "CLA_Class1_get_name",
                            "C_prototype": "CLA_Class1 * self",
                            "C_return_type": "const char *",
                            "F_C_call": "c_class1_get_name_bufferify",
                            "F_C_name": "c_class1_get_name",
                            "F_arg_c_call": "obj%cxxmem,\t DSHF_rv",
                            "F_arguments": "obj",
                            "F_name_function": "get_name",
                            "F_name_generic": "get_name",
                            "F_name_impl": "class1_get_name",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_getName",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "cxx_rv_decl": "const std::string & SHCXX_rv",
                            "function_name": "getName",
                            "underscore_name": "get_name"
                        },
                        "options": {}
                    },
                    {
                        "_fmtargs": {
                            "SHF_rv": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "const ",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "SHF_rv",
                                    "c_var_context": "DSHF_rv",
                                    "capsule_addr": "cbase",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_type": "std::string",
                                    "cxx_var": "SHCXX_rv",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "c_string_&_result_buf_allocatable",
                                    "stmt1": "c_string_result_buf_allocatable"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_SHF_rv",
                                    "c_var": "SHT_rv",
                                    "c_var_context": "DSHF_rv",
                                    "f_intent": "OUT",
                                    "f_type": "character(*)",
                                    "f_var": "SHT_rv",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "f_string_&_result_allocatable",
                                    "stmt1": "f_string_result_allocatable",
                                    "stmtc0": "c_string_&_result_buf_allocatable",
                                    "stmtc1": "c_string_result_buf_allocatable"
                                }
                            }
                        },
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_type": "void",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "void",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_CPTR",
                                "stmt0": "c_unknown_scalar_result_buf",
                                "stmt1": "c_default"
                            }
                        },
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "declarator": {
                                "name": "getName",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "_is_result": true,
                                        "context": "DSHF_rv",
                                        "deref": "allocatable",
                                        "intent": "out"
                                    },
                                    "const": true,
                                    "declarator": {
                                        "name": "SHF_rv",
                                        "pointer": [
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "std::string"
                                    ],
                                    "typemap_name": "std::string"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "const std::string& getName();",
                        "declgen": "void getName(const std::string & SHF_rv +context(DSHF_rv)+deref(allocatable)+intent(out))",
                        "doxygen": {
                            "brief": "test helper"
                        },
                        "fmtdict": {
                            "C_name": "CLA_Class1_get_name_bufferify",
                            "C_prototype": "CLA_Class1 * self,\t CLA_SHROUD_array *DSHF_rv",
                            "C_return_type": "void",
                            "F_C_name": "c_class1_get_name_bufferify",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "cxx_rv_decl": "const std::string & SHCXX_rv",
                            "function_name": "getName",
                            "function_suffix": "_bufferify",
                            "underscore_name": "get_name"
                        },
                        "options": {
                            "wrap_c": true,
                            "wrap_fortran": false,
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    },
                    {
                        "_fmtargs": {
                            "arg": {
                                "fmtc": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_var": "arg",
                                    "capsule_addr": "base",
                                    "cxx_addr": "&",
                                    "cxx_decl": "classes::Class1::DIRECTION SHCXX_arg",
                                    "cxx_member": ".",
                                    "cxx_type": "classes::Class1::DIRECTION",
                                    "cxx_val": "static_cast<classes::Class1::DIRECTION>(arg)",
                                    "cxx_var": "SHCXX_arg",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_scalar_in",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_arg",
                                    "c_var": "arg",
                                    "f_intent": "IN",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "arg",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "f_native_scalar_in",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_native_scalar_in",
                                    "stmtc1": "c_default"
                                },
                                "fmtpy": {
                                    "c_const": "",
                                    "c_decl": "int arg",
                                    "c_deref": "",
                                    "c_type": "int",
                                    "c_var": "arg",
                                    "cxx_addr": "&",
                                    "cxx_decl": "classes::Class1::DIRECTION SH_arg",
                                    "cxx_member": ".",
                                    "cxx_type": "classes::Class1::DIRECTION",
                                    "cxx_val": "static_cast<classes::Class1::DIRECTION>(arg)",
                                    "cxx_var": "SH_arg",
                                    "data_var": "SHData_arg",
                                    "numpy_type": "NPY_INT",
                                    "py_var": "SHPy_arg",
                                    "size_var": "SHSize_arg",
                                    "stmt0": "py_native_scalar_in",
                                    "stmt1": "py_default"
                                }
                            }
                        },
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_get_value": "",
                                "c_rv_decl": "int SHC_rv",
                                "c_type": "int",
                                "c_val": "static_cast<int>(SHCXX_rv)",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "classes::Class1::DIRECTION",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "c_native_scalar_result",
                                "stmt1": "c_default"
                            },
                            "fmtf": {
                                "cxx_type": "classes::Class1::DIRECTION",
                                "f_type": "integer(C_INT)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "f_native_scalar_result",
                                "stmt1": "f_default",
                                "stmtc0": "c_native_scalar_result",
                                "stmtc1": "c_default"
                            },
                            "fmtpy": {
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "classes::Class1::DIRECTION",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": "NPY_INT",
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_native_result",
                                "stmt1": "py_default"
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "directionFunc",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "in",
                                        "value": true
                                    },
                                    "declarator": {
                                        "name": "arg",
                                        "pointer": []
                                    },
                                    "specifier": [
                                        "DIRECTION"
                                    ],
                                    "typemap_name": "classes::Class1::DIRECTION"
                                }
                            ],
                            "specifier": [
                                "DIRECTION"
                            ],
                            "typemap_name": "classes::Class1::DIRECTION"
                        },
                        "decl": "DIRECTION directionFunc(DIRECTION arg);",
                        "declgen": "DIRECTION directionFunc(DIRECTION arg +intent(in)+value)",
                        "fmtdict": {
                            "C_call_list": "SHCXX_arg",
                            "C_name": "CLA_Class1_direction_func",
                            "C_prototype": "CLA_Class1 * self,\t int arg",
                            "C_return_type": "int",
                            "F_C_call": "c_class1_direction_func",
                            "F_C_name": "c_class1_direction_func",
                            "F_arg_c_call": "obj%cxxmem,\t arg",
                            "F_arguments": "obj,\t arg",
                            "F_name_function": "direction_func",
                            "F_name_generic": "direction_func",
                            "F_name_impl": "class1_direction_func",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_directionFunc",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "cxx_rv_decl": "classes::Class1::DIRECTION SHCXX_rv",
                            "function_name": "directionFunc",
                            "underscore_name": "direction_func"
                        },
                        "options": {}
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_get_value": "",
                                "c_type": "int",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "int",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "c_native_scalar_result",
                                "stmt1": "c_default"
                            },
                            "fmtf": {
                                "cxx_type": "int",
                                "f_type": "integer(C_INT)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "f_native_scalar_result",
                                "stmt1": "f_default",
                                "stmtc0": "c_native_scalar_result",
                                "stmtc1": "c_default"
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "getM_flag",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "decl": "int getM_flag()",
                        "declgen": "int getM_flag()",
                        "fmtdict": {
                            "C_name": "CLA_Class1_get_m_flag",
                            "C_prototype": "CLA_Class1 * self",
                            "C_return_type": "int",
                            "F_C_call": "c_class1_get_m_flag",
                            "F_C_name": "c_class1_get_m_flag",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "get_m_flag",
                            "F_name_generic": "get_m_flag",
                            "F_name_impl": "class1_get_m_flag",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "cxx_rv_decl": "int SHC_rv",
                            "function_name": "getM_flag",
                            "underscore_name": "get_m_flag"
                        },
                        "options": {
                            "wrap_lua": false,
                            "wrap_python": false
                        },
                        "splicer": {
                            "c": [
                                "return SH_this->m_flag;"
                            ]
                        }
                    },
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_get_value": "",
                                "c_type": "int",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "int",
                                "cxx_var": "SHC_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "c_native_scalar_result",
                                "stmt1": "c_default"
                            },
                            "fmtf": {
                                "cxx_type": "int",
                                "f_type": "integer(C_INT)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "f_native_scalar_result",
                                "stmt1": "f_default",
                                "stmtc0": "c_native_scalar_result",
                                "stmtc1": "c_default"
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "getTest",
                                "pointer": []
                            },
                            "params": [],
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "decl": "int getTest()",
                        "declgen": "int getTest()",
                        "fmtdict": {
                            "C_name": "CLA_Class1_get_test",
                            "C_prototype": "CLA_Class1 * self",
                            "C_return_type": "int",
                            "F_C_call": "c_class1_get_test",
                            "F_C_name": "c_class1_get_test",
                            "F_arg_c_call": "obj%cxxmem",
                            "F_arguments": "obj",
                            "F_name_function": "get_test",
                            "F_name_generic": "get_test",
                            "F_name_impl": "class1_get_test",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "cxx_rv_decl": "int SHC_rv",
                            "function_name": "getTest",
                            "underscore_name": "get_test"
                        },
                        "options": {
                            "wrap_lua": false,
                            "wrap_python": false
                        },
                        "splicer": {
                            "c": [
                                "return SH_this->m_test;"
                            ]
                        }
                    },
                    {
                        "_fmtargs": {
                            "val": {
                                "fmtc": {
                                    "c_addr": "&",
                                    "c_const": "",
                                    "c_deref": "",
                                    "c_member": ".",
                                    "c_var": "val",
                                    "capsule_addr": "base",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_type": "int",
                                    "cxx_var": "val",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_native_scalar_in",
                                    "stmt1": "c_default"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_val",
                                    "c_var": "val",
                                    "f_intent": "IN",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "val",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "f_native_scalar_in",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_native_scalar_in",
                                    "stmtc1": "c_default"
                                }
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "setTest",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "intent": "in",
                                        "value": true
                                    },
                                    "declarator": {
                                        "name": "val",
                                        "pointer": []
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void setTest(int val)",
                        "declgen": "void setTest(int val +intent(in)+value)",
                        "fmtdict": {
                            "C_call_list": "val",
                            "C_name": "CLA_Class1_set_test",
                            "C_prototype": "CLA_Class1 * self,\t int val",
                            "C_return_type": "void",
                            "F_C_call": "c_class1_set_test",
                            "F_C_name": "c_class1_set_test",
                            "F_arg_c_call": "obj%cxxmem,\t val",
                            "F_arguments": "obj,\t val",
                            "F_name_function": "set_test",
                            "F_name_generic": "set_test",
                            "F_name_impl": "class1_set_test",
                            "F_subprogram": "subroutine",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "function_name": "setTest",
                            "stmt0": "f_subroutine",
                            "stmt1": "f_default",
                            "stmtc0": "c",
                            "stmtc1": "c_default",
                            "underscore_name": "set_test"
                        },
                        "options": {
                            "wrap_lua": false,
                            "wrap_python": false
                        },
                        "splicer": {
                            "c": [
                                "SH_this->m_test = val;",
                                "return;"
                            ]
                        }
                    }
                ],
                "name": "Class1",
                "options": {
                    "literalinclude": true
                },
                "scope": "classes::Class1::",
                "typemap_name": "classes::Class1",
                "variables": [
                    {
                        "ast": {
                            "attrs": {
                                "readonly": true
                            },
                            "declarator": {
                                "name": "m_flag",
                                "pointer": []
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "fmtdict": {
                            "PY_getter": "PY_Class1_m_flag_getter",
                            "PY_setter": "nullptr",
                            "PY_struct_context": "self->obj->",
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "m_flag",
                            "variable_lower": "m_flag",
                            "variable_name": "m_flag",
                            "variable_upper": "M_FLAG"
                        },
                        "name": "m_flag",
                        "options": {}
                    },
                    {
                        "ast": {
                            "attrs": {
                                "name": "test"
                            },
                            "declarator": {
                                "name": "m_test",
                                "pointer": []
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "fmtdict": {
                            "PY_getter": "PY_Class1_test_getter",
                            "PY_setter": "PY_Class1_test_setter",
                            "PY_struct_context": "self->obj->",
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "m_test",
                            "variable_lower": "test",
                            "variable_name": "test",
                            "variable_upper": "TEST"
                        },
                        "name": "test",
                        "options": {}
                    }
                ]
            },
            {
                "cxx_header": [],
                "fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapClass2.h",
                    "C_impl_filename": "wrapClass2.cpp",
                    "C_name_scope": "Class2_",
                    "C_type_name": "CLA_Class2",
                    "F_capsule_data_type": "SHROUD_class2_capsule",
                    "F_derived_name": "class2",
                    "F_name_scope": "class2_",
                    "PY_PyObject": "PY_Class2",
                    "PY_PyTypeObject": "PY_Class2_Type",
                    "PY_capsule_name": "PY_Class2_capsule_name",
                    "PY_from_object_func": "PP_Class2_from_Object",
                    "PY_this_call": "self->obj->",
                    "PY_to_object_func": "PP_Class2_to_Object",
                    "PY_to_object_idtor_func": "PP_Class2_to_Object_idtor",
                    "PY_type_filename": "pyClass2type.cpp",
                    "class_scope": "Class2::",
                    "cxx_class": "Class2",
                    "cxx_type": "Class2",
                    "file_scope": "Class2"
                },
                "functions": [
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "const ",
                                "c_rv_decl": "const char * SHC_rv",
                                "c_type": "char",
                                "c_val": "SHCXX_rv.c_str()",
                                "c_var": "SHC_rv",
                                "capsule_addr": "cbase",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "std::string",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "c_string_&_result",
                                "stmt1": "c_string_result"
                            },
                            "fmtf": {
                                "cxx_type": "std::string",
                                "f_type": "character(*)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "f_string_scalar_result_allocatable",
                                "stmt1": "f_string_result_allocatable",
                                "stmtc0": "c_string_scalar_result_buf",
                                "stmtc1": "c_string_scalar_result_buf"
                            },
                            "fmtpy": {
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "std::string",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": null,
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_string_result",
                                "stmt1": "py_default"
                            }
                        },
                        "ast": {
                            "attrs": {
                                "deref": "allocatable"
                            },
                            "const": true,
                            "declarator": {
                                "name": "getName",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "params": [],
                            "return_pointer_as": "allocatable",
                            "specifier": [
                                "std::string"
                            ],
                            "typemap_name": "std::string"
                        },
                        "decl": "const std::string& getName();",
                        "declgen": "const std::string & getName() +deref(allocatable)",
                        "doxygen": {
                            "brief": "test helper"
                        },
                        "fmtdict": {
                            "C_name": "CLA_Class2_get_name",
                            "C_prototype": "CLA_Class2 * self",
                            "C_return_type": "const char *",
                            "F_C_call": "c_class2_get_name_bufferify",
                            "F_C_name": "c_class2_get_name",
                            "F_arg_c_call": "obj%cxxmem,\t DSHF_rv",
                            "F_arguments": "obj",
                            "F_name_function": "get_name",
                            "F_name_generic": "get_name",
                            "F_name_impl": "class2_get_name",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_getName",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "cxx_rv_decl": "const std::string & SHCXX_rv",
                            "function_name": "getName",
                            "underscore_name": "get_name"
                        },
                        "options": {}
                    },
                    {
                        "_fmtargs": {
                            "SHF_rv": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "const ",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_var": "SHF_rv",
                                    "c_var_context": "DSHF_rv",
                                    "capsule_addr": "cbase",
                                    "cxx_addr": "&",
                                    "cxx_member": ".",
                                    "cxx_type": "std::string",
                                    "cxx_var": "SHCXX_rv",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "c_string_&_result_buf_allocatable",
                                    "stmt1": "c_string_result_buf_allocatable"
                                },
                                "fmtf": {
                                    "F_pointer": "SHPTR_SHF_rv",
                                    "c_var": "SHT_rv",
                                    "c_var_context": "DSHF_rv",
                                    "f_intent": "OUT",
                                    "f_type": "character(*)",
                                    "f_var": "SHT_rv",
                                    "sh_type": "SH_TYPE_OTHER",
                                    "stmt0": "f_string_&_result_allocatable",
                                    "stmt1": "f_string_result_allocatable",
                                    "stmtc0": "c_string_&_result_buf_allocatable",
                                    "stmtc1": "c_string_result_buf_allocatable"
                                }
                            }
                        },
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_type": "void",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "void",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_CPTR",
                                "stmt0": "c_unknown_scalar_result_buf",
                                "stmt1": "c_default"
                            }
                        },
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "declarator": {
                                "name": "getName",
                                "pointer": []
                            },
                            "params": [
                                {
                                    "attrs": {
                                        "_is_result": true,
                                        "context": "DSHF_rv",
                                        "deref": "allocatable",
                                        "intent": "out"
                                    },
                                    "const": true,
                                    "declarator": {
                                        "name": "SHF_rv",
                                        "pointer": [
                                            {
                                                "ptr": "&"
                                            }
                                        ]
                                    },
                                    "specifier": [
                                        "std::string"
                                    ],
                                    "typemap_name": "std::string"
                                }
                            ],
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "const std::string& getName();",
                        "declgen": "void getName(const std::string & SHF_rv +context(DSHF_rv)+deref(allocatable)+intent(out))",
                        "doxygen": {
                            "brief": "test helper"
                        },
                        "fmtdict": {
                            "C_name": "CLA_Class2_get_name_bufferify",
                            "C_prototype": "CLA_Class2 * self,\t CLA_SHROUD_array *DSHF_rv",
                            "C_return_type": "void",
                            "F_C_name": "c_class2_get_name_bufferify",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "cxx_rv_decl": "const std::string & SHCXX_rv",
                            "function_name": "getName",
                            "function_suffix": "_bufferify",
                            "underscore_name": "get_name"
                        },
                        "options": {
                            "wrap_c": true,
                            "wrap_fortran": false,
                            "wrap_lua": false,
                            "wrap_python": false
                        }
                    }
                ],
                "name": "Class2",
                "options": {},
                "scope": "classes::Class2::",
                "typemap_name": "classes::Class2"
            },
            {
                "cxx_header": [],
                "fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapSingleton.h",
                    "C_impl_filename": "wrapSingleton.cpp",
                    "C_name_scope": "Singleton_",
                    "C_type_name": "CLA_Singleton",
                    "F_capsule_data_type": "SHROUD_singleton_capsule",
                    "F_derived_name": "singleton",
                    "F_name_scope": "singleton_",
                    "PY_PyObject": "PY_Singleton",
                    "PY_PyTypeObject": "PY_Singleton_Type",
                    "PY_capsule_name": "PY_Singleton_capsule_name",
                    "PY_from_object_func": "PP_Singleton_from_Object",
                    "PY_this_call": "self->obj->",
                    "PY_to_object_func": "PP_Singleton_to_Object",
                    "PY_to_object_idtor_func": "PP_Singleton_to_Object_idtor",
                    "PY_type_filename": "pySingletontype.cpp",
                    "class_scope": "Singleton::",
                    "cxx_class": "Singleton",
                    "cxx_type": "Singleton",
                    "file_scope": "Singleton"
                },
                "functions": [
                    {
                        "_fmtresult": {
                            "fmtc": {
                                "c_const": "",
                                "c_type": "CLA_Singleton",
                                "c_var": "SHC_rv",
                                "capsule_addr": "base",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "classes::Singleton",
                                "cxx_var": "SHCXX_rv",
                                "idtor": "0",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "c_shadow_&_result",
                                "stmt1": "c_shadow_result"
                            },
                            "fmtf": {
                                "cxx_type": "classes::Singleton",
                                "f_type": "type(singleton)",
                                "f_var": "SHT_rv",
                                "sh_type": "SH_TYPE_OTHER",
                                "stmt0": "f_shadow_&_result",
                                "stmt1": "f_shadow_result",
                                "stmtc0": "c_shadow_&_result",
                                "stmtc1": "c_shadow_result"
                            },
                            "fmtpy": {
                                "PY_to_object_idtor_func": "PP_Singleton_to_Object_idtor",
                                "PyObject": "PY_Singleton",
                                "PyTypeObject": "PY_Singleton_Type",
                                "c_deref": "",
                                "c_var": "SHCXX_rv",
                                "cxx_addr": "&",
                                "cxx_member": ".",
                                "cxx_type": "classes::Singleton",
                                "cxx_var": "SHCXX_rv",
                                "data_var": "SHData_rv",
                                "numpy_type": null,
                                "py_var": "SHTPy_rv",
                                "size_var": "SHSize_rv",
                                "stmt0": "py_shadow_result",
                                "stmt1": "py_shadow_result"
                            }
                        },
                        "ast": {
                            "declarator": {
                                "name": "getReference",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "params": [],
                            "specifier": [
                                "Singleton"
                            ],
                            "storage": [
                                "static"
                            ],
                            "typemap_name": "classes::Singleton"
                        },
                        "decl": "static Singleton& getReference()",
                        "declgen": "static Singleton & getReference()",
                        "fmtdict": {
                            "CXX_this_call": "classes::Singleton::",
                            "C_name": "CLA_Singleton_get_reference",
                            "C_prototype": "CLA_Singleton * SHC_rv",
                            "C_return_type": "CLA_Singleton *",
                            "F_C_call": "c_singleton_get_reference",
                            "F_C_name": "c_singleton_get_reference",
                            "F_arg_c_call": "SHT_rv%cxxmem",
                            "F_arguments": "",
                            "F_name_function": "get_reference",
                            "F_name_generic": "get_reference",
                            "F_name_impl": "singleton_get_reference",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "PY_name_impl": "PY_getReference",
                            "PY_this_call": "classes::Singleton::",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "self",
                            "capsule_addr": "base",
                            "cxx_rv_decl": "classes::Singleton & SHCXX_rv",
                            "function_name": "getReference",
                            "underscore_name": "get_reference"
                        },
                        "options": {}
                    }
                ],
                "name": "Singleton",
                "options": {
                    "wrap_lua": false
                },
                "scope": "classes::Singleton::",
                "typemap_name": "classes::Singleton"
            }
        ],
        "copyright": [
            "Copyright (c) 2017-2020, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "cxx_header": [
            "classes.hpp"
        ],
        "functions": [
            {
                "_fmtargs": {
                    "arg": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_var": "arg",
                            "capsule_addr": "base",
                            "cxx_addr": "&",
                            "cxx_decl": "classes::Class1::DIRECTION SHCXX_arg",
                            "cxx_member": ".",
                            "cxx_type": "classes::Class1::DIRECTION",
                            "cxx_val": "static_cast<classes::Class1::DIRECTION>(arg)",
                            "cxx_var": "SHCXX_arg",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "c_native_scalar_in",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_arg",
                            "c_var": "arg",
                            "f_intent": "IN",
                            "f_type": "integer(C_INT)",
                            "f_var": "arg",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "f_native_scalar_in",
                            "stmt1": "f_default",
                            "stmtc0": "c_native_scalar_in",
                            "stmtc1": "c_default"
                        },
                        "fmtpy": {
                            "c_const": "",
                            "c_decl": "int arg",
                            "c_deref": "",
                            "c_type": "int",
                            "c_var": "arg",
                            "cxx_addr": "&",
                            "cxx_decl": "classes::Class1::DIRECTION SH_arg",
                            "cxx_member": ".",
                            "cxx_type": "classes::Class1::DIRECTION",
                            "cxx_val": "static_cast<classes::Class1::DIRECTION>(arg)",
                            "cxx_var": "SH_arg",
                            "data_var": "SHData_arg",
                            "numpy_type": "NPY_INT",
                            "py_var": "SHPy_arg",
                            "size_var": "SHSize_arg",
                            "stmt0": "py_native_scalar_in",
                            "stmt1": "py_default"
                        }
                    }
                },
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_get_value": "",
                        "c_rv_decl": "int SHC_rv",
                        "c_type": "int",
                        "c_val": "static_cast<int>(SHCXX_rv)",
                        "c_var": "SHC_rv",
                        "capsule_addr": "base",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "classes::Class1::DIRECTION",
                        "cxx_var": "SHCXX_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "c_native_scalar_result",
                        "stmt1": "c_default"
                    },
                    "fmtf": {
                        "cxx_type": "classes::Class1::DIRECTION",
                        "f_type": "integer(C_INT)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "f_native_scalar_result",
                        "stmt1": "f_default",
                        "stmtc0": "c_native_scalar_result",
                        "stmtc1": "c_default"
                    },
                    "fmtpy": {
                        "c_deref": "",
                        "c_var": "SHCXX_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "classes::Class1::DIRECTION",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": "NPY_INT",
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_native_result",
                        "stmt1": "py_default"
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "directionFunc",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "in",
                                "value": true
                            },
                            "declarator": {
                                "name": "arg",
                                "pointer": []
                            },
                            "specifier": [
                                "Class1::DIRECTION"
                            ],
                            "typemap_name": "classes::Class1::DIRECTION"
                        }
                    ],
                    "specifier": [
                        "Class1::DIRECTION"
                    ],
                    "typemap_name": "classes::Class1::DIRECTION"
                },
                "decl": "Class1::DIRECTION directionFunc(Class1::DIRECTION arg);",
                "declgen": "Class1::DIRECTION directionFunc(Class1::DIRECTION arg +intent(in)+value)",
                "fmtdict": {
                    "C_call_list": "SHCXX_arg",
                    "C_name": "CLA_direction_func",
                    "C_prototype": "int arg",
                    "C_return_type": "int",
                    "F_C_call": "c_direction_func",
                    "F_C_name": "direction_func",
                    "F_arg_c_call": "arg",
                    "F_arguments": "arg",
                    "F_name_function": "direction_func",
                    "F_name_generic": "direction_func",
                    "F_name_impl": "direction_func",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "PY_name_impl": "PY_directionFunc",
                    "cxx_rv_decl": "classes::Class1::DIRECTION SHCXX_rv",
                    "function_name": "directionFunc",
                    "underscore_name": "direction_func"
                },
                "options": {}
            },
            {
                "_fmtargs": {
                    "arg": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_var": "arg",
                            "capsule_addr": "base",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_type": "classes::Class1",
                            "cxx_var": "SHCXX_arg",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "c_shadow_scalar_in",
                            "stmt1": "c_shadow_scalar_in"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_arg",
                            "c_var": "arg",
                            "f_intent": "IN",
                            "f_type": "type(class1)",
                            "f_var": "arg",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "f_shadow_scalar_in",
                            "stmt1": "f_default",
                            "stmtc0": "c_shadow_scalar_in",
                            "stmtc1": "c_shadow_scalar_in"
                        },
                        "fmtpy": {
                            "PY_to_object_idtor_func": "PP_Class1_to_Object_idtor",
                            "PyObject": "PY_Class1",
                            "PyTypeObject": "PY_Class1_Type",
                            "c_const": "",
                            "c_decl": "CLA_Class1 arg",
                            "c_deref": "",
                            "c_type": "CLA_Class1",
                            "c_var": "arg",
                            "cxx_addr": "&",
                            "cxx_decl": "classes::Class1 arg",
                            "cxx_member": "->",
                            "cxx_type": "classes::Class1",
                            "cxx_var": "arg",
                            "data_var": "SHData_arg",
                            "numpy_type": null,
                            "py_type": "PY_Class1",
                            "py_var": "SHPy_arg",
                            "size_var": "SHSize_arg",
                            "stmt0": "py_shadow_scalar_in",
                            "stmt1": "py_shadow_in"
                        }
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "passClassByValue",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "in",
                                "value": true
                            },
                            "declarator": {
                                "name": "arg",
                                "pointer": []
                            },
                            "specifier": [
                                "Class1"
                            ],
                            "typemap_name": "classes::Class1"
                        }
                    ],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void passClassByValue(Class1 arg)",
                "declgen": "void passClassByValue(Class1 arg +intent(in)+value)",
                "doxygen": {
                    "brief": "Pass arguments to a function."
                },
                "fmtdict": {
                    "C_call_list": "*SHCXX_arg",
                    "C_name": "CLA_pass_class_by_value",
                    "C_prototype": "CLA_Class1 arg",
                    "C_return_type": "void",
                    "F_C_call": "c_pass_class_by_value",
                    "F_C_name": "c_pass_class_by_value",
                    "F_arg_c_call": "arg%cxxmem",
                    "F_arguments": "arg",
                    "F_name_function": "pass_class_by_value",
                    "F_name_generic": "pass_class_by_value",
                    "F_name_impl": "pass_class_by_value",
                    "F_subprogram": "subroutine",
                    "PY_name_impl": "PY_passClassByValue",
                    "function_name": "passClassByValue",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_default",
                    "stmtc0": "c",
                    "stmtc1": "c_default",
                    "underscore_name": "pass_class_by_value"
                },
                "options": {
                    "wrap_lua": false
                }
            },
            {
                "_fmtargs": {
                    "arg": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "const ",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "arg",
                            "capsule_addr": "cbase",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_type": "classes::Class1",
                            "cxx_var": "SHCXX_arg",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "c_shadow_*_in",
                            "stmt1": "c_shadow_in"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_arg",
                            "c_var": "arg",
                            "f_intent": "IN",
                            "f_type": "type(class1)",
                            "f_var": "arg",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "f_shadow_*_in",
                            "stmt1": "f_default",
                            "stmtc0": "c_shadow_*_in",
                            "stmtc1": "c_shadow_in"
                        },
                        "fmtpy": {
                            "PY_to_object_idtor_func": "PP_Class1_to_Object_idtor",
                            "PyObject": "PY_Class1",
                            "PyTypeObject": "PY_Class1_Type",
                            "c_const": "const ",
                            "c_decl": "CLA_Class1 arg",
                            "c_deref": "",
                            "c_type": "CLA_Class1",
                            "c_var": "arg",
                            "cxx_addr": "",
                            "cxx_decl": "classes::Class1 arg",
                            "cxx_member": "->",
                            "cxx_type": "classes::Class1",
                            "cxx_var": "arg",
                            "data_var": "SHData_arg",
                            "numpy_type": null,
                            "py_type": "PY_Class1",
                            "py_var": "SHPy_arg",
                            "size_var": "SHSize_arg",
                            "stmt0": "py_shadow_*_in",
                            "stmt1": "py_shadow_in"
                        }
                    }
                },
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_get_value": "",
                        "c_type": "int",
                        "c_var": "SHC_rv",
                        "capsule_addr": "base",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "int",
                        "cxx_var": "SHC_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "c_native_scalar_result",
                        "stmt1": "c_default"
                    },
                    "fmtf": {
                        "cxx_type": "int",
                        "f_type": "integer(C_INT)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "f_native_scalar_result",
                        "stmt1": "f_default",
                        "stmtc0": "c_native_scalar_result",
                        "stmtc1": "c_default"
                    },
                    "fmtpy": {
                        "c_deref": "",
                        "c_var": "SHCXX_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "int",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": "NPY_INT",
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_native_result",
                        "stmt1": "py_default"
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "useclass",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "in"
                            },
                            "const": true,
                            "declarator": {
                                "name": "arg",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ]
                            },
                            "specifier": [
                                "Class1"
                            ],
                            "typemap_name": "classes::Class1"
                        }
                    ],
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int useclass(const Class1 *arg)",
                "declgen": "int useclass(const Class1 * arg +intent(in))",
                "fmtdict": {
                    "C_call_list": "SHCXX_arg",
                    "C_name": "CLA_useclass",
                    "C_prototype": "CLA_Class1 * arg",
                    "C_return_type": "int",
                    "F_C_call": "c_useclass",
                    "F_C_name": "c_useclass",
                    "F_arg_c_call": "arg%cxxmem",
                    "F_arguments": "arg",
                    "F_name_function": "useclass",
                    "F_name_generic": "useclass",
                    "F_name_impl": "useclass",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "PY_name_impl": "PY_useclass",
                    "cxx_rv_decl": "int SHC_rv",
                    "function_name": "useclass",
                    "underscore_name": "useclass"
                },
                "options": {
                    "wrap_lua": false
                }
            },
            {
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "const ",
                        "c_type": "CLA_Class1",
                        "c_var": "SHC_rv",
                        "capsule_addr": "cbase",
                        "cxx_addr": "",
                        "cxx_member": "->",
                        "cxx_type": "classes::Class1",
                        "cxx_var": "SHCXX_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "c_shadow_*_result",
                        "stmt1": "c_shadow_result"
                    },
                    "fmtf": {
                        "cxx_type": "classes::Class1",
                        "f_type": "type(class1)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "f_shadow_*_result",
                        "stmt1": "f_shadow_result",
                        "stmtc0": "c_shadow_*_result",
                        "stmtc1": "c_shadow_result"
                    }
                },
                "ast": {
                    "const": true,
                    "declarator": {
                        "name": "getclass2",
                        "pointer": [
                            {
                                "ptr": "*"
                            }
                        ]
                    },
                    "params": [],
                    "specifier": [
                        "Class1"
                    ],
                    "typemap_name": "classes::Class1"
                },
                "decl": "const Class1 *getclass2()",
                "declgen": "const Class1 * getclass2()",
                "fmtdict": {
                    "C_name": "CLA_getclass2",
                    "C_prototype": "CLA_Class1 * SHC_rv",
                    "C_return_type": "CLA_Class1 *",
                    "F_C_call": "c_getclass2",
                    "F_C_name": "c_getclass2",
                    "F_arg_c_call": "SHT_rv%cxxmem",
                    "F_arguments": "",
                    "F_name_function": "getclass2",
                    "F_name_generic": "getclass2",
                    "F_name_impl": "getclass2",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "cxx_rv_decl": "const classes::Class1 * SHCXX_rv",
                    "function_name": "getclass2",
                    "underscore_name": "getclass2"
                },
                "options": {
                    "wrap_lua": false,
                    "wrap_python": false
                }
            },
            {
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_type": "CLA_Class1",
                        "c_var": "SHC_rv",
                        "capsule_addr": "base",
                        "cxx_addr": "",
                        "cxx_member": "->",
                        "cxx_type": "classes::Class1",
                        "cxx_var": "SHCXX_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "c_shadow_*_result",
                        "stmt1": "c_shadow_result"
                    },
                    "fmtf": {
                        "cxx_type": "classes::Class1",
                        "f_type": "type(class1)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "f_shadow_*_result",
                        "stmt1": "f_shadow_result",
                        "stmtc0": "c_shadow_*_result",
                        "stmtc1": "c_shadow_result"
                    },
                    "fmtpy": {
                        "PY_to_object_idtor_func": "PP_Class1_to_Object_idtor",
                        "PyObject": "PY_Class1",
                        "PyTypeObject": "PY_Class1_Type",
                        "c_deref": "*",
                        "c_var": "SHCXX_rv",
                        "cxx_addr": "",
                        "cxx_member": "->",
                        "cxx_type": "classes::Class1",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": null,
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_shadow_result",
                        "stmt1": "py_shadow_result"
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "getclass3",
                        "pointer": [
                            {
                                "ptr": "*"
                            }
                        ]
                    },
                    "params": [],
                    "specifier": [
                        "Class1"
                    ],
                    "typemap_name": "classes::Class1"
                },
                "decl": "Class1 *getclass3()",
                "declgen": "Class1 * getclass3()",
                "fmtdict": {
                    "C_name": "CLA_getclass3",
                    "C_prototype": "CLA_Class1 * SHC_rv",
                    "C_return_type": "CLA_Class1 *",
                    "F_C_call": "c_getclass3",
                    "F_C_name": "c_getclass3",
                    "F_arg_c_call": "SHT_rv%cxxmem",
                    "F_arguments": "",
                    "F_name_function": "getclass3",
                    "F_name_generic": "getclass3",
                    "F_name_impl": "getclass3",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "PY_name_impl": "PY_getclass3",
                    "cxx_rv_decl": "classes::Class1 * SHCXX_rv",
                    "function_name": "getclass3",
                    "underscore_name": "getclass3"
                },
                "options": {
                    "wrap_lua": false
                }
            },
            {
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "const ",
                        "c_type": "CLA_Class1",
                        "c_var": "SHC_rv",
                        "capsule_addr": "cbase",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "classes::Class1",
                        "cxx_var": "SHCXX_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "c_shadow_&_result",
                        "stmt1": "c_shadow_result"
                    },
                    "fmtf": {
                        "cxx_type": "classes::Class1",
                        "f_type": "type(class1)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "f_shadow_&_result",
                        "stmt1": "f_shadow_result",
                        "stmtc0": "c_shadow_&_result",
                        "stmtc1": "c_shadow_result"
                    }
                },
                "ast": {
                    "const": true,
                    "declarator": {
                        "name": "getConstClassReference",
                        "pointer": [
                            {
                                "ptr": "&"
                            }
                        ]
                    },
                    "params": [],
                    "specifier": [
                        "Class1"
                    ],
                    "typemap_name": "classes::Class1"
                },
                "decl": "const Class1 &getConstClassReference()",
                "declgen": "const Class1 & getConstClassReference()",
                "fmtdict": {
                    "C_name": "CLA_get_const_class_reference",
                    "C_prototype": "CLA_Class1 * SHC_rv",
                    "C_return_type": "CLA_Class1 *",
                    "F_C_call": "c_get_const_class_reference",
                    "F_C_name": "c_get_const_class_reference",
                    "F_arg_c_call": "SHT_rv%cxxmem",
                    "F_arguments": "",
                    "F_name_function": "get_const_class_reference",
                    "F_name_generic": "get_const_class_reference",
                    "F_name_impl": "get_const_class_reference",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "cxx_rv_decl": "const classes::Class1 & SHCXX_rv",
                    "function_name": "getConstClassReference",
                    "underscore_name": "get_const_class_reference"
                },
                "options": {
                    "wrap_lua": false,
                    "wrap_python": false
                }
            },
            {
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_type": "CLA_Class1",
                        "c_var": "SHC_rv",
                        "capsule_addr": "base",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "classes::Class1",
                        "cxx_var": "SHCXX_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "c_shadow_&_result",
                        "stmt1": "c_shadow_result"
                    },
                    "fmtf": {
                        "cxx_type": "classes::Class1",
                        "f_type": "type(class1)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "f_shadow_&_result",
                        "stmt1": "f_shadow_result",
                        "stmtc0": "c_shadow_&_result",
                        "stmtc1": "c_shadow_result"
                    },
                    "fmtpy": {
                        "PY_to_object_idtor_func": "PP_Class1_to_Object_idtor",
                        "PyObject": "PY_Class1",
                        "PyTypeObject": "PY_Class1_Type",
                        "c_deref": "",
                        "c_var": "SHCXX_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "classes::Class1",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": null,
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_shadow_result",
                        "stmt1": "py_shadow_result"
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "getClassReference",
                        "pointer": [
                            {
                                "ptr": "&"
                            }
                        ]
                    },
                    "params": [],
                    "specifier": [
                        "Class1"
                    ],
                    "typemap_name": "classes::Class1"
                },
                "decl": "Class1 &getClassReference()",
                "declgen": "Class1 & getClassReference()",
                "fmtdict": {
                    "C_name": "CLA_get_class_reference",
                    "C_prototype": "CLA_Class1 * SHC_rv",
                    "C_return_type": "CLA_Class1 *",
                    "F_C_call": "c_get_class_reference",
                    "F_C_name": "c_get_class_reference",
                    "F_arg_c_call": "SHT_rv%cxxmem",
                    "F_arguments": "",
                    "F_name_function": "get_class_reference",
                    "F_name_generic": "get_class_reference",
                    "F_name_impl": "get_class_reference",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "PY_name_impl": "PY_getClassReference",
                    "cxx_rv_decl": "classes::Class1 & SHCXX_rv",
                    "function_name": "getClassReference",
                    "underscore_name": "get_class_reference"
                },
                "options": {
                    "wrap_lua": false
                }
            },
            {
                "_fmtargs": {
                    "flag": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_var": "flag",
                            "capsule_addr": "base",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_type": "int",
                            "cxx_var": "flag",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "c_native_scalar_in",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_flag",
                            "c_var": "flag",
                            "f_intent": "IN",
                            "f_type": "integer(C_INT)",
                            "f_var": "flag",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "f_native_scalar_in",
                            "stmt1": "f_default",
                            "stmtc0": "c_native_scalar_in",
                            "stmtc1": "c_default"
                        }
                    }
                },
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_type": "CLA_Class1",
                        "c_var": "SHC_rv",
                        "capsule_addr": "base",
                        "cxx_addr": "",
                        "cxx_member": "->",
                        "cxx_type": "classes::Class1",
                        "cxx_var": "SHCXX_rv",
                        "idtor": "1",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "c_shadow_scalar_result",
                        "stmt1": "c_shadow_scalar_result"
                    },
                    "fmtf": {
                        "cxx_type": "classes::Class1",
                        "f_type": "type(class1)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "f_shadow_scalar_result",
                        "stmt1": "f_shadow_result",
                        "stmtc0": "c_shadow_scalar_result",
                        "stmtc1": "c_shadow_scalar_result"
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "getClassCopy",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "in",
                                "value": true
                            },
                            "declarator": {
                                "name": "flag",
                                "pointer": []
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        }
                    ],
                    "specifier": [
                        "Class1"
                    ],
                    "typemap_name": "classes::Class1"
                },
                "decl": "Class1 getClassCopy(int flag)",
                "declgen": "Class1 getClassCopy(int flag +intent(in)+value)",
                "doxygen": {
                    "brief": "Return Class1 instance by value, uses copy constructor"
                },
                "fmtdict": {
                    "C_call_list": "flag",
                    "C_name": "CLA_get_class_copy",
                    "C_prototype": "int flag,\t CLA_Class1 * SHC_rv",
                    "C_return_type": "CLA_Class1 *",
                    "F_C_call": "c_get_class_copy",
                    "F_C_name": "c_get_class_copy",
                    "F_arg_c_call": "flag,\t SHT_rv%cxxmem",
                    "F_arguments": "flag",
                    "F_name_function": "get_class_copy",
                    "F_name_generic": "get_class_copy",
                    "F_name_impl": "get_class_copy",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "cxx_rv_decl": "*SHCXX_rv",
                    "function_name": "getClassCopy",
                    "underscore_name": "get_class_copy"
                },
                "options": {
                    "wrap_lua": false,
                    "wrap_python": false
                }
            },
            {
                "_fmtargs": {
                    "arg": {
                        "fmtc": {
                            "c_addr": "&",
                            "c_const": "",
                            "c_deref": "",
                            "c_member": ".",
                            "c_var": "arg",
                            "capsule_addr": "base",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_type": "int",
                            "cxx_var": "arg",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "c_native_scalar_in",
                            "stmt1": "c_default"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_arg",
                            "c_var": "arg",
                            "f_intent": "IN",
                            "f_type": "integer(C_INT)",
                            "f_var": "arg",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "f_native_scalar_in",
                            "stmt1": "f_default",
                            "stmtc0": "c_native_scalar_in",
                            "stmtc1": "c_default"
                        },
                        "fmtpy": {
                            "c_const": "",
                            "c_decl": "int arg",
                            "c_deref": "",
                            "c_type": "int",
                            "c_var": "arg",
                            "cxx_addr": "&",
                            "cxx_decl": "int arg",
                            "cxx_member": ".",
                            "cxx_type": "int",
                            "cxx_var": "arg",
                            "data_var": "SHData_arg",
                            "numpy_type": "NPY_INT",
                            "py_var": "SHPy_arg",
                            "size_var": "SHSize_arg",
                            "stmt0": "py_native_scalar_in",
                            "stmt1": "py_default"
                        }
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "set_global_flag",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "intent": "in",
                                "value": true
                            },
                            "declarator": {
                                "name": "arg",
                                "pointer": []
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        }
                    ],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void set_global_flag(int arg)",
                "declgen": "void set_global_flag(int arg +intent(in)+value)",
                "fmtdict": {
                    "C_call_list": "arg",
                    "C_name": "CLA_set_global_flag",
                    "C_prototype": "int arg",
                    "C_return_type": "void",
                    "F_C_call": "c_set_global_flag",
                    "F_C_name": "set_global_flag",
                    "F_arg_c_call": "arg",
                    "F_arguments": "arg",
                    "F_name_function": "set_global_flag",
                    "F_name_generic": "set_global_flag",
                    "F_name_impl": "set_global_flag",
                    "F_subprogram": "subroutine",
                    "PY_name_impl": "PY_set_global_flag",
                    "function_name": "set_global_flag",
                    "stmt0": "f_subroutine",
                    "stmt1": "f_default",
                    "stmtc0": "c",
                    "stmtc1": "c_default",
                    "underscore_name": "set_global_flag"
                },
                "options": {}
            },
            {
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_get_value": "",
                        "c_type": "int",
                        "c_var": "SHC_rv",
                        "capsule_addr": "base",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "int",
                        "cxx_var": "SHC_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "c_native_scalar_result",
                        "stmt1": "c_default"
                    },
                    "fmtf": {
                        "cxx_type": "int",
                        "f_type": "integer(C_INT)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "f_native_scalar_result",
                        "stmt1": "f_default",
                        "stmtc0": "c_native_scalar_result",
                        "stmtc1": "c_default"
                    },
                    "fmtpy": {
                        "c_deref": "",
                        "c_var": "SHCXX_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "int",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": "NPY_INT",
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_native_result",
                        "stmt1": "py_default"
                    }
                },
                "ast": {
                    "declarator": {
                        "name": "get_global_flag",
                        "pointer": []
                    },
                    "params": [],
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int get_global_flag()",
                "declgen": "int get_global_flag()",
                "fmtdict": {
                    "C_name": "CLA_get_global_flag",
                    "C_prototype": "",
                    "C_return_type": "int",
                    "F_C_call": "c_get_global_flag",
                    "F_C_name": "get_global_flag",
                    "F_arguments": "",
                    "F_name_function": "get_global_flag",
                    "F_name_generic": "get_global_flag",
                    "F_name_impl": "get_global_flag",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "PY_name_impl": "PY_get_global_flag",
                    "cxx_rv_decl": "int SHC_rv",
                    "function_name": "get_global_flag",
                    "underscore_name": "get_global_flag"
                },
                "options": {}
            },
            {
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "const ",
                        "c_rv_decl": "const char * SHC_rv",
                        "c_type": "char",
                        "c_val": "SHCXX_rv.c_str()",
                        "c_var": "SHC_rv",
                        "c_var_len": "30",
                        "capsule_addr": "cbase",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "std::string",
                        "cxx_var": "SHCXX_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "c_string_&_result",
                        "stmt1": "c_string_result"
                    },
                    "fmtf": {
                        "c_var_len": "30",
                        "cxx_type": "std::string",
                        "f_type": "character(*)",
                        "f_var": "SHT_rv",
                        "sh_type": "SH_TYPE_OTHER",
                        "stmt0": "f_string_scalar_result_result-as-arg",
                        "stmt1": "f_default",
                        "stmtc0": "c_string_scalar_result_buf",
                        "stmtc1": "c_string_scalar_result_buf"
                    },
                    "fmtpy": {
                        "c_deref": "",
                        "c_var": "SHCXX_rv",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "std::string",
                        "cxx_var": "SHCXX_rv",
                        "data_var": "SHData_rv",
                        "numpy_type": null,
                        "py_var": "SHTPy_rv",
                        "size_var": "SHSize_rv",
                        "stmt0": "py_string_result",
                        "stmt1": "py_default"
                    }
                },
                "ast": {
                    "attrs": {
                        "deref": "result-as-arg",
                        "len": "30"
                    },
                    "const": true,
                    "declarator": {
                        "name": "LastFunctionCalled",
                        "pointer": [
                            {
                                "ptr": "&"
                            }
                        ]
                    },
                    "params": [],
                    "return_pointer_as": "result-as-arg",
                    "specifier": [
                        "std::string"
                    ],
                    "typemap_name": "std::string"
                },
                "decl": "const std::string& LastFunctionCalled() +len(30)",
                "declgen": "const std::string & LastFunctionCalled() +deref(result-as-arg)+len(30)",
                "fmtdict": {
                    "C_name": "CLA_last_function_called",
                    "C_prototype": "",
                    "C_return_type": "const char *",
                    "F_C_call": "c_last_function_called_bufferify",
                    "F_C_name": "c_last_function_called",
                    "F_arg_c_call": "SHT_rv,\t len(SHT_rv, kind=C_INT)",
                    "F_arguments": "",
                    "F_name_function": "last_function_called",
                    "F_name_generic": "last_function_called",
                    "F_name_impl": "last_function_called",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "PY_name_impl": "PY_LastFunctionCalled",
                    "cxx_rv_decl": "const std::string & SHCXX_rv",
                    "function_name": "LastFunctionCalled",
                    "underscore_name": "last_function_called"
                },
                "options": {}
            },
            {
                "_fmtargs": {
                    "SHF_rv": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_var": "SHF_rv",
                            "c_var_len": "NSHF_rv",
                            "capsule_addr": "base",
                            "cxx_addr": "&",
                            "cxx_member": ".",
                            "cxx_type": "std::string",
                            "cxx_var": "SHCXX_rv",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "c_string_&_result_buf",
                            "stmt1": "c_string_result_buf"
                        },
                        "fmtf": {
                            "F_pointer": "SHPTR_SHF_rv",
                            "c_var": "SHT_rv",
                            "c_var_len": "NSHF_rv",
                            "f_intent": "OUT",
                            "f_type": "character(*)",
                            "f_var": "SHT_rv",
                            "sh_type": "SH_TYPE_OTHER",
                            "stmt0": "f_string_&_result",
                            "stmt1": "f_default",
                            "stmtc0": "c_string_&_result_buf",
                            "stmtc1": "c_string_result_buf"
                        }
                    }
                },
                "_fmtresult": {
                    "fmtc": {
                        "c_const": "",
                        "c_type": "void",
                        "c_var": "SHC_rv",
                        "c_var_len": "30",
                        "capsule_addr": "base",
                        "cxx_addr": "&",
                        "cxx_member": ".",
                        "cxx_type": "void",
                        "cxx_var": "SHCXX_rv",
                        "idtor": "0",
                        "sh_type": "SH_TYPE_CPTR",
                        "stmt0": "c_unknown_scalar_result_buf",
                        "stmt1": "c_default"
                    }
                },
                "_generated": "arg_to_buffer",
                "ast": {
                    "attrs": {
                        "len": "30"
                    },
                    "declarator": {
                        "name": "LastFunctionCalled",
                        "pointer": []
                    },
                    "params": [
                        {
                            "attrs": {
                                "_is_result": true,
                                "intent": "out",
                                "len": "NSHF_rv"
                            },
                            "declarator": {
                                "name": "SHF_rv",
                                "pointer": [
                                    {
                                        "ptr": "&"
                                    }
                                ]
                            },
                            "specifier": [
                                "std::string"
                            ],
                            "typemap_name": "std::string"
                        }
                    ],
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "const std::string& LastFunctionCalled() +len(30)",
                "declgen": "void LastFunctionCalled(std::string & SHF_rv +intent(out)+len(NSHF_rv)) +len(30)",
                "fmtdict": {
                    "C_name": "CLA_last_function_called_bufferify",
                    "C_prototype": "char * SHF_rv,\t int NSHF_rv",
                    "C_return_type": "void",
                    "F_C_name": "c_last_function_called_bufferify",
                    "cxx_rv_decl": "const std::string & SHCXX_rv",
                    "function_name": "LastFunctionCalled",
                    "function_suffix": "_bufferify",
                    "underscore_name": "last_function_called"
                },
                "options": {
                    "wrap_c": true,
                    "wrap_fortran": false,
                    "wrap_lua": false,
                    "wrap_python": false
                }
            }
        ],
        "language": "cxx",
        "scope_file": [
            "classes"
        ]
    }
}