# classes_types.yaml
# This file is generated by Shroud nowrite-version. Do not edit.
# Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
# other Shroud Project Developers.
# See the top-level COPYRIGHT file for details.
#
# SPDX-License-Identifier: (BSD-3-Clause)
#
# Types generated by Shroud for library 'classes'
typemap:
  - namespace: classes
    declarations: classes
    - type: Circle
      fields:
        base: shadow
        wrap_header:
        - typesclasses.h
        c_type: CLA_Circle
        f_module_name: classes_mod
        f_derived_type: circle
        f_capsule_data_type: CLA_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
    - type: Class1
      fields:
        base: shadow
        wrap_header:
        - typesclasses.h
        c_type: CLA_Class1
        f_module_name: classes_mod
        f_derived_type: class1
        f_capsule_data_type: CLA_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
    - type: Class2
      fields:
        base: shadow
        wrap_header:
        - typesclasses.h
        c_type: CLA_Class2
        f_module_name: classes_mod
        f_derived_type: class2
        f_capsule_data_type: CLA_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
    - type: Data
      fields:
        base: shadow
        wrap_header:
        - typesclasses.h
        c_type: CLA_Data
        f_module_name: classes_mod
        f_derived_type: data
        f_capsule_data_type: CLA_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
    - type: Shape
      fields:
        base: shadow
        wrap_header:
        - typesclasses.h
        c_type: CLA_Shape
        f_module_name: classes_mod
        f_derived_type: shape
        f_capsule_data_type: CLA_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
    - type: Singleton
      fields:
        base: shadow
        wrap_header:
        - typesclasses.h
        c_type: CLA_Singleton
        f_module_name: classes_mod
        f_derived_type: singleton
        f_capsule_data_type: CLA_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
