// wrapClass1.cpp
// This file is generated by Shroud nowrite-version. Do not edit.
// Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
// other Shroud Project Developers.
// See the top-level COPYRIGHT file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//

// cxx_header
#include "ownership.hpp"
// shroud
#include <cstddef>
#include "wrapClass1.h"

// splicer begin class.Class1.CXX_definitions
// splicer end class.Class1.CXX_definitions

extern "C" {

// splicer begin class.Class1.C_definitions
// splicer end class.Class1.C_definitions

// ----------------------------------------
// Function:  ~Class1
// Attrs:     +intent(dtor)
// Exact:     c_dtor
void OWN_Class1_dtor(OWN_Class1 * self)
{
    Class1 *SH_this = static_cast<Class1 *>(self->addr);
    // splicer begin class.Class1.method.dtor
    delete SH_this;
    self->addr = nullptr;
    // splicer end class.Class1.method.dtor
}

// ----------------------------------------
// Function:  int get_flag
// Attrs:     +intent(getter)
// Exact:     c_getter_native_scalar
int OWN_Class1_get_flag(OWN_Class1 * self)
{
    Class1 *SH_this = static_cast<Class1 *>(self->addr);
    // splicer begin class.Class1.method.get_flag
    // skip call c_getter
    return SH_this->m_flag;
    // splicer end class.Class1.method.get_flag
}

}  // extern "C"
