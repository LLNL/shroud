Read yaml ownership.yaml
Close ownership_types.yaml
class Class1
C c ~Class1(void)
C f ~Class1(void)
C f int get_flag(void)
Close wrapClass1.h
Close wrapClass1.cpp
C c int * ReturnIntPtrRaw(void) +deref(raw)
C c int * ReturnIntPtrScalar(void) +deref(scalar)
C f int * ReturnIntPtrScalar(void) +deref(scalar)
C c int * ReturnIntPtrPointer(void) +deref(pointer)
C f int * ReturnIntPtrPointer(void) +deref(pointer)
C c int * ReturnIntPtrDimRaw(int * len +intent(out)) +deref(raw)
C c int * ReturnIntPtrDimPointer(int * len +hidden+intent(out)) +deref(pointer)+dimension(len)
C f int * ReturnIntPtrDimPointer(int * len +hidden+intent(out)) +deref(pointer)+dimension(len)
C c int * ReturnIntPtrDimAlloc(int * len +hidden+intent(out)) +deref(allocatable)+dimension(len)
C f int * ReturnIntPtrDimAlloc(int * len +hidden+intent(out)) +deref(allocatable)+dimension(len)
C c int * ReturnIntPtrDimDefault(int * len +hidden+intent(out)) +dimension(len)
C f int * ReturnIntPtrDimDefault(int * len +hidden+intent(out)) +dimension(len)
C c int * ReturnIntPtrDimRawNew(int * len +hidden+intent(out)) +dimension(len)+owner(caller)
C c int * ReturnIntPtrDimPointerNew(int * len +hidden+intent(out)) +deref(pointer)+dimension(len)+owner(caller)
C f int * ReturnIntPtrDimPointerNew(int * len +hidden+intent(out)) +deref(pointer)+dimension(len)+owner(caller)
C c int * ReturnIntPtrDimAllocNew(int * len +hidden+intent(out)) +deref(allocatable)+dimension(len)+owner(caller)
C c int * ReturnIntPtrDimDefaultNew(int * len +hidden+intent(out)) +dimension(len)+owner(caller)
C f int * ReturnIntPtrDimDefaultNew(int * len +hidden+intent(out)) +dimension(len)+owner(caller)
C c void createClassStatic(int flag)
C f void createClassStatic(int flag)
C c Class1 * getClassStatic(void) +owner(library)
C f Class1 * getClassStatic(void) +owner(library)
C c Class1 * getClassNew(int flag) +owner(caller)
C f Class1 * getClassNew(int flag) +owner(caller)
Close wrapownership.h
Close wrapownership.cpp
class Class1
Fortran ~Class1(void)
Fortran int get_flag(void)
C-interface f ~Class1(void)
C-interface f int get_flag(void)
Fortran int * ReturnIntPtrScalar(void) +deref(scalar)
Fortran int * ReturnIntPtrPointer(void) +deref(pointer)
Fortran int * ReturnIntPtrDimPointer(int * len +hidden+intent(out)) +deref(pointer)+dimension(len)
Fortran int * ReturnIntPtrDimAlloc(int * len +hidden+intent(out)) +deref(allocatable)+dimension(len)
Fortran int * ReturnIntPtrDimDefault(int * len +hidden+intent(out)) +dimension(len)
Fortran int * ReturnIntPtrDimPointerNew(int * len +hidden+intent(out)) +deref(pointer)+dimension(len)+owner(caller)
Fortran int * ReturnIntPtrDimDefaultNew(int * len +hidden+intent(out)) +dimension(len)+owner(caller)
Fortran void createClassStatic(int flag)
Fortran Class1 * getClassStatic(void) +owner(library)
Fortran Class1 * getClassNew(int flag) +owner(caller)
C-interface c int * ReturnIntPtrRaw(void) +deref(raw)
C-interface c int * ReturnIntPtrScalar(void) +deref(scalar)
C-interface f int * ReturnIntPtrScalar(void) +deref(scalar)
C-interface c int * ReturnIntPtrPointer(void) +deref(pointer)
C-interface f int * ReturnIntPtrPointer(void) +deref(pointer)
C-interface c int * ReturnIntPtrDimRaw(int * len +intent(out)) +deref(raw)
C-interface c int * ReturnIntPtrDimPointer(int * len +hidden+intent(out)) +deref(pointer)+dimension(len)
C-interface f int * ReturnIntPtrDimPointer(int * len +hidden+intent(out)) +deref(pointer)+dimension(len)
C-interface c int * ReturnIntPtrDimAlloc(int * len +hidden+intent(out)) +deref(allocatable)+dimension(len)
C-interface f int * ReturnIntPtrDimAlloc(int * len +hidden+intent(out)) +deref(allocatable)+dimension(len)
C-interface c int * ReturnIntPtrDimDefault(int * len +hidden+intent(out)) +dimension(len)
C-interface f int * ReturnIntPtrDimDefault(int * len +hidden+intent(out)) +dimension(len)
C-interface c int * ReturnIntPtrDimRawNew(int * len +hidden+intent(out)) +dimension(len)+owner(caller)
C-interface c int * ReturnIntPtrDimPointerNew(int * len +hidden+intent(out)) +deref(pointer)+dimension(len)+owner(caller)
C-interface f int * ReturnIntPtrDimPointerNew(int * len +hidden+intent(out)) +deref(pointer)+dimension(len)+owner(caller)
C-interface c int * ReturnIntPtrDimAllocNew(int * len +hidden+intent(out)) +deref(allocatable)+dimension(len)+owner(caller)
C-interface c int * ReturnIntPtrDimDefaultNew(int * len +hidden+intent(out)) +dimension(len)+owner(caller)
C-interface f int * ReturnIntPtrDimDefaultNew(int * len +hidden+intent(out)) +dimension(len)+owner(caller)
C-interface f void createClassStatic(int flag)
C-interface f Class1 * getClassStatic(void) +owner(library)
C-interface f Class1 * getClassNew(int flag) +owner(caller)
Close wrapfownership.f
Close utilownership.cpp
Close typesownership.h
class Class1
Python method ~Class1(void)
Close pyClass1type.cpp
Python function int * ReturnIntPtrScalar(void) +deref(scalar)
Python function int * ReturnIntPtrPointer(void) +deref(pointer)
Python function int * ReturnIntPtrDimPointer(int * len +hidden+intent(out)) +deref(pointer)+dimension(len)
Python function int * ReturnIntPtrDimAlloc(int * len +hidden+intent(out)) +deref(allocatable)+dimension(len)
Python function int * ReturnIntPtrDimDefault(int * len +hidden+intent(out)) +dimension(len)
Python function int * ReturnIntPtrDimPointerNew(int * len +hidden+intent(out)) +deref(pointer)+dimension(len)+owner(caller)
Python function int * ReturnIntPtrDimAllocNew(int * len +hidden+intent(out)) +deref(allocatable)+dimension(len)+owner(caller)
Python function int * ReturnIntPtrDimDefaultNew(int * len +hidden+intent(out)) +dimension(len)+owner(caller)
Python function void createClassStatic(int flag)
Python function Class1 * getClassStatic(void) +owner(library)
Python function Class1 * getClassNew(int flag) +owner(caller)
Close pyownershipmodule.cpp
Close pyownershiputil.cpp
Close pyownershipmodule.hpp
Close setup.py
Lua method ~Class1(void)
Close luaownershipmodule.hpp
Close luaownershipmodule.cpp
