# testnames_types.yaml
# This file is generated by Shroud nowrite-version. Do not edit.
# Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
# other Shroud Project Developers.
# See the top-level COPYRIGHT file for details.
#
# SPDX-License-Identifier: (BSD-3-Clause)
#
# Types generated by Shroud for library 'testnames'
typemap:
  - namespace: CAPI
    declarations: CAPI
    - type: Class1
      fields:
        base: shadow
        wrap_header:
        - typestestnames.hh
        c_type: TES_capi_class1
        f_module_name: testnames_capi_mod
        f_derived_type: class1
        f_capsule_data_type: TES_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
  - type: Cstruct_as_class
    fields:
      base: shadow
      wrap_header:
      - typestestnames.hh
      c_type: TES_Cstruct_as_class
      f_module_name: top_module
      f_derived_type: Fstruct_as_class
      f_capsule_data_type: TES_SHROUD_capsule_data
      f_to_c: "{f_var}%cxxmem"
  - type: Cstruct_as_subclass
    fields:
      base: shadow
      wrap_header:
      - typestestnames.hh
      c_type: TES_Cstruct_as_subclass
      f_module_name: top_module
      f_derived_type: Fstruct_as_subclass
      f_capsule_data_type: TES_SHROUD_capsule_data
      f_to_c: "{f_var}%cxxmem"
  - type: Names2
    fields:
      base: shadow
      wrap_header:
      - typestestnames.hh
      c_type: TES_Names2
      f_module_name: top_module
      f_derived_type: names2
      f_capsule_data_type: TES_SHROUD_capsule_data
      f_to_c: "{f_var}%cxxmem"
  - namespace: internal
    declarations: internal
    - type: ImplWorker1
      fields:
        base: shadow
        wrap_header:
        - typestestnames.hh
        c_type: TES_internal_ImplWorker1
        f_module_name: testnames_internal_mod
        f_derived_type: impl_worker1
        f_capsule_data_type: TES_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
  - namespace: ns0
    declarations: ns0
    - type: Names
      fields:
        base: shadow
        wrap_header:
        - typestestnames.hh
        c_type: TES_ns0_Names
        f_module_name: name_module
        f_derived_type: FNames
        f_capsule_data_type: TES_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
  - namespace: std
    declarations: std
    - type: Vvv1
      fields:
        base: shadow
        wrap_header:
        - typestestnames.hh
        c_type: TES_std_Vvv1
        f_module_name: testnames_std_mod
        f_derived_type: FFvvv1
        f_capsule_data_type: TES_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
    - type: vector_double
      fields:
        base: shadow
        wrap_header:
        - typestestnames.hh
        c_type: TES_std_vector_double
        f_module_name: testnames_std_mod
        f_derived_type: vector_double
        f_capsule_data_type: TES_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
    - type: vector_instantiation3
      fields:
        base: shadow
        wrap_header:
        - typestestnames.hh
        c_type: TES_std_vector_instantiation3
        f_module_name: testnames_std_mod
        f_derived_type: vector_instantiation3
        f_capsule_data_type: TES_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
    - type: vector_instantiation5
      fields:
        base: shadow
        wrap_header:
        - typestestnames.hh
        c_type: TES_std_vector_instantiation5
        f_module_name: testnames_std_mod
        f_derived_type: vector_instantiation5
        f_capsule_data_type: TES_SHROUD_capsule_data
        f_to_c: "{f_var}%cxxmem"
  - type: twoTs_0
    fields:
      base: shadow
      wrap_header:
      - typestestnames.hh
      c_type: TES_twoTs_0
      f_module_name: top_module
      f_derived_type: two_ts_0
      f_capsule_data_type: TES_SHROUD_capsule_data
      f_to_c: "{f_var}%cxxmem"
  - type: twoTs_instantiation4
    fields:
      base: shadow
      wrap_header:
      - typestestnames.hh
      c_type: TES_twoTs_instantiation4
      f_module_name: top_module
      f_derived_type: two_ts_instantiation4
      f_capsule_data_type: TES_SHROUD_capsule_data
      f_to_c: "{f_var}%cxxmem"
