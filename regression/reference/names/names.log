Read yaml names.yaml
Close testnames_types.yaml
Close wraptestnames_ns0_inner.cc
class Names
C c Names(void) +name(defaultctor)  +api(capptr)+intent(ctor)
C f Names(void) +name(defaultctor)  +api(capptr)+intent(ctor)
C c void method1(void)  +intent(subroutine)
C f void method1(void)  +intent(subroutine)
C c void method2(void)  +intent(subroutine)
C f void method2(void)  +intent(subroutine)
Close foo.h
Close foo.cpp
Close foons0.cpp
C c void init_ns1(void)  +intent(subroutine)
C f void init_ns1(void)  +intent(subroutine)
Close wraptestnames_ns1.hh
Close wraptestnames_ns1.cc
class ImplWorker1
class vector<int>
class vector<double>
class vector<long>
class vector<internal::ImplWorker1>
class Class1
C c void Member1(void)  +intent(subroutine)
C f void Member1(void)  +intent(subroutine)
Close wrapCAPI_Class1.hh
Close wrapCAPI_Class1.cc
C c void Worker1(void)  +intent(subroutine)
C f void Worker1(void)  +intent(subroutine)
Close wraptestnames_CAPI.hh
Close wraptestnames_CAPI.cc
C c void Worker1(void)  +intent(subroutine)
C f void Worker1(void)  +intent(subroutine)
Close wraptestnames_CAPI2.hh
Close wraptestnames_CAPI2.cc
class Names2
Close wrapNames2.cc
class twoTs<int, long>
class twoTs<float, double>
class Cstruct_as_class
class Cstruct_as_subclass
C c void getName(char * name +len(worklen)+len_trim(worktrim))  +intent(subroutine)
C f void getName(char * name +len(worklen)+len_trim(worktrim))  +intent(subroutine)
C c void function1(void)  +intent(subroutine)
C f void function1(void)  +intent(subroutine)
C c void function2(void)  +intent(subroutine)
C f void function2(void)  +intent(subroutine)
C c void function3a(int i +value)  +intent(subroutine)
C f void function3a(int i +value)  +intent(subroutine)
C c void function3a(long i +value)  +intent(subroutine)
C f void function3a(long i +value)  +intent(subroutine)
C c int function4(const std::string & rv)  +intent(function)
C f int function4(const std::string & rv)  +intent(function)
C c void function5(void) +name(fiveplus)  +intent(subroutine)
C f void function5(void) +name(fiveplus)  +intent(subroutine)
C c void TestMultilineSplicer(std::string & name, int * value +intent(out))  +intent(subroutine)
C f void TestMultilineSplicer(std::string & name, int * value +intent(out))  +intent(subroutine)
C c void FunctionTU(int arg1 +value, long arg2 +value)  +intent(subroutine)
C f void FunctionTU(int arg1 +value, long arg2 +value)  +intent(subroutine)
C c void FunctionTU(float arg1 +value, double arg2 +value)  +intent(subroutine)
C f void FunctionTU(float arg1 +value, double arg2 +value)  +intent(subroutine)
C c int UseImplWorker(void)  +intent(function)
C f int UseImplWorker(void)  +intent(function)
C c int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)  +intent(function)
C f int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)  +intent(function)
C c void external_funcs(const char * rdbase, const char * pkg, const char * name, void ( * alloc)(double * arr +intent(inout), int * err +intent(out)) +value, void ( * afree)(double * arr +intent(inout)) +value, void ( * assoc)(double * arr +intent(in), int * err +intent(out)) +value)  +intent(subroutine)
C f void external_funcs(const char * rdbase, const char * pkg, const char * name, void ( * alloc)(double * arr +intent(inout), int * err +intent(out)) +value, void ( * afree)(double * arr +intent(inout)) +value, void ( * assoc)(double * arr +intent(in), int * err +intent(out)) +value)  +intent(subroutine)
Close top.h
Close top.cpp
class Names2
class twoTs<int, long>
class twoTs<float, double>
class Cstruct_as_class
class Cstruct_as_subclass
Fortran void getName(char * name +len(worklen)+len_trim(worktrim))  +intent(subroutine)
Fortran void function1(void)  +intent(subroutine)
Fortran void function2(void)  +intent(subroutine)
Fortran void function3a(int i +value)  +intent(subroutine)
Fortran void function3a(long i +value)  +intent(subroutine)
Fortran int function4(const std::string & rv)  +intent(function)
Fortran void function5(void) +name(fiveplus)  +intent(subroutine)
Fortran void TestMultilineSplicer(std::string & name, int * value +intent(out))  +intent(subroutine)
Fortran void FunctionTU(int arg1 +value, long arg2 +value)  +intent(subroutine)
Fortran void FunctionTU(float arg1 +value, double arg2 +value)  +intent(subroutine)
Fortran int UseImplWorker(void)  +intent(function)
Fortran int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)  +intent(function)
Fortran void external_funcs(const char * rdbase, const char * pkg, const char * name, void ( * alloc)(double * arr +intent(inout), int * err +intent(out)) +value, void ( * afree)(double * arr +intent(inout)) +value, void ( * assoc)(double * arr +intent(in), int * err +intent(out)) +value)  +intent(subroutine)
C-interface c void getName(char * name +len(worklen)+len_trim(worktrim))  +intent(subroutine)
C-interface f void getName(char * name +len(worklen)+len_trim(worktrim))  +intent(subroutine)
C-interface f void function1(void)  +intent(subroutine)
C-interface f void function2(void)  +intent(subroutine)
C-interface f void function3a(int i +value)  +intent(subroutine)
C-interface f void function3a(long i +value)  +intent(subroutine)
C-interface c int function4(const std::string & rv)  +intent(function)
C-interface f int function4(const std::string & rv)  +intent(function)
C-interface f void function5(void) +name(fiveplus)  +intent(subroutine)
C-interface c void TestMultilineSplicer(std::string & name, int * value +intent(out))  +intent(subroutine)
C-interface f void TestMultilineSplicer(std::string & name, int * value +intent(out))  +intent(subroutine)
C-interface f void FunctionTU(int arg1 +value, long arg2 +value)  +intent(subroutine)
C-interface f void FunctionTU(float arg1 +value, double arg2 +value)  +intent(subroutine)
C-interface f int UseImplWorker(void)  +intent(function)
C-interface f int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)  +intent(function)
C-interface f void external_funcs(const char * rdbase, const char * pkg, const char * name, void ( * alloc)(double * arr +intent(inout), int * err +intent(out)) +value, void ( * afree)(double * arr +intent(inout)) +value, void ( * assoc)(double * arr +intent(in), int * err +intent(out)) +value)  +intent(subroutine)
class Names
Fortran Names(void) +name(defaultctor)  +api(capptr)+intent(ctor)
Fortran void method1(void)  +intent(subroutine)
Fortran void method2(void)  +intent(subroutine)
C-interface f Names(void) +name(defaultctor)  +api(capptr)+intent(ctor)
C-interface f void method1(void)  +intent(subroutine)
C-interface f void method2(void)  +intent(subroutine)
Close wrapftestnames_ns0_inner.F
Close foo.f
Fortran void init_ns1(void)  +intent(subroutine)
C-interface f void init_ns1(void)  +intent(subroutine)
Close wrapftestnames_ns1.F
Close wrapftestnames_internal.F
class vector<int>
class vector<double>
class vector<long>
class vector<internal::ImplWorker1>
Close wrapftestnames_std.F
class Class1
Fortran void Member1(void)  +intent(subroutine)
C-interface f void Member1(void)  +intent(subroutine)
Fortran void Worker1(void)  +intent(subroutine)
C-interface f void Worker1(void)  +intent(subroutine)
Close wrapftestnames_CAPI.F
Fortran void Worker1(void)  +intent(subroutine)
C-interface f void Worker1(void)  +intent(subroutine)
Close wrapftestnames_CAPI2.F
Close top.f
Close utiltestnames.cc
Close typestestnames.hh
Close pytestnames_ns0_innermodule.cpp
class Names
Python method Names(void) +name(defaultctor)
Python method void method1(void)
Python method void method2(void)
Close pyns0_Namestype.cpp
Close pytestnames_ns0module.cpp
Python function void init_ns1(void)
Close pytestnames_ns1module.cpp
Close pytestnames_internalmodule.cpp
class vector
Close pystd_vector_inttype.cpp
class vector
Close pystd_vector_doubletype.cpp
class vector
Close pystd_vector_instantiation5type.cpp
class vector
Close pystd_vector_instantiation3type.cpp
Close pytestnames_stdmodule.cpp
class Names2
Close pyNames2type.cpp
class twoTs
Close pytwoTs_0type.cpp
class twoTs
Close pytwoTs_instantiation4type.cpp
Python function void getName(char * name +len(worklen)+len_trim(worktrim))
Python function void function1(void)
Python function void function2(void)
Python function void function3a(int i +value)
Python function void function3a(long i +value)
Python function int function4(const std::string & rv)
Python function void function5(void) +name(fiveplus)
Python function void TestMultilineSplicer(std::string & name, int * value +intent(out))
Python function void FunctionTU(int arg1 +value, long arg2 +value)
Python function void FunctionTU(float arg1 +value, double arg2 +value)
Python function int UseImplWorker(void)
Python function int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)
Close pytestnamesmodule.cpp
Close pytestnamesutil.cpp
Close pytestnamesmodule.hpp
Close setup.py
