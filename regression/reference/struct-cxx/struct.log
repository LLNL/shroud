Read yaml struct.yaml
Close struct_types.yaml
class Cstruct_as_class
C f int get_x1(void)
C f void set_x1(int val +intent(in))
C f int get_y1(void)
C f void set_y1(int val +intent(in))
Close wrapCstruct_as_class.h
Close wrapCstruct_as_class.cpp
class Cstruct_as_subclass
C f int get_x1(void)
C f void set_x1(int val +intent(in))
C f int get_y1(void)
C f void set_y1(int val +intent(in))
C f int get_z1(void)
C f void set_z1(int val +intent(in))
Close wrapCstruct_as_subclass.h
Close wrapCstruct_as_subclass.cpp
struct Cstruct1
struct Cstruct_ptr
struct Cstruct_list
struct Cstruct_numpy
struct Arrays1
struct s_nested
C c int passStructByValue(Cstruct1 arg)
C f int passStructByValue(Cstruct1 arg)
C c int passStruct1(const Cstruct1 * arg)
C f int passStruct1(const Cstruct1 * arg)
C c int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))
C f int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))
C c int acceptStructInPtr(Cstruct1 * arg +intent(in))
C f int acceptStructInPtr(Cstruct1 * arg +intent(in))
C c void acceptStructOutPtr(Cstruct1 * arg +intent(out), int i, double d)
C f void acceptStructOutPtr(Cstruct1 * arg +intent(out), int i, double d)
C c void acceptStructInOutPtr(Cstruct1 * arg +intent(inout))
C f void acceptStructInOutPtr(Cstruct1 * arg +intent(inout))
C c Cstruct1 returnStructByValue(int i, double d)
C f Cstruct1 returnStructByValue(int i, double d)
C c Cstruct1 * returnStructPtr1(int i, double d)
C f Cstruct1 * returnStructPtr1(int i, double d)
C c Cstruct1 * returnStructPtr2(int i, double d, char * outbuf +charlen(LENOUTBUF)+intent(out))
C f Cstruct1 * returnStructPtr2(int i, double d, char * outbuf +charlen(LENOUTBUF)+intent(out))
C c Cstruct_list * get_global_struct_list(void)
C f Cstruct_list * get_global_struct_list(void)
C c Cstruct_as_class * Create_Cstruct_as_class(void)
C f Cstruct_as_class * Create_Cstruct_as_class(void)
C c Cstruct_as_class * Create_Cstruct_as_class_args(int x, int y)
C f Cstruct_as_class * Create_Cstruct_as_class_args(int x, int y)
C c int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)
C f int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)
C c Cstruct_as_subclass * Create_Cstruct_as_subclass_args(int x, int y, int z)
C f Cstruct_as_subclass * Create_Cstruct_as_subclass_args(int x, int y, int z)
C f const double * Cstruct_ptr_get_const_dvalue(Cstruct_ptr * SH_this +intent(in))
C f void Cstruct_ptr_set_const_dvalue(Cstruct_ptr * SH_this, const double * val +intent(in))
C f int * Cstruct_list_get_ivalue(Cstruct_list * SH_this +intent(in)) +dimension(nitems+nitems)
C f void Cstruct_list_set_ivalue(Cstruct_list * SH_this, int * val +intent(in)+rank(1))
C f double * Cstruct_list_get_dvalue(Cstruct_list * SH_this +intent(in)) +dimension(nitems*TWO)
C f void Cstruct_list_set_dvalue(Cstruct_list * SH_this, double * val +intent(in)+rank(1))
Close wrapstruct.h
Close wrapstruct.cpp
class Cstruct1
class Cstruct_ptr
class Cstruct_list
class Cstruct_numpy
class Arrays1
class Cstruct_as_class
Fortran int get_x1(void)
Fortran void set_x1(int val +intent(in))
Fortran int get_y1(void)
Fortran void set_y1(int val +intent(in))
C-interface f int get_x1(void)
C-interface f void set_x1(int val +intent(in))
C-interface f int get_y1(void)
C-interface f void set_y1(int val +intent(in))
class Cstruct_as_subclass
Fortran int get_x1(void)
Fortran void set_x1(int val +intent(in))
Fortran int get_y1(void)
Fortran void set_y1(int val +intent(in))
Fortran int get_z1(void)
Fortran void set_z1(int val +intent(in))
C-interface f int get_x1(void)
C-interface f void set_x1(int val +intent(in))
C-interface f int get_y1(void)
C-interface f void set_y1(int val +intent(in))
C-interface f int get_z1(void)
C-interface f void set_z1(int val +intent(in))
class s_nested
Fortran int passStructByValue(Cstruct1 arg)
Fortran int passStruct1(const Cstruct1 * arg)
Fortran int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))
Fortran int acceptStructInPtr(Cstruct1 * arg +intent(in))
Fortran void acceptStructOutPtr(Cstruct1 * arg +intent(out), int i, double d)
Fortran void acceptStructInOutPtr(Cstruct1 * arg +intent(inout))
Fortran Cstruct1 returnStructByValue(int i, double d)
Fortran Cstruct1 * returnStructPtr1(int i, double d)
Fortran Cstruct1 * returnStructPtr2(int i, double d, char * outbuf +charlen(LENOUTBUF)+intent(out))
Fortran Cstruct_list * get_global_struct_list(void)
Fortran Cstruct_as_class * Create_Cstruct_as_class(void)
Fortran Cstruct_as_class * Create_Cstruct_as_class_args(int x, int y)
Fortran int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)
Fortran Cstruct_as_subclass * Create_Cstruct_as_subclass_args(int x, int y, int z)
Fortran const double * Cstruct_ptr_get_const_dvalue(Cstruct_ptr * SH_this +intent(in))
Fortran void Cstruct_ptr_set_const_dvalue(Cstruct_ptr * SH_this, const double * val +intent(in))
Fortran int * Cstruct_list_get_ivalue(Cstruct_list * SH_this +intent(in)) +dimension(nitems+nitems)
Fortran void Cstruct_list_set_ivalue(Cstruct_list * SH_this, int * val +intent(in)+rank(1))
Fortran double * Cstruct_list_get_dvalue(Cstruct_list * SH_this +intent(in)) +dimension(nitems*TWO)
Fortran void Cstruct_list_set_dvalue(Cstruct_list * SH_this, double * val +intent(in)+rank(1))
C-interface f int passStructByValue(Cstruct1 arg)
C-interface f int passStruct1(const Cstruct1 * arg)
C-interface c int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))
C-interface f int passStruct2(const Cstruct1 * s1, char * outbuf +charlen(LENOUTBUF)+intent(out))
C-interface f int acceptStructInPtr(Cstruct1 * arg +intent(in))
C-interface f void acceptStructOutPtr(Cstruct1 * arg +intent(out), int i, double d)
C-interface f void acceptStructInOutPtr(Cstruct1 * arg +intent(inout))
C-interface f Cstruct1 returnStructByValue(int i, double d)
C-interface f Cstruct1 * returnStructPtr1(int i, double d)
C-interface c Cstruct1 * returnStructPtr2(int i, double d, char * outbuf +charlen(LENOUTBUF)+intent(out))
C-interface f Cstruct1 * returnStructPtr2(int i, double d, char * outbuf +charlen(LENOUTBUF)+intent(out))
C-interface f Cstruct_list * get_global_struct_list(void)
C-interface f Cstruct_as_class * Create_Cstruct_as_class(void)
C-interface f Cstruct_as_class * Create_Cstruct_as_class_args(int x, int y)
C-interface f int Cstruct_as_class_sum(const Cstruct_as_class * point +pass)
C-interface f Cstruct_as_subclass * Create_Cstruct_as_subclass_args(int x, int y, int z)
C-interface f const double * Cstruct_ptr_get_const_dvalue(Cstruct_ptr * SH_this +intent(in))
C-interface f void Cstruct_ptr_set_const_dvalue(Cstruct_ptr * SH_this, const double * val +intent(in))
C-interface f int * Cstruct_list_get_ivalue(Cstruct_list * SH_this +intent(in)) +dimension(nitems+nitems)
C-interface f void Cstruct_list_set_ivalue(Cstruct_list * SH_this, int * val +intent(in)+rank(1))
C-interface f double * Cstruct_list_get_dvalue(Cstruct_list * SH_this +intent(in)) +dimension(nitems*TWO)
C-interface f void Cstruct_list_set_dvalue(Cstruct_list * SH_this, double * val +intent(in)+rank(1))
Close wrapfstruct.f
Close utilstruct.cpp
Close typesstruct.h
