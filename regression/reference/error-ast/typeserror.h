// typeserror.h
// This file is generated by Shroud nowrite-version. Do not edit.
// Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
// other Shroud Project Developers.
// See the top-level COPYRIGHT file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//
// For C users and C++ implementation

#ifndef TYPESERROR_H
#define TYPESERROR_H

// splicer begin types.CXX_declarations
// splicer end types.CXX_declarations

#ifdef __cplusplus
extern "C" {
#endif

// splicer begin types.C_declarations
// splicer end types.C_declarations

// helper capsule_data_helper
struct s_ERR_SHROUD_capsule_data {
    void *addr;     /* address of C++ memory */
    int idtor;      /* index of destructor */
};
typedef struct s_ERR_SHROUD_capsule_data ERR_SHROUD_capsule_data;
#if 0

// C++ capsule ERR_Class1
struct s_ERR_Class1 {
    Class1 *addr;     /* address of C++ memory */
    int idtor;      /* index of destructor */
};
typedef struct s_ERR_Class1 ERR_Class1;
#endif

// C capsule ERR_Class1
struct s_ERR_Class1 {
    void *addr;     /* address of C++ memory */
    int idtor;      /* index of destructor */
};
typedef struct s_ERR_Class1 ERR_Class1;

void ERR_SHROUD_memory_destructor(ERR_SHROUD_capsule_data *cap);

#ifdef __cplusplus
}
#endif

#endif  // TYPESERROR_H
