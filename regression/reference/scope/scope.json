{
    "<NOTICE>": "This file is generated by Shroud nowrite-version and is useful for debugging.",
    "library": {
        "class_map": [
            "Class1",
            "Class2",
            "ns1_DataPointer",
            "ns2_DataPointer",
            "ns3_DataPointer"
        ],
        "classes": [
            {
                "<CLASS>": "****************************************",
                "cxx_header": [],
                "name": "DataPointer",
                "options": {},
                "parse_keyword": "struct",
                "scope": "ns3::DataPointer::",
                "typemap_name": "ns3::DataPointer",
                "variables": [
                    {
                        "<VARIABLE>": "****************************************",
                        "ast": {
                            "declarator": {
                                "name": "nitems",
                                "typemap_name": "int"
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "name": "nitems",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "nitems",
                            "variable_lower": "nitems",
                            "variable_name": "nitems",
                            "variable_upper": "NITEMS"
                        }
                    },
                    {
                        "<VARIABLE>": "****************************************",
                        "ast": {
                            "declarator": {
                                "attrs": {
                                    "dimension": "nitems"
                                },
                                "metaattrs": {
                                    "dimension": [
                                        {
                                            "name": "nitems"
                                        }
                                    ]
                                },
                                "name": "items",
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ],
                                "typemap_name": "int"
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "name": "items",
                        "options": {},
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "c_type": "int",
                            "cxx_type": "int",
                            "field_name": "items",
                            "variable_lower": "items",
                            "variable_name": "items",
                            "variable_upper": "ITEMS"
                        }
                    }
                ],
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "C_header_filename": "wrapns3_DataPointer.h",
                    "C_impl_filename": "wrapns3_DataPointer.cpp",
                    "C_name_api": "DataPointer",
                    "C_name_scope": "ns3_DataPointer_",
                    "C_type_name": "SCO_datapointer",
                    "F_derived_name": "data_pointer",
                    "F_name_api": "data_pointer",
                    "F_name_scope": "ns3_data_pointer_",
                    "PY_struct_array_descr_create": "PY_DataPointer_create_array_descr",
                    "PY_struct_array_descr_name": "DataPointer_dtype",
                    "PY_struct_array_descr_variable": "PY_DataPointer_array_descr",
                    "class_scope": "DataPointer::",
                    "cxx_class": "DataPointer",
                    "cxx_type": "DataPointer",
                    "file_scope": "ns3_DataPointer"
                }
            },
            {
                "<CLASS>": "****************************************",
                "cxx_header": [],
                "enums": [
                    {
                        "<ENUM>": "****************************************",
                        "_fmtmembers": {
                            "BLUE": {
                                "C_enum_member": "SCO_Class1_BLUE",
                                "F_enum_member": "class1_blue",
                                "F_value": 41,
                                "enum_member_lower": "blue",
                                "enum_member_name": "BLUE",
                                "enum_member_upper": "BLUE"
                            },
                            "RED": {
                                "C_enum_member": "SCO_Class1_RED",
                                "C_value": 40,
                                "F_enum_member": "class1_red",
                                "F_value": 40,
                                "enum_member_lower": "red",
                                "enum_member_name": "RED",
                                "enum_member_upper": "RED"
                            },
                            "WHITE": {
                                "C_enum_member": "SCO_Class1_WHITE",
                                "F_enum_member": "class1_white",
                                "F_value": 42,
                                "enum_member_lower": "white",
                                "enum_member_name": "WHITE",
                                "enum_member_upper": "WHITE"
                            }
                        },
                        "ast": {
                            "members": [
                                {
                                    "name": "RED",
                                    "value": {
                                        "constant": "40"
                                    }
                                },
                                {
                                    "name": "BLUE"
                                },
                                {
                                    "name": "WHITE"
                                }
                            ],
                            "name": "Color"
                        },
                        "decl": "enum Color {\n  RED = 40,\n  BLUE,\n  WHITE\n};\n",
                        "name": "Color",
                        "options": {},
                        "typemap_name": "Class1::Color",
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "C_enum": "SCO_Class1_Color",
                            "enum_lower": "color",
                            "enum_name": "Color",
                            "enum_upper": "COLOR",
                            "namespace_scope": "Class1::"
                        }
                    }
                ],
                "name": "Class1",
                "options": {},
                "parse_keyword": "class",
                "scope": "Class1::",
                "typemap_name": "Class1",
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapClass1.h",
                    "C_impl_filename": "wrapClass1.cpp",
                    "C_name_api": "Class1",
                    "C_name_scope": "Class1_",
                    "C_type_name": "SCO_Class1",
                    "F_derived_name": "class1",
                    "F_name_api": "class1",
                    "F_name_scope": "class1_",
                    "class_scope": "Class1::",
                    "cxx_class": "Class1",
                    "cxx_type": "Class1",
                    "f_capsule_data_type": "SCO_SHROUD_capsule_data",
                    "file_scope": "Class1",
                    "hnamefunc0": "capsule_data_helper"
                }
            },
            {
                "<CLASS>": "****************************************",
                "cxx_header": [],
                "enums": [
                    {
                        "<ENUM>": "****************************************",
                        "_fmtmembers": {
                            "BLUE": {
                                "C_enum_member": "SCO_Class2_BLUE",
                                "F_enum_member": "class2_blue",
                                "F_value": 51,
                                "enum_member_lower": "blue",
                                "enum_member_name": "BLUE",
                                "enum_member_upper": "BLUE"
                            },
                            "RED": {
                                "C_enum_member": "SCO_Class2_RED",
                                "C_value": 50,
                                "F_enum_member": "class2_red",
                                "F_value": 50,
                                "enum_member_lower": "red",
                                "enum_member_name": "RED",
                                "enum_member_upper": "RED"
                            },
                            "WHITE": {
                                "C_enum_member": "SCO_Class2_WHITE",
                                "F_enum_member": "class2_white",
                                "F_value": 52,
                                "enum_member_lower": "white",
                                "enum_member_name": "WHITE",
                                "enum_member_upper": "WHITE"
                            }
                        },
                        "ast": {
                            "members": [
                                {
                                    "name": "RED",
                                    "value": {
                                        "constant": "50"
                                    }
                                },
                                {
                                    "name": "BLUE"
                                },
                                {
                                    "name": "WHITE"
                                }
                            ],
                            "name": "Color"
                        },
                        "decl": "enum Color {\n  RED = 50,\n  BLUE,\n  WHITE\n};\n",
                        "name": "Color",
                        "options": {},
                        "typemap_name": "Class2::Color",
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "C_enum": "SCO_Class2_Color",
                            "enum_lower": "color",
                            "enum_name": "Color",
                            "enum_upper": "COLOR",
                            "namespace_scope": "Class2::"
                        }
                    }
                ],
                "name": "Class2",
                "options": {},
                "parse_keyword": "class",
                "scope": "Class2::",
                "typemap_name": "Class2",
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "SH_this->",
                    "C_header_filename": "wrapClass2.h",
                    "C_impl_filename": "wrapClass2.cpp",
                    "C_name_api": "Class2",
                    "C_name_scope": "Class2_",
                    "C_type_name": "SCO_Class2",
                    "F_derived_name": "class2",
                    "F_name_api": "class2",
                    "F_name_scope": "class2_",
                    "class_scope": "Class2::",
                    "cxx_class": "Class2",
                    "cxx_type": "Class2",
                    "f_capsule_data_type": "SCO_SHROUD_capsule_data",
                    "file_scope": "Class2",
                    "hnamefunc0": "capsule_data_helper"
                }
            }
        ],
        "copyright": [
            "Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and",
            "other Shroud Project Developers.",
            "See the top-level COPYRIGHT file for details.",
            "",
            "SPDX-License-Identifier: (BSD-3-Clause)",
            ""
        ],
        "enums": [
            {
                "<ENUM>": "****************************************",
                "_fmtmembers": {
                    "BLUE": {
                        "C_enum_member": "SCO_BLUE",
                        "F_enum_member": "blue",
                        "F_value": 11,
                        "enum_member_lower": "blue",
                        "enum_member_name": "BLUE",
                        "enum_member_upper": "BLUE"
                    },
                    "RED": {
                        "C_enum_member": "SCO_RED",
                        "C_value": 10,
                        "F_enum_member": "red",
                        "F_value": 10,
                        "enum_member_lower": "red",
                        "enum_member_name": "RED",
                        "enum_member_upper": "RED"
                    },
                    "WHITE": {
                        "C_enum_member": "SCO_WHITE",
                        "F_enum_member": "white",
                        "F_value": 12,
                        "enum_member_lower": "white",
                        "enum_member_name": "WHITE",
                        "enum_member_upper": "WHITE"
                    }
                },
                "ast": {
                    "members": [
                        {
                            "name": "RED",
                            "value": {
                                "constant": "10"
                            }
                        },
                        {
                            "name": "BLUE"
                        },
                        {
                            "name": "WHITE"
                        }
                    ],
                    "name": "Color"
                },
                "decl": "enum Color {\n  RED = 10,\n  BLUE,\n  WHITE\n};\n",
                "name": "Color",
                "options": {},
                "typemap_name": "Color",
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "C_enum": "SCO_Color",
                    "enum_lower": "color",
                    "enum_name": "Color",
                    "enum_upper": "COLOR"
                }
            },
            {
                "<ENUM>": "****************************************",
                "_fmtmembers": {
                    "BLUE": {
                        "C_enum_member": "SCO_ns3_BLUE",
                        "F_enum_member": "ns3_blue",
                        "F_value": 71,
                        "enum_member_lower": "blue",
                        "enum_member_name": "BLUE",
                        "enum_member_upper": "BLUE"
                    },
                    "RED": {
                        "C_enum_member": "SCO_ns3_RED",
                        "C_value": 70,
                        "F_enum_member": "ns3_red",
                        "F_value": 70,
                        "enum_member_lower": "red",
                        "enum_member_name": "RED",
                        "enum_member_upper": "RED"
                    },
                    "WHITE": {
                        "C_enum_member": "SCO_ns3_WHITE",
                        "F_enum_member": "ns3_white",
                        "F_value": 72,
                        "enum_member_lower": "white",
                        "enum_member_name": "WHITE",
                        "enum_member_upper": "WHITE"
                    }
                },
                "ast": {
                    "members": [
                        {
                            "name": "RED",
                            "value": {
                                "constant": "70"
                            }
                        },
                        {
                            "name": "BLUE"
                        },
                        {
                            "name": "WHITE"
                        }
                    ],
                    "name": "Color"
                },
                "decl": "enum Color {\n  RED = 70,\n  BLUE,\n  WHITE\n};\n",
                "name": "Color",
                "options": {},
                "typemap_name": "ns3::Color",
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "C_enum": "SCO_ns3_Color",
                    "enum_lower": "color",
                    "enum_name": "Color",
                    "enum_upper": "COLOR"
                }
            },
            {
                "<ENUM>": "****************************************",
                "_fmtmembers": {
                    "BLUE": {
                        "C_enum_member": "SCO_ColorEnum_BLUE",
                        "C_name_scope": "ColorEnum_",
                        "F_enum_member": "colorenum_blue",
                        "F_name_scope": "colorenum_",
                        "F_value": 61,
                        "enum_member_lower": "blue",
                        "enum_member_name": "BLUE",
                        "enum_member_upper": "BLUE"
                    },
                    "RED": {
                        "C_enum_member": "SCO_ColorEnum_RED",
                        "C_name_scope": "ColorEnum_",
                        "C_value": 60,
                        "F_enum_member": "colorenum_red",
                        "F_name_scope": "colorenum_",
                        "F_value": 60,
                        "enum_member_lower": "red",
                        "enum_member_name": "RED",
                        "enum_member_upper": "RED"
                    },
                    "WHITE": {
                        "C_enum_member": "SCO_ColorEnum_WHITE",
                        "C_name_scope": "ColorEnum_",
                        "F_enum_member": "colorenum_white",
                        "F_name_scope": "colorenum_",
                        "F_value": 62,
                        "enum_member_lower": "white",
                        "enum_member_name": "WHITE",
                        "enum_member_upper": "WHITE"
                    }
                },
                "ast": {
                    "members": [
                        {
                            "name": "RED",
                            "value": {
                                "constant": "60"
                            }
                        },
                        {
                            "name": "BLUE"
                        },
                        {
                            "name": "WHITE"
                        }
                    ],
                    "name": "ColorEnum",
                    "scope": "class"
                },
                "decl": "enum class ColorEnum {\n  RED = 60,\n  BLUE,\n  WHITE,\n};\n",
                "name": "ColorEnum",
                "options": {},
                "typemap_name": "ColorEnum",
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "C_enum": "SCO_ColorEnum",
                    "enum_lower": "colorenum",
                    "enum_name": "ColorEnum",
                    "enum_upper": "COLORENUM"
                }
            }
        ],
        "functions": [
            {
                "<FUNCTION>": "0 ****************************************",
                "C_generated_path": [
                    "getter/setter",
                    "arg_to_buffer"
                ],
                "_PTR_F_C_index": "2",
                "_generated": "getter/setter",
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "deref": "pointer",
                            "dimension": [
                                {
                                    "name": "nitems"
                                }
                            ],
                            "intent": "getter",
                            "struct": "ns3_DataPointer"
                        },
                        "name": "DataPointer_get_items",
                        "params": [
                            {
                                "declarator": {
                                    "metaattrs": {
                                        "intent": "in",
                                        "struct": "ns3_DataPointer"
                                    },
                                    "name": "SH_this",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "ns3::DataPointer"
                                },
                                "specifier": [
                                    "ns3::DataPointer"
                                ],
                                "typemap_name": "ns3::DataPointer"
                            }
                        ],
                        "pointer": [
                            {
                                "ptr": "*"
                            }
                        ],
                        "typemap_name": "int"
                    },
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int * DataPointer_get_items(ns3::DataPointer *SH_this)",
                "declgen": "int * DataPointer_get_items(ns3::DataPointer * SH_this)",
                "name": "DataPointer_get_items",
                "options": {},
                "user_fmt": {
                    "field_name": "items",
                    "struct_name": "DataPointer",
                    "wrapped_name": "items"
                },
                "wrap": {
                    "fortran": true
                },
                "zz_fmtdict": {
                    "C_name_api": "DataPointer_get_items",
                    "F_C_call": "c_data_pointer_get_items_bufferify",
                    "F_arg_c_call": "SH_this,\t SHT_rv_cdesc",
                    "F_arguments": "SH_this",
                    "F_name_api": "data_pointer_get_items",
                    "F_name_function": "data_pointer_get_items",
                    "F_name_generic": "data_pointer_get_items",
                    "F_name_impl": "data_pointer_get_items",
                    "F_result_clause": "\fresult(SHT_rv)",
                    "F_subprogram": "function",
                    "field_name": "items",
                    "function_name": "DataPointer_get_items",
                    "struct_name": "DataPointer",
                    "wrapped_name": "items"
                },
                "zz_fmtresult": {
                    "fmtf": {
                        "c_var": "SHT_rv",
                        "c_var_cdesc": "SHT_rv_cdesc",
                        "cxx_type": "int",
                        "f_array_allocate": "(SHT_rv_cdesc%shape(1))",
                        "f_array_shape": ",\t SHT_rv_cdesc%shape(1:1)",
                        "f_assumed_shape": "(:)",
                        "f_cdesc_shape": "\nSHT_rv_cdesc%shape(1:1) = shape(SHT_rv)",
                        "f_intent": "OUT",
                        "f_kind": "C_INT",
                        "f_type": "integer(C_INT)",
                        "f_var": "SHT_rv",
                        "hnamefunc0": "array_context",
                        "rank": "1",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "f_getter_native_*_cdesc_pointer",
                        "stmt1": "f_getter_native_*_cdesc_pointer",
                        "stmtc0": "c_getter_native_*_cdesc_pointer",
                        "stmtc1": "c_getter_native_*_cdesc"
                    }
                }
            },
            {
                "<FUNCTION>": "2 ****************************************",
                "_generated": "arg_to_buffer",
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "api": "cdesc",
                            "deref": "pointer",
                            "dimension": [
                                {
                                    "name": "nitems"
                                }
                            ],
                            "intent": "getter",
                            "struct": "ns3_DataPointer"
                        },
                        "name": "DataPointer_get_items",
                        "params": [
                            {
                                "declarator": {
                                    "metaattrs": {
                                        "intent": "in",
                                        "struct": "ns3_DataPointer"
                                    },
                                    "name": "SH_this",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "ns3::DataPointer"
                                },
                                "specifier": [
                                    "ns3::DataPointer"
                                ],
                                "typemap_name": "ns3::DataPointer"
                            }
                        ],
                        "pointer": [
                            {
                                "ptr": "*"
                            }
                        ],
                        "typemap_name": "int"
                    },
                    "specifier": [
                        "int"
                    ],
                    "typemap_name": "int"
                },
                "decl": "int * DataPointer_get_items(ns3::DataPointer *SH_this)",
                "declgen": "int * DataPointer_get_items(ns3::DataPointer * SH_this)",
                "name": "DataPointer_get_items",
                "options": {},
                "splicer_group": "buf",
                "user_fmt": {
                    "field_name": "items",
                    "struct_name": "DataPointer",
                    "wrapped_name": "items"
                },
                "wrap": {
                    "c": true,
                    "f_c": true
                },
                "zz_fmtargs": {
                    "SH_this": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_type": "SCO_datapointer",
                            "c_var": "SH_this",
                            "cfi_type": "CFI_type_struct",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "SHCXX_SH_this",
                            "cxx_type": "ns3::DataPointer",
                            "cxx_var": "SHCXX_SH_this",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt0": "c_in_struct_*",
                            "stmt1": "c_in_struct"
                        },
                        "fmtf": {
                            "F_C_var": "SH_this",
                            "c_var": "SH_this",
                            "f_intent": "IN",
                            "f_kind": "data_pointer",
                            "f_type": "type(data_pointer)",
                            "f_var": "SH_this",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt0": "f_in_struct_*",
                            "stmt1": "f_default",
                            "stmtc0": "c_in_struct_*",
                            "stmtc1": "c_in_struct"
                        }
                    }
                },
                "zz_fmtdict": {
                    "CXX_this": "SHCXX_SH_this",
                    "C_call_list": "SHCXX_SH_this",
                    "C_name": "SCO_DataPointer_get_items_bufferify",
                    "C_name_api": "DataPointer_get_items",
                    "C_prototype": "SCO_datapointer * SH_this,\t SCO_SHROUD_array *SHT_rv_cdesc",
                    "C_return_type": "void",
                    "F_C_arguments": "SH_this,\t SHT_rv",
                    "F_C_name": "c_data_pointer_get_items_bufferify",
                    "F_C_result_clause": "",
                    "F_C_subprogram": "subroutine",
                    "F_name_api": "data_pointer_get_items",
                    "cxx_rv_decl": "int * SHC_rv",
                    "field_name": "items",
                    "function_name": "DataPointer_get_items",
                    "function_suffix": "_bufferify",
                    "struct_name": "DataPointer",
                    "wrapped_name": "items"
                },
                "zz_fmtresult": {
                    "fmtc": {
                        "c_array_shape": "\nSHT_rv_cdesc->shape[0] = SH_this->nitems;",
                        "c_array_size": "SHT_rv_cdesc->shape[0]",
                        "c_array_size2": "SH_this->nitems",
                        "c_const": "",
                        "c_type": "int",
                        "c_var": "SHC_rv",
                        "c_var_cdesc": "SHT_rv_cdesc",
                        "cfi_type": "CFI_type_int",
                        "cxx_addr": "",
                        "cxx_member": "->",
                        "cxx_type": "int",
                        "cxx_var": "SHC_rv",
                        "hnamefunc0": "ShroudTypeDefines",
                        "hnamefunc1": "array_context",
                        "idtor": "0",
                        "rank": "1",
                        "sh_type": "SH_TYPE_INT",
                        "stmt0": "c_getter_native_*_cdesc_pointer",
                        "stmt1": "c_getter_native_*_cdesc"
                    },
                    "fmtf": {
                        "F_C_var": "SHT_rv",
                        "c_var": "SHT_rv",
                        "c_var_cdesc": "SHT_rv_cdesc",
                        "f_array_allocate": "(nitems)",
                        "f_assumed_shape": "(:)",
                        "f_intent": "OUT",
                        "f_kind": "C_INT",
                        "f_type": "integer(C_INT)",
                        "f_var": "SHT_rv",
                        "rank": "1",
                        "sh_type": "SH_TYPE_INT"
                    }
                }
            },
            {
                "<FUNCTION>": "1 ****************************************",
                "C_generated_path": [
                    "getter/setter"
                ],
                "_generated": "getter/setter",
                "ast": {
                    "declarator": {
                        "metaattrs": {
                            "intent": "setter"
                        },
                        "name": "DataPointer_set_items",
                        "params": [
                            {
                                "declarator": {
                                    "metaattrs": {
                                        "intent": "inout",
                                        "struct": "ns3_DataPointer"
                                    },
                                    "name": "SH_this",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "ns3::DataPointer"
                                },
                                "specifier": [
                                    "ns3::DataPointer"
                                ],
                                "typemap_name": "ns3::DataPointer"
                            },
                            {
                                "declarator": {
                                    "attrs": {
                                        "intent": "in",
                                        "rank": 1
                                    },
                                    "metaattrs": {
                                        "dimension": [
                                            {
                                                "name": "nitems"
                                            }
                                        ],
                                        "intent": "setter"
                                    },
                                    "name": "val",
                                    "pointer": [
                                        {
                                            "ptr": "*"
                                        }
                                    ],
                                    "typemap_name": "int"
                                },
                                "specifier": [
                                    "int"
                                ],
                                "typemap_name": "int"
                            }
                        ],
                        "typemap_name": "void"
                    },
                    "specifier": [
                        "void"
                    ],
                    "typemap_name": "void"
                },
                "decl": "void DataPointer_set_items(ns3::DataPointer *SH_this,int * val)",
                "declgen": "void DataPointer_set_items(ns3::DataPointer * SH_this, int * val +intent(in)+rank(1))",
                "name": "DataPointer_set_items",
                "options": {},
                "user_fmt": {
                    "field_name": "items",
                    "struct_name": "DataPointer",
                    "wrapped_name": "items"
                },
                "wrap": {
                    "c": true,
                    "f_c": true,
                    "fortran": true
                },
                "zz_fmtargs": {
                    "SH_this": {
                        "fmtc": {
                            "c_addr": "",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_type": "SCO_datapointer",
                            "c_var": "SH_this",
                            "cfi_type": "CFI_type_struct",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "SHCXX_SH_this",
                            "cxx_type": "ns3::DataPointer",
                            "cxx_var": "SHCXX_SH_this",
                            "idtor": "0",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt0": "c_inout_struct_*",
                            "stmt1": "c_inout_struct"
                        },
                        "fmtf": {
                            "F_C_var": "SH_this",
                            "c_var": "SH_this",
                            "f_intent": "INOUT",
                            "f_kind": "data_pointer",
                            "f_type": "type(data_pointer)",
                            "f_var": "SH_this",
                            "sh_type": "SH_TYPE_STRUCT",
                            "stmt0": "f_inout_struct_*",
                            "stmt1": "f_default",
                            "stmtc0": "c_inout_struct_*",
                            "stmtc1": "c_inout_struct"
                        }
                    },
                    "val": {
                        "fmtc": {
                            "c_addr": "",
                            "c_array_size2": "nitems",
                            "c_const": "",
                            "c_deref": "*",
                            "c_member": "->",
                            "c_type": "int",
                            "c_var": "val",
                            "cfi_type": "CFI_type_int",
                            "cxx_addr": "",
                            "cxx_member": "->",
                            "cxx_nonconst_ptr": "val",
                            "cxx_type": "int",
                            "cxx_var": "val",
                            "idtor": "0",
                            "rank": "1",
                            "sh_type": "SH_TYPE_INT",
                            "stmt0": "c_setter_native_*",
                            "stmt1": "c_setter_native_*"
                        },
                        "fmtf": {
                            "F_C_var": "val",
                            "c_var": "val",
                            "f_assumed_shape": "(:)",
                            "f_c_dimension": "(*)",
                            "f_intent": "IN",
                            "f_kind": "C_INT",
                            "f_type": "integer(C_INT)",
                            "f_var": "val",
                            "rank": "1",
                            "sh_type": "SH_TYPE_INT",
                            "size": "size(val)",
                            "stmt0": "f_setter_native_*",
                            "stmt1": "f_setter_native",
                            "stmtc0": "c_setter_native_*",
                            "stmtc1": "c_setter_native_*"
                        }
                    }
                },
                "zz_fmtdict": {
                    "CXX_this": "SHCXX_SH_this",
                    "C_call_list": "SHCXX_SH_this,\t val",
                    "C_name": "SCO_DataPointer_set_items",
                    "C_name_api": "DataPointer_set_items",
                    "C_prototype": "SCO_datapointer * SH_this,\t int * val",
                    "C_return_type": "void",
                    "F_C_arguments": "SH_this,\t val",
                    "F_C_call": "c_data_pointer_set_items",
                    "F_C_name": "data_pointer_set_items",
                    "F_C_subprogram": "subroutine",
                    "F_arg_c_call": "SH_this,\t val",
                    "F_arguments": "SH_this,\t val",
                    "F_name_api": "data_pointer_set_items",
                    "F_name_function": "data_pointer_set_items",
                    "F_name_generic": "data_pointer_set_items",
                    "F_name_impl": "data_pointer_set_items",
                    "F_subprogram": "subroutine",
                    "field_name": "items",
                    "function_name": "DataPointer_set_items",
                    "stmt0": "f_setter",
                    "stmt1": "f_setter",
                    "stmtc0": "c_setter",
                    "stmtc1": "c_setter",
                    "struct_name": "DataPointer",
                    "wrapped_name": "items"
                }
            }
        ],
        "language": "cxx",
        "namespaces": [
            {
                "<NAMESPACE>": "****************************************",
                "classes": [
                    {
                        "<CLASS>": "****************************************",
                        "cxx_header": [],
                        "name": "DataPointer",
                        "options": {},
                        "parse_keyword": "struct",
                        "scope": "ns1::DataPointer::",
                        "typemap_name": "ns1::DataPointer",
                        "variables": [
                            {
                                "<VARIABLE>": "****************************************",
                                "ast": {
                                    "declarator": {
                                        "name": "nitems",
                                        "typemap_name": "int"
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                },
                                "name": "nitems",
                                "options": {},
                                "wrap": {
                                    "c": true,
                                    "fortran": true
                                },
                                "zz_fmtdict": {
                                    "c_type": "int",
                                    "cxx_type": "int",
                                    "field_name": "nitems",
                                    "variable_lower": "nitems",
                                    "variable_name": "nitems",
                                    "variable_upper": "NITEMS"
                                }
                            },
                            {
                                "<VARIABLE>": "****************************************",
                                "ast": {
                                    "declarator": {
                                        "attrs": {
                                            "dimension": "nitems"
                                        },
                                        "metaattrs": {
                                            "dimension": [
                                                {
                                                    "name": "nitems"
                                                }
                                            ]
                                        },
                                        "name": "items",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            }
                                        ],
                                        "typemap_name": "int"
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                },
                                "name": "items",
                                "options": {},
                                "wrap": {
                                    "c": true,
                                    "fortran": true
                                },
                                "zz_fmtdict": {
                                    "c_type": "int",
                                    "cxx_type": "int",
                                    "field_name": "items",
                                    "variable_lower": "items",
                                    "variable_name": "items",
                                    "variable_upper": "ITEMS"
                                }
                            }
                        ],
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "C_header_filename": "wrapns1_DataPointer.h",
                            "C_impl_filename": "wrapns1_DataPointer.cpp",
                            "C_name_api": "DataPointer",
                            "C_name_scope": "ns1_DataPointer_",
                            "C_type_name": "SCO_datapointer",
                            "F_derived_name": "data_pointer",
                            "F_name_api": "data_pointer",
                            "F_name_scope": "data_pointer_",
                            "PY_struct_array_descr_create": "PY_DataPointer_create_array_descr",
                            "PY_struct_array_descr_name": "DataPointer_dtype",
                            "PY_struct_array_descr_variable": "PY_DataPointer_array_descr",
                            "class_scope": "DataPointer::",
                            "cxx_class": "DataPointer",
                            "cxx_type": "DataPointer",
                            "file_scope": "ns1_DataPointer"
                        }
                    }
                ],
                "enums": [
                    {
                        "<ENUM>": "****************************************",
                        "_fmtmembers": {
                            "BLUE": {
                                "C_enum_member": "SCO_ns1_BLUE",
                                "F_enum_member": "blue",
                                "F_value": 21,
                                "enum_member_lower": "blue",
                                "enum_member_name": "BLUE",
                                "enum_member_upper": "BLUE"
                            },
                            "RED": {
                                "C_enum_member": "SCO_ns1_RED",
                                "C_value": 20,
                                "F_enum_member": "red",
                                "F_value": 20,
                                "enum_member_lower": "red",
                                "enum_member_name": "RED",
                                "enum_member_upper": "RED"
                            },
                            "WHITE": {
                                "C_enum_member": "SCO_ns1_WHITE",
                                "F_enum_member": "white",
                                "F_value": 22,
                                "enum_member_lower": "white",
                                "enum_member_name": "WHITE",
                                "enum_member_upper": "WHITE"
                            }
                        },
                        "ast": {
                            "members": [
                                {
                                    "name": "RED",
                                    "value": {
                                        "constant": "20"
                                    }
                                },
                                {
                                    "name": "BLUE"
                                },
                                {
                                    "name": "WHITE"
                                }
                            ],
                            "name": "Color"
                        },
                        "decl": "enum Color {\n  RED = 20,\n  BLUE,\n  WHITE\n};\n",
                        "name": "Color",
                        "options": {},
                        "typemap_name": "ns1::Color",
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "C_enum": "SCO_ns1_Color",
                            "enum_lower": "color",
                            "enum_name": "Color",
                            "enum_upper": "COLOR"
                        }
                    }
                ],
                "functions": [
                    {
                        "<FUNCTION>": "3 ****************************************",
                        "C_generated_path": [
                            "getter/setter",
                            "arg_to_buffer"
                        ],
                        "_PTR_F_C_index": "5",
                        "_generated": "getter/setter",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "deref": "pointer",
                                    "dimension": [
                                        {
                                            "name": "nitems"
                                        }
                                    ],
                                    "intent": "getter",
                                    "struct": "ns1_DataPointer"
                                },
                                "name": "DataPointer_get_items",
                                "params": [
                                    {
                                        "declarator": {
                                            "metaattrs": {
                                                "intent": "in",
                                                "struct": "ns1_DataPointer"
                                            },
                                            "name": "SH_this",
                                            "pointer": [
                                                {
                                                    "ptr": "*"
                                                }
                                            ],
                                            "typemap_name": "ns1::DataPointer"
                                        },
                                        "specifier": [
                                            "ns1::DataPointer"
                                        ],
                                        "typemap_name": "ns1::DataPointer"
                                    }
                                ],
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ],
                                "typemap_name": "int"
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "decl": "int * DataPointer_get_items(ns1::DataPointer *SH_this)",
                        "declgen": "int * DataPointer_get_items(ns1::DataPointer * SH_this)",
                        "name": "DataPointer_get_items",
                        "options": {},
                        "user_fmt": {
                            "field_name": "items",
                            "struct_name": "DataPointer",
                            "wrapped_name": "items"
                        },
                        "wrap": {
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "C_name_api": "DataPointer_get_items",
                            "F_C_call": "c_data_pointer_get_items_bufferify",
                            "F_arg_c_call": "SH_this,\t SHT_rv_cdesc",
                            "F_arguments": "SH_this",
                            "F_name_api": "data_pointer_get_items",
                            "F_name_function": "data_pointer_get_items",
                            "F_name_generic": "data_pointer_get_items",
                            "F_name_impl": "data_pointer_get_items",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "field_name": "items",
                            "function_name": "DataPointer_get_items",
                            "struct_name": "DataPointer",
                            "wrapped_name": "items"
                        },
                        "zz_fmtresult": {
                            "fmtf": {
                                "c_var": "SHT_rv",
                                "c_var_cdesc": "SHT_rv_cdesc",
                                "cxx_type": "int",
                                "f_array_allocate": "(SHT_rv_cdesc%shape(1))",
                                "f_array_shape": ",\t SHT_rv_cdesc%shape(1:1)",
                                "f_assumed_shape": "(:)",
                                "f_cdesc_shape": "\nSHT_rv_cdesc%shape(1:1) = shape(SHT_rv)",
                                "f_intent": "OUT",
                                "f_kind": "C_INT",
                                "f_type": "integer(C_INT)",
                                "f_var": "SHT_rv",
                                "hnamefunc0": "array_context",
                                "rank": "1",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "f_getter_native_*_cdesc_pointer",
                                "stmt1": "f_getter_native_*_cdesc_pointer",
                                "stmtc0": "c_getter_native_*_cdesc_pointer",
                                "stmtc1": "c_getter_native_*_cdesc"
                            }
                        }
                    },
                    {
                        "<FUNCTION>": "5 ****************************************",
                        "_PTR_C_CXX_index": "3",
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "api": "cdesc",
                                    "deref": "pointer",
                                    "dimension": [
                                        {
                                            "name": "nitems"
                                        }
                                    ],
                                    "intent": "getter",
                                    "struct": "ns1_DataPointer"
                                },
                                "name": "DataPointer_get_items",
                                "params": [
                                    {
                                        "declarator": {
                                            "metaattrs": {
                                                "intent": "in",
                                                "struct": "ns1_DataPointer"
                                            },
                                            "name": "SH_this",
                                            "pointer": [
                                                {
                                                    "ptr": "*"
                                                }
                                            ],
                                            "typemap_name": "ns1::DataPointer"
                                        },
                                        "specifier": [
                                            "ns1::DataPointer"
                                        ],
                                        "typemap_name": "ns1::DataPointer"
                                    }
                                ],
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ],
                                "typemap_name": "int"
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "decl": "int * DataPointer_get_items(ns1::DataPointer *SH_this)",
                        "declgen": "int * DataPointer_get_items(ns1::DataPointer * SH_this)",
                        "name": "DataPointer_get_items",
                        "options": {},
                        "splicer_group": "buf",
                        "user_fmt": {
                            "field_name": "items",
                            "struct_name": "DataPointer",
                            "wrapped_name": "items"
                        },
                        "wrap": {
                            "c": true,
                            "f_c": true
                        },
                        "zz_fmtargs": {
                            "SH_this": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_type": "SCO_datapointer",
                                    "c_var": "SH_this",
                                    "cfi_type": "CFI_type_struct",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "SHCXX_SH_this",
                                    "cxx_type": "ns1::DataPointer",
                                    "cxx_var": "SHCXX_SH_this",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_STRUCT",
                                    "stmt0": "c_in_struct_*",
                                    "stmt1": "c_in_struct"
                                },
                                "fmtf": {
                                    "F_C_var": "SH_this",
                                    "c_var": "SH_this",
                                    "f_intent": "IN",
                                    "f_kind": "data_pointer",
                                    "f_type": "type(data_pointer)",
                                    "f_var": "SH_this",
                                    "sh_type": "SH_TYPE_STRUCT",
                                    "stmt0": "f_in_struct_*",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_in_struct_*",
                                    "stmtc1": "c_in_struct"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "CXX_this": "SHCXX_SH_this",
                            "C_call_list": "SHCXX_SH_this",
                            "C_name": "SCO_ns1_DataPointer_get_items_bufferify",
                            "C_name_api": "DataPointer_get_items",
                            "C_prototype": "SCO_datapointer * SH_this,\t SCO_SHROUD_array *SHT_rv_cdesc",
                            "C_return_type": "void",
                            "F_C_arguments": "SH_this,\t SHT_rv",
                            "F_C_name": "c_data_pointer_get_items_bufferify",
                            "F_C_result_clause": "",
                            "F_C_subprogram": "subroutine",
                            "F_name_api": "data_pointer_get_items",
                            "cxx_rv_decl": "int * SHC_rv",
                            "field_name": "items",
                            "function_name": "DataPointer_get_items",
                            "function_suffix": "_bufferify",
                            "struct_name": "DataPointer",
                            "wrapped_name": "items"
                        },
                        "zz_fmtresult": {
                            "fmtc": {
                                "c_array_shape": "\nSHT_rv_cdesc->shape[0] = SH_this->nitems;",
                                "c_array_size": "SHT_rv_cdesc->shape[0]",
                                "c_array_size2": "SH_this->nitems",
                                "c_const": "",
                                "c_type": "int",
                                "c_var": "SHC_rv",
                                "c_var_cdesc": "SHT_rv_cdesc",
                                "cfi_type": "CFI_type_int",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_type": "int",
                                "cxx_var": "SHC_rv",
                                "hnamefunc0": "ShroudTypeDefines",
                                "hnamefunc1": "array_context",
                                "idtor": "0",
                                "rank": "1",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "c_getter_native_*_cdesc_pointer",
                                "stmt1": "c_getter_native_*_cdesc"
                            },
                            "fmtf": {
                                "F_C_var": "SHT_rv",
                                "c_var": "SHT_rv",
                                "c_var_cdesc": "SHT_rv_cdesc",
                                "f_array_allocate": "(nitems)",
                                "f_assumed_shape": "(:)",
                                "f_intent": "OUT",
                                "f_kind": "C_INT",
                                "f_type": "integer(C_INT)",
                                "f_var": "SHT_rv",
                                "rank": "1",
                                "sh_type": "SH_TYPE_INT"
                            }
                        }
                    },
                    {
                        "<FUNCTION>": "4 ****************************************",
                        "C_generated_path": [
                            "getter/setter"
                        ],
                        "_generated": "getter/setter",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "setter"
                                },
                                "name": "DataPointer_set_items",
                                "params": [
                                    {
                                        "declarator": {
                                            "metaattrs": {
                                                "intent": "inout",
                                                "struct": "ns1_DataPointer"
                                            },
                                            "name": "SH_this",
                                            "pointer": [
                                                {
                                                    "ptr": "*"
                                                }
                                            ],
                                            "typemap_name": "ns1::DataPointer"
                                        },
                                        "specifier": [
                                            "ns1::DataPointer"
                                        ],
                                        "typemap_name": "ns1::DataPointer"
                                    },
                                    {
                                        "declarator": {
                                            "attrs": {
                                                "intent": "in",
                                                "rank": 1
                                            },
                                            "metaattrs": {
                                                "dimension": [
                                                    {
                                                        "name": "nitems"
                                                    }
                                                ],
                                                "intent": "setter"
                                            },
                                            "name": "val",
                                            "pointer": [
                                                {
                                                    "ptr": "*"
                                                }
                                            ],
                                            "typemap_name": "int"
                                        },
                                        "specifier": [
                                            "int"
                                        ],
                                        "typemap_name": "int"
                                    }
                                ],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void DataPointer_set_items(ns1::DataPointer *SH_this,int * val)",
                        "declgen": "void DataPointer_set_items(ns1::DataPointer * SH_this, int * val +intent(in)+rank(1))",
                        "name": "DataPointer_set_items",
                        "options": {},
                        "user_fmt": {
                            "field_name": "items",
                            "struct_name": "DataPointer",
                            "wrapped_name": "items"
                        },
                        "wrap": {
                            "c": true,
                            "f_c": true,
                            "fortran": true
                        },
                        "zz_fmtargs": {
                            "SH_this": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_type": "SCO_datapointer",
                                    "c_var": "SH_this",
                                    "cfi_type": "CFI_type_struct",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "SHCXX_SH_this",
                                    "cxx_type": "ns1::DataPointer",
                                    "cxx_var": "SHCXX_SH_this",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_STRUCT",
                                    "stmt0": "c_inout_struct_*",
                                    "stmt1": "c_inout_struct"
                                },
                                "fmtf": {
                                    "F_C_var": "SH_this",
                                    "c_var": "SH_this",
                                    "f_intent": "INOUT",
                                    "f_kind": "data_pointer",
                                    "f_type": "type(data_pointer)",
                                    "f_var": "SH_this",
                                    "sh_type": "SH_TYPE_STRUCT",
                                    "stmt0": "f_inout_struct_*",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_inout_struct_*",
                                    "stmtc1": "c_inout_struct"
                                }
                            },
                            "val": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_array_size2": "nitems",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_type": "int",
                                    "c_var": "val",
                                    "cfi_type": "CFI_type_int",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "val",
                                    "cxx_type": "int",
                                    "cxx_var": "val",
                                    "idtor": "0",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_setter_native_*",
                                    "stmt1": "c_setter_native_*"
                                },
                                "fmtf": {
                                    "F_C_var": "val",
                                    "c_var": "val",
                                    "f_assumed_shape": "(:)",
                                    "f_c_dimension": "(*)",
                                    "f_intent": "IN",
                                    "f_kind": "C_INT",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "val",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_INT",
                                    "size": "size(val)",
                                    "stmt0": "f_setter_native_*",
                                    "stmt1": "f_setter_native",
                                    "stmtc0": "c_setter_native_*",
                                    "stmtc1": "c_setter_native_*"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "CXX_this": "SHCXX_SH_this",
                            "C_call_list": "SHCXX_SH_this,\t val",
                            "C_name": "SCO_ns1_DataPointer_set_items",
                            "C_name_api": "DataPointer_set_items",
                            "C_prototype": "SCO_datapointer * SH_this,\t int * val",
                            "C_return_type": "void",
                            "F_C_arguments": "SH_this,\t val",
                            "F_C_call": "c_data_pointer_set_items",
                            "F_C_name": "data_pointer_set_items",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "SH_this,\t val",
                            "F_arguments": "SH_this,\t val",
                            "F_name_api": "data_pointer_set_items",
                            "F_name_function": "data_pointer_set_items",
                            "F_name_generic": "data_pointer_set_items",
                            "F_name_impl": "data_pointer_set_items",
                            "F_subprogram": "subroutine",
                            "field_name": "items",
                            "function_name": "DataPointer_set_items",
                            "stmt0": "f_setter",
                            "stmt1": "f_setter",
                            "stmtc0": "c_setter",
                            "stmtc1": "c_setter",
                            "struct_name": "DataPointer",
                            "wrapped_name": "items"
                        }
                    }
                ],
                "name": "ns1",
                "options": {},
                "scope": "ns1::",
                "scope_file": [
                    "scope",
                    "ns1"
                ],
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "ns1::",
                    "C_header_filename": "wrapscope_ns1.h",
                    "C_impl_filename": "wrapscope_ns1.cpp",
                    "C_name_api": "ns1",
                    "C_name_scope": "ns1_",
                    "F_impl_filename": "wrapfscope_ns1.f",
                    "F_module_name": "scope_ns1_mod",
                    "F_name_api": "ns1",
                    "LUA_this_call": "ns1::",
                    "PY_module_init": "scope_ns1",
                    "PY_module_name": "ns1",
                    "PY_module_scope": "scope.ns1",
                    "PY_this_call": "ns1::",
                    "file_scope": "scope_ns1",
                    "namespace_scope": "ns1::"
                }
            },
            {
                "<NAMESPACE>": "****************************************",
                "classes": [
                    {
                        "<CLASS>": "****************************************",
                        "cxx_header": [],
                        "name": "DataPointer",
                        "options": {},
                        "parse_keyword": "struct",
                        "scope": "ns2::DataPointer::",
                        "typemap_name": "ns2::DataPointer",
                        "variables": [
                            {
                                "<VARIABLE>": "****************************************",
                                "ast": {
                                    "declarator": {
                                        "name": "nitems",
                                        "typemap_name": "int"
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                },
                                "name": "nitems",
                                "options": {},
                                "wrap": {
                                    "c": true,
                                    "fortran": true
                                },
                                "zz_fmtdict": {
                                    "c_type": "int",
                                    "cxx_type": "int",
                                    "field_name": "nitems",
                                    "variable_lower": "nitems",
                                    "variable_name": "nitems",
                                    "variable_upper": "NITEMS"
                                }
                            },
                            {
                                "<VARIABLE>": "****************************************",
                                "ast": {
                                    "declarator": {
                                        "attrs": {
                                            "dimension": "nitems"
                                        },
                                        "metaattrs": {
                                            "dimension": [
                                                {
                                                    "name": "nitems"
                                                }
                                            ]
                                        },
                                        "name": "items",
                                        "pointer": [
                                            {
                                                "ptr": "*"
                                            }
                                        ],
                                        "typemap_name": "int"
                                    },
                                    "specifier": [
                                        "int"
                                    ],
                                    "typemap_name": "int"
                                },
                                "name": "items",
                                "options": {},
                                "wrap": {
                                    "c": true,
                                    "fortran": true
                                },
                                "zz_fmtdict": {
                                    "c_type": "int",
                                    "cxx_type": "int",
                                    "field_name": "items",
                                    "variable_lower": "items",
                                    "variable_name": "items",
                                    "variable_upper": "ITEMS"
                                }
                            }
                        ],
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "C_header_filename": "wrapns2_DataPointer.h",
                            "C_impl_filename": "wrapns2_DataPointer.cpp",
                            "C_name_api": "DataPointer",
                            "C_name_scope": "ns2_DataPointer_",
                            "C_type_name": "SCO_datapointer",
                            "F_derived_name": "data_pointer",
                            "F_name_api": "data_pointer",
                            "F_name_scope": "data_pointer_",
                            "PY_struct_array_descr_create": "PY_DataPointer_create_array_descr",
                            "PY_struct_array_descr_name": "DataPointer_dtype",
                            "PY_struct_array_descr_variable": "PY_DataPointer_array_descr",
                            "class_scope": "DataPointer::",
                            "cxx_class": "DataPointer",
                            "cxx_type": "DataPointer",
                            "file_scope": "ns2_DataPointer"
                        }
                    }
                ],
                "enums": [
                    {
                        "<ENUM>": "****************************************",
                        "_fmtmembers": {
                            "BLUE": {
                                "C_enum_member": "SCO_ns2_BLUE",
                                "F_enum_member": "blue",
                                "F_value": 31,
                                "enum_member_lower": "blue",
                                "enum_member_name": "BLUE",
                                "enum_member_upper": "BLUE"
                            },
                            "RED": {
                                "C_enum_member": "SCO_ns2_RED",
                                "C_value": 30,
                                "F_enum_member": "red",
                                "F_value": 30,
                                "enum_member_lower": "red",
                                "enum_member_name": "RED",
                                "enum_member_upper": "RED"
                            },
                            "WHITE": {
                                "C_enum_member": "SCO_ns2_WHITE",
                                "F_enum_member": "white",
                                "F_value": 32,
                                "enum_member_lower": "white",
                                "enum_member_name": "WHITE",
                                "enum_member_upper": "WHITE"
                            }
                        },
                        "ast": {
                            "members": [
                                {
                                    "name": "RED",
                                    "value": {
                                        "constant": "30"
                                    }
                                },
                                {
                                    "name": "BLUE"
                                },
                                {
                                    "name": "WHITE"
                                }
                            ],
                            "name": "Color"
                        },
                        "decl": "enum Color {\n  RED = 30,\n  BLUE,\n  WHITE\n};\n",
                        "name": "Color",
                        "options": {},
                        "typemap_name": "ns2::Color",
                        "wrap": {
                            "c": true,
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "C_enum": "SCO_ns2_Color",
                            "enum_lower": "color",
                            "enum_name": "Color",
                            "enum_upper": "COLOR"
                        }
                    }
                ],
                "functions": [
                    {
                        "<FUNCTION>": "6 ****************************************",
                        "C_generated_path": [
                            "getter/setter",
                            "arg_to_buffer"
                        ],
                        "_PTR_F_C_index": "8",
                        "_generated": "getter/setter",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "deref": "pointer",
                                    "dimension": [
                                        {
                                            "name": "nitems"
                                        }
                                    ],
                                    "intent": "getter",
                                    "struct": "ns2_DataPointer"
                                },
                                "name": "DataPointer_get_items",
                                "params": [
                                    {
                                        "declarator": {
                                            "metaattrs": {
                                                "intent": "in",
                                                "struct": "ns2_DataPointer"
                                            },
                                            "name": "SH_this",
                                            "pointer": [
                                                {
                                                    "ptr": "*"
                                                }
                                            ],
                                            "typemap_name": "ns2::DataPointer"
                                        },
                                        "specifier": [
                                            "ns2::DataPointer"
                                        ],
                                        "typemap_name": "ns2::DataPointer"
                                    }
                                ],
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ],
                                "typemap_name": "int"
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "decl": "int * DataPointer_get_items(ns2::DataPointer *SH_this)",
                        "declgen": "int * DataPointer_get_items(ns2::DataPointer * SH_this)",
                        "name": "DataPointer_get_items",
                        "options": {},
                        "user_fmt": {
                            "field_name": "items",
                            "struct_name": "DataPointer",
                            "wrapped_name": "items"
                        },
                        "wrap": {
                            "fortran": true
                        },
                        "zz_fmtdict": {
                            "C_name_api": "DataPointer_get_items",
                            "F_C_call": "c_data_pointer_get_items_bufferify",
                            "F_arg_c_call": "SH_this,\t SHT_rv_cdesc",
                            "F_arguments": "SH_this",
                            "F_name_api": "data_pointer_get_items",
                            "F_name_function": "data_pointer_get_items",
                            "F_name_generic": "data_pointer_get_items",
                            "F_name_impl": "data_pointer_get_items",
                            "F_result_clause": "\fresult(SHT_rv)",
                            "F_subprogram": "function",
                            "field_name": "items",
                            "function_name": "DataPointer_get_items",
                            "struct_name": "DataPointer",
                            "wrapped_name": "items"
                        },
                        "zz_fmtresult": {
                            "fmtf": {
                                "c_var": "SHT_rv",
                                "c_var_cdesc": "SHT_rv_cdesc",
                                "cxx_type": "int",
                                "f_array_allocate": "(SHT_rv_cdesc%shape(1))",
                                "f_array_shape": ",\t SHT_rv_cdesc%shape(1:1)",
                                "f_assumed_shape": "(:)",
                                "f_cdesc_shape": "\nSHT_rv_cdesc%shape(1:1) = shape(SHT_rv)",
                                "f_intent": "OUT",
                                "f_kind": "C_INT",
                                "f_type": "integer(C_INT)",
                                "f_var": "SHT_rv",
                                "hnamefunc0": "array_context",
                                "rank": "1",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "f_getter_native_*_cdesc_pointer",
                                "stmt1": "f_getter_native_*_cdesc_pointer",
                                "stmtc0": "c_getter_native_*_cdesc_pointer",
                                "stmtc1": "c_getter_native_*_cdesc"
                            }
                        }
                    },
                    {
                        "<FUNCTION>": "8 ****************************************",
                        "_PTR_C_CXX_index": "6",
                        "_generated": "arg_to_buffer",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "api": "cdesc",
                                    "deref": "pointer",
                                    "dimension": [
                                        {
                                            "name": "nitems"
                                        }
                                    ],
                                    "intent": "getter",
                                    "struct": "ns2_DataPointer"
                                },
                                "name": "DataPointer_get_items",
                                "params": [
                                    {
                                        "declarator": {
                                            "metaattrs": {
                                                "intent": "in",
                                                "struct": "ns2_DataPointer"
                                            },
                                            "name": "SH_this",
                                            "pointer": [
                                                {
                                                    "ptr": "*"
                                                }
                                            ],
                                            "typemap_name": "ns2::DataPointer"
                                        },
                                        "specifier": [
                                            "ns2::DataPointer"
                                        ],
                                        "typemap_name": "ns2::DataPointer"
                                    }
                                ],
                                "pointer": [
                                    {
                                        "ptr": "*"
                                    }
                                ],
                                "typemap_name": "int"
                            },
                            "specifier": [
                                "int"
                            ],
                            "typemap_name": "int"
                        },
                        "decl": "int * DataPointer_get_items(ns2::DataPointer *SH_this)",
                        "declgen": "int * DataPointer_get_items(ns2::DataPointer * SH_this)",
                        "name": "DataPointer_get_items",
                        "options": {},
                        "splicer_group": "buf",
                        "user_fmt": {
                            "field_name": "items",
                            "struct_name": "DataPointer",
                            "wrapped_name": "items"
                        },
                        "wrap": {
                            "c": true,
                            "f_c": true
                        },
                        "zz_fmtargs": {
                            "SH_this": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_type": "SCO_datapointer",
                                    "c_var": "SH_this",
                                    "cfi_type": "CFI_type_struct",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "SHCXX_SH_this",
                                    "cxx_type": "ns2::DataPointer",
                                    "cxx_var": "SHCXX_SH_this",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_STRUCT",
                                    "stmt0": "c_in_struct_*",
                                    "stmt1": "c_in_struct"
                                },
                                "fmtf": {
                                    "F_C_var": "SH_this",
                                    "c_var": "SH_this",
                                    "f_intent": "IN",
                                    "f_kind": "data_pointer",
                                    "f_type": "type(data_pointer)",
                                    "f_var": "SH_this",
                                    "sh_type": "SH_TYPE_STRUCT",
                                    "stmt0": "f_in_struct_*",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_in_struct_*",
                                    "stmtc1": "c_in_struct"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "CXX_this": "SHCXX_SH_this",
                            "C_call_list": "SHCXX_SH_this",
                            "C_name": "SCO_ns2_DataPointer_get_items_bufferify",
                            "C_name_api": "DataPointer_get_items",
                            "C_prototype": "SCO_datapointer * SH_this,\t SCO_SHROUD_array *SHT_rv_cdesc",
                            "C_return_type": "void",
                            "F_C_arguments": "SH_this,\t SHT_rv",
                            "F_C_name": "c_data_pointer_get_items_bufferify",
                            "F_C_result_clause": "",
                            "F_C_subprogram": "subroutine",
                            "F_name_api": "data_pointer_get_items",
                            "cxx_rv_decl": "int * SHC_rv",
                            "field_name": "items",
                            "function_name": "DataPointer_get_items",
                            "function_suffix": "_bufferify",
                            "struct_name": "DataPointer",
                            "wrapped_name": "items"
                        },
                        "zz_fmtresult": {
                            "fmtc": {
                                "c_array_shape": "\nSHT_rv_cdesc->shape[0] = SH_this->nitems;",
                                "c_array_size": "SHT_rv_cdesc->shape[0]",
                                "c_array_size2": "SH_this->nitems",
                                "c_const": "",
                                "c_type": "int",
                                "c_var": "SHC_rv",
                                "c_var_cdesc": "SHT_rv_cdesc",
                                "cfi_type": "CFI_type_int",
                                "cxx_addr": "",
                                "cxx_member": "->",
                                "cxx_type": "int",
                                "cxx_var": "SHC_rv",
                                "hnamefunc0": "ShroudTypeDefines",
                                "hnamefunc1": "array_context",
                                "idtor": "0",
                                "rank": "1",
                                "sh_type": "SH_TYPE_INT",
                                "stmt0": "c_getter_native_*_cdesc_pointer",
                                "stmt1": "c_getter_native_*_cdesc"
                            },
                            "fmtf": {
                                "F_C_var": "SHT_rv",
                                "c_var": "SHT_rv",
                                "c_var_cdesc": "SHT_rv_cdesc",
                                "f_array_allocate": "(nitems)",
                                "f_assumed_shape": "(:)",
                                "f_intent": "OUT",
                                "f_kind": "C_INT",
                                "f_type": "integer(C_INT)",
                                "f_var": "SHT_rv",
                                "rank": "1",
                                "sh_type": "SH_TYPE_INT"
                            }
                        }
                    },
                    {
                        "<FUNCTION>": "7 ****************************************",
                        "C_generated_path": [
                            "getter/setter"
                        ],
                        "_generated": "getter/setter",
                        "ast": {
                            "declarator": {
                                "metaattrs": {
                                    "intent": "setter"
                                },
                                "name": "DataPointer_set_items",
                                "params": [
                                    {
                                        "declarator": {
                                            "metaattrs": {
                                                "intent": "inout",
                                                "struct": "ns2_DataPointer"
                                            },
                                            "name": "SH_this",
                                            "pointer": [
                                                {
                                                    "ptr": "*"
                                                }
                                            ],
                                            "typemap_name": "ns2::DataPointer"
                                        },
                                        "specifier": [
                                            "ns2::DataPointer"
                                        ],
                                        "typemap_name": "ns2::DataPointer"
                                    },
                                    {
                                        "declarator": {
                                            "attrs": {
                                                "intent": "in",
                                                "rank": 1
                                            },
                                            "metaattrs": {
                                                "dimension": [
                                                    {
                                                        "name": "nitems"
                                                    }
                                                ],
                                                "intent": "setter"
                                            },
                                            "name": "val",
                                            "pointer": [
                                                {
                                                    "ptr": "*"
                                                }
                                            ],
                                            "typemap_name": "int"
                                        },
                                        "specifier": [
                                            "int"
                                        ],
                                        "typemap_name": "int"
                                    }
                                ],
                                "typemap_name": "void"
                            },
                            "specifier": [
                                "void"
                            ],
                            "typemap_name": "void"
                        },
                        "decl": "void DataPointer_set_items(ns2::DataPointer *SH_this,int * val)",
                        "declgen": "void DataPointer_set_items(ns2::DataPointer * SH_this, int * val +intent(in)+rank(1))",
                        "name": "DataPointer_set_items",
                        "options": {},
                        "user_fmt": {
                            "field_name": "items",
                            "struct_name": "DataPointer",
                            "wrapped_name": "items"
                        },
                        "wrap": {
                            "c": true,
                            "f_c": true,
                            "fortran": true
                        },
                        "zz_fmtargs": {
                            "SH_this": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_type": "SCO_datapointer",
                                    "c_var": "SH_this",
                                    "cfi_type": "CFI_type_struct",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "SHCXX_SH_this",
                                    "cxx_type": "ns2::DataPointer",
                                    "cxx_var": "SHCXX_SH_this",
                                    "idtor": "0",
                                    "sh_type": "SH_TYPE_STRUCT",
                                    "stmt0": "c_inout_struct_*",
                                    "stmt1": "c_inout_struct"
                                },
                                "fmtf": {
                                    "F_C_var": "SH_this",
                                    "c_var": "SH_this",
                                    "f_intent": "INOUT",
                                    "f_kind": "data_pointer",
                                    "f_type": "type(data_pointer)",
                                    "f_var": "SH_this",
                                    "sh_type": "SH_TYPE_STRUCT",
                                    "stmt0": "f_inout_struct_*",
                                    "stmt1": "f_default",
                                    "stmtc0": "c_inout_struct_*",
                                    "stmtc1": "c_inout_struct"
                                }
                            },
                            "val": {
                                "fmtc": {
                                    "c_addr": "",
                                    "c_array_size2": "nitems",
                                    "c_const": "",
                                    "c_deref": "*",
                                    "c_member": "->",
                                    "c_type": "int",
                                    "c_var": "val",
                                    "cfi_type": "CFI_type_int",
                                    "cxx_addr": "",
                                    "cxx_member": "->",
                                    "cxx_nonconst_ptr": "val",
                                    "cxx_type": "int",
                                    "cxx_var": "val",
                                    "idtor": "0",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_INT",
                                    "stmt0": "c_setter_native_*",
                                    "stmt1": "c_setter_native_*"
                                },
                                "fmtf": {
                                    "F_C_var": "val",
                                    "c_var": "val",
                                    "f_assumed_shape": "(:)",
                                    "f_c_dimension": "(*)",
                                    "f_intent": "IN",
                                    "f_kind": "C_INT",
                                    "f_type": "integer(C_INT)",
                                    "f_var": "val",
                                    "rank": "1",
                                    "sh_type": "SH_TYPE_INT",
                                    "size": "size(val)",
                                    "stmt0": "f_setter_native_*",
                                    "stmt1": "f_setter_native",
                                    "stmtc0": "c_setter_native_*",
                                    "stmtc1": "c_setter_native_*"
                                }
                            }
                        },
                        "zz_fmtdict": {
                            "CXX_this": "SHCXX_SH_this",
                            "C_call_list": "SHCXX_SH_this,\t val",
                            "C_name": "SCO_ns2_DataPointer_set_items",
                            "C_name_api": "DataPointer_set_items",
                            "C_prototype": "SCO_datapointer * SH_this,\t int * val",
                            "C_return_type": "void",
                            "F_C_arguments": "SH_this,\t val",
                            "F_C_call": "c_data_pointer_set_items",
                            "F_C_name": "data_pointer_set_items",
                            "F_C_subprogram": "subroutine",
                            "F_arg_c_call": "SH_this,\t val",
                            "F_arguments": "SH_this,\t val",
                            "F_name_api": "data_pointer_set_items",
                            "F_name_function": "data_pointer_set_items",
                            "F_name_generic": "data_pointer_set_items",
                            "F_name_impl": "data_pointer_set_items",
                            "F_subprogram": "subroutine",
                            "field_name": "items",
                            "function_name": "DataPointer_set_items",
                            "stmt0": "f_setter",
                            "stmt1": "f_setter",
                            "stmtc0": "c_setter",
                            "stmtc1": "c_setter",
                            "struct_name": "DataPointer",
                            "wrapped_name": "items"
                        }
                    }
                ],
                "name": "ns2",
                "options": {},
                "scope": "ns2::",
                "scope_file": [
                    "scope",
                    "ns2"
                ],
                "wrap": {
                    "c": true,
                    "fortran": true
                },
                "zz_fmtdict": {
                    "CXX_this_call": "ns2::",
                    "C_header_filename": "wrapscope_ns2.h",
                    "C_impl_filename": "wrapscope_ns2.cpp",
                    "C_name_api": "ns2",
                    "C_name_scope": "ns2_",
                    "F_impl_filename": "wrapfscope_ns2.f",
                    "F_module_name": "scope_ns2_mod",
                    "F_name_api": "ns2",
                    "LUA_this_call": "ns2::",
                    "PY_module_init": "scope_ns2",
                    "PY_module_name": "ns2",
                    "PY_module_scope": "scope.ns2",
                    "PY_this_call": "ns2::",
                    "file_scope": "scope_ns2",
                    "namespace_scope": "ns2::"
                }
            }
        ],
        "scope_file": [
            "scope"
        ],
        "wrap": {
            "c": true,
            "fortran": true
        }
    },
    "symtab": {
        "Class1": "Class1",
        "Class2": "Class2",
        "Color": "enum-Color",
        "ColorEnum": "enum-ColorEnum",
        "enum-Color": "Color",
        "enum-ColorEnum": "ColorEnum",
        "ns1": {
            "Color": "enum-Color",
            "DataPointer": "struct-DataPointer",
            "enum-Color": "ns1::Color",
            "struct-DataPointer": "ns1::DataPointer"
        },
        "ns2": {
            "Color": "enum-Color",
            "DataPointer": "struct-DataPointer",
            "enum-Color": "ns2::Color",
            "struct-DataPointer": "ns2::DataPointer"
        },
        "ns3": {
            "Color": "enum-Color",
            "DataPointer": "struct-DataPointer",
            "enum-Color": "ns3::Color",
            "struct-DataPointer": "ns3::DataPointer"
        }
    },
    "types": {
        "Class1": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "base": "shadow",
            "c_to_cxx": "static_cast<{c_const}Class1 *>\t({c_var}->addr)",
            "c_type": "SCO_Class1",
            "cxx_to_c": "static_cast<{c_const}void *>(\t{cxx_addr}{cxx_var})",
            "cxx_type": "Class1",
            "f_c_module": {
                "--import--": [
                    "SCO_SHROUD_capsule_data"
                ]
            },
            "f_c_module_line": "--import--:SCO_SHROUD_capsule_data",
            "f_c_type": "type(SCO_SHROUD_capsule_data)",
            "f_capsule_data_type": "SCO_SHROUD_capsule_data",
            "f_class": "class(class1)",
            "f_derived_type": "class1",
            "f_module": {
                "scope_mod": [
                    "class1"
                ]
            },
            "f_module_line": "scope_mod:class1",
            "f_module_name": "scope_mod",
            "f_to_c": "{f_var}%cxxmem",
            "f_type": "type(class1)",
            "flat_name": "Class1",
            "impl_header": [],
            "sgroup": "shadow",
            "wrap_header": [
                "typesscope.h"
            ]
        },
        "Class1::Color": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_to_cxx": "static_cast<Class1::Color>({c_var})",
            "c_type": "int",
            "cfi_type": "CFI_type_int",
            "cxx_to_c": "static_cast<int>({cxx_var})",
            "cxx_type": "Class1::Color",
            "f_cast": "int({f_var}, C_INT)",
            "f_kind": "C_INT",
            "f_module": {
                "iso_c_binding": [
                    "C_INT"
                ]
            },
            "f_type": "integer(C_INT)",
            "flat_name": "int",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT"
        },
        "Class2": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "base": "shadow",
            "c_to_cxx": "static_cast<{c_const}Class2 *>\t({c_var}->addr)",
            "c_type": "SCO_Class2",
            "cxx_to_c": "static_cast<{c_const}void *>(\t{cxx_addr}{cxx_var})",
            "cxx_type": "Class2",
            "f_c_module": {
                "--import--": [
                    "SCO_SHROUD_capsule_data"
                ]
            },
            "f_c_module_line": "--import--:SCO_SHROUD_capsule_data",
            "f_c_type": "type(SCO_SHROUD_capsule_data)",
            "f_capsule_data_type": "SCO_SHROUD_capsule_data",
            "f_class": "class(class2)",
            "f_derived_type": "class2",
            "f_module": {
                "scope_mod": [
                    "class2"
                ]
            },
            "f_module_line": "scope_mod:class2",
            "f_module_name": "scope_mod",
            "f_to_c": "{f_var}%cxxmem",
            "f_type": "type(class2)",
            "flat_name": "Class2",
            "impl_header": [],
            "sgroup": "shadow",
            "wrap_header": [
                "typesscope.h"
            ]
        },
        "Class2::Color": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_to_cxx": "static_cast<Class2::Color>({c_var})",
            "c_type": "int",
            "cfi_type": "CFI_type_int",
            "cxx_to_c": "static_cast<int>({cxx_var})",
            "cxx_type": "Class2::Color",
            "f_cast": "int({f_var}, C_INT)",
            "f_kind": "C_INT",
            "f_module": {
                "iso_c_binding": [
                    "C_INT"
                ]
            },
            "f_type": "integer(C_INT)",
            "flat_name": "int",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT"
        },
        "Color": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_to_cxx": "static_cast<Color>({c_var})",
            "c_type": "int",
            "cfi_type": "CFI_type_int",
            "cxx_to_c": "static_cast<int>({cxx_var})",
            "cxx_type": "Color",
            "f_cast": "int({f_var}, C_INT)",
            "f_kind": "C_INT",
            "f_module": {
                "iso_c_binding": [
                    "C_INT"
                ]
            },
            "f_type": "integer(C_INT)",
            "flat_name": "int",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT"
        },
        "ColorEnum": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_to_cxx": "static_cast<ColorEnum>({c_var})",
            "c_type": "int",
            "cfi_type": "CFI_type_int",
            "cxx_to_c": "static_cast<int>({cxx_var})",
            "cxx_type": "ColorEnum",
            "f_cast": "int({f_var}, C_INT)",
            "f_kind": "C_INT",
            "f_module": {
                "iso_c_binding": [
                    "C_INT"
                ]
            },
            "f_type": "integer(C_INT)",
            "flat_name": "int",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT"
        },
        "ns1::Color": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_to_cxx": "static_cast<ns1::Color>({c_var})",
            "c_type": "int",
            "cfi_type": "CFI_type_int",
            "cxx_to_c": "static_cast<int>({cxx_var})",
            "cxx_type": "ns1::Color",
            "f_cast": "int({f_var}, C_INT)",
            "f_kind": "C_INT",
            "f_module": {
                "iso_c_binding": [
                    "C_INT"
                ]
            },
            "f_type": "integer(C_INT)",
            "flat_name": "int",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT"
        },
        "ns1::DataPointer": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "PYN_descr": "PY_DataPointer_array_descr",
            "PY_struct_as": "numpy",
            "base": "struct",
            "c_type": "SCO_datapointer",
            "cfi_type": "CFI_type_struct",
            "cxx_type": "ns1::DataPointer",
            "f_c_module": {
                "--import--": [
                    "data_pointer"
                ]
            },
            "f_derived_type": "data_pointer",
            "f_kind": "data_pointer",
            "f_module": {
                "scope_ns1_mod": [
                    "data_pointer"
                ]
            },
            "f_module_name": "scope_ns1_mod",
            "f_type": "type(data_pointer)",
            "flat_name": "ns1_DataPointer",
            "sgroup": "struct",
            "sh_type": "SH_TYPE_STRUCT"
        },
        "ns2::Color": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_to_cxx": "static_cast<ns2::Color>({c_var})",
            "c_type": "int",
            "cfi_type": "CFI_type_int",
            "cxx_to_c": "static_cast<int>({cxx_var})",
            "cxx_type": "ns2::Color",
            "f_cast": "int({f_var}, C_INT)",
            "f_kind": "C_INT",
            "f_module": {
                "iso_c_binding": [
                    "C_INT"
                ]
            },
            "f_type": "integer(C_INT)",
            "flat_name": "int",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT"
        },
        "ns2::DataPointer": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "PYN_descr": "PY_DataPointer_array_descr",
            "PY_struct_as": "numpy",
            "base": "struct",
            "c_type": "SCO_datapointer",
            "cfi_type": "CFI_type_struct",
            "cxx_type": "ns2::DataPointer",
            "f_c_module": {
                "--import--": [
                    "data_pointer"
                ]
            },
            "f_derived_type": "data_pointer",
            "f_kind": "data_pointer",
            "f_module": {
                "scope_ns2_mod": [
                    "data_pointer"
                ]
            },
            "f_module_name": "scope_ns2_mod",
            "f_type": "type(data_pointer)",
            "flat_name": "ns2_DataPointer",
            "sgroup": "struct",
            "sh_type": "SH_TYPE_STRUCT"
        },
        "ns3::Color": {
            "LUA_pop": "lua_tointeger({LUA_state_var}, {LUA_index})",
            "LUA_push": "lua_pushinteger({LUA_state_var}, {push_arg})",
            "LUA_type": "LUA_TNUMBER",
            "PYN_typenum": "NPY_INT",
            "PY_ctor": "PyInt_FromLong({ctor_expr})",
            "PY_format": "i",
            "PY_get": "PyInt_AsLong({py_var})",
            "base": "integer",
            "c_to_cxx": "static_cast<ns3::Color>({c_var})",
            "c_type": "int",
            "cfi_type": "CFI_type_int",
            "cxx_to_c": "static_cast<int>({cxx_var})",
            "cxx_type": "ns3::Color",
            "f_cast": "int({f_var}, C_INT)",
            "f_kind": "C_INT",
            "f_module": {
                "iso_c_binding": [
                    "C_INT"
                ]
            },
            "f_type": "integer(C_INT)",
            "flat_name": "int",
            "sgroup": "native",
            "sh_type": "SH_TYPE_INT"
        },
        "ns3::DataPointer": {
            "LUA_pop": "\t({LUA_userdata_type} *)\t luaL_checkudata(\t{LUA_state_var}, 1, \"{LUA_metadata}\")",
            "LUA_type": "LUA_TUSERDATA",
            "PYN_descr": "PY_DataPointer_array_descr",
            "PY_struct_as": "numpy",
            "base": "struct",
            "c_type": "SCO_datapointer",
            "cfi_type": "CFI_type_struct",
            "cxx_type": "ns3::DataPointer",
            "f_c_module": {
                "--import--": [
                    "data_pointer"
                ]
            },
            "f_derived_type": "data_pointer",
            "f_kind": "data_pointer",
            "f_module": {
                "scope_ns3_mod": [
                    "data_pointer"
                ]
            },
            "f_module_name": "scope_ns3_mod",
            "f_type": "type(data_pointer)",
            "flat_name": "ns3_DataPointer",
            "sgroup": "struct",
            "sh_type": "SH_TYPE_STRUCT"
        }
    }
}