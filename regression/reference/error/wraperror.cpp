// wraperror.cpp
// This file is generated by Shroud nowrite-version. Do not edit.
// Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
// other Shroud Project Developers.
// See the top-level COPYRIGHT file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
//

// cxx_header
#include "error.hpp"
// shroud
#include "wraperror.h"

// splicer begin CXX_definitions
// splicer end CXX_definitions

extern "C" {

// splicer begin C_definitions
// splicer end C_definitions

// ----------------------------------------
// Function:  void BadFstatements
// Attrs:     +intent(subroutine)
// Statement: c_subroutine
void ERR_BadFstatements(void)
{
    // splicer begin function.BadFstatements
    BadFstatements();
    ===>{no_c_var} = 11;<===
    ===>{bad_format = 12;<===
    // splicer end function.BadFstatements
}

// ----------------------------------------
// Function:  void AssumedRank
// Attrs:     +intent(subroutine)
// Statement: c_subroutine
// ----------------------------------------
// Argument:  int * data
// Attrs:     +intent(inout)
// Statement: c_inout_native_*
void ERR_AssumedRank(int * data)
{
    // splicer begin function.AssumedRank
    AssumedRank(data);
    // splicer end function.AssumedRank
}

// Generated by fortran_generic
// ----------------------------------------
// Function:  void AssumedRank
// Attrs:     +intent(subroutine)
// Statement: f_subroutine
// ----------------------------------------
// Argument:  int * data +rank(0)
// Attrs:     +intent(inout)
// Statement: f_inout_native_*
void ERR_AssumedRank_0d(int * data)
{
    // splicer begin function.AssumedRank_0d
    AssumedRank(data);
    // splicer end function.AssumedRank_0d
}

// Generated by fortran_generic
// ----------------------------------------
// Function:  void AssumedRank
// Attrs:     +intent(subroutine)
// Statement: f_subroutine
// ----------------------------------------
// Argument:  int * data +rank(1)
// Attrs:     +intent(inout)
// Statement: f_inout_native_*
void ERR_AssumedRank_1d(int * data)
{
    // splicer begin function.AssumedRank_1d
    AssumedRank(data);
    // splicer end function.AssumedRank_1d
}

// Generated by fortran_generic
// ----------------------------------------
// Function:  void AssumedRank
// Attrs:     +intent(subroutine)
// Statement: f_subroutine
// ----------------------------------------
// Argument:  int * data +rank(2)
// Attrs:     +intent(inout)
// Statement: f_inout_native_*
void ERR_AssumedRank_2d(int * data)
{
    // splicer begin function.AssumedRank_2d
    AssumedRank(data);
    // splicer end function.AssumedRank_2d
}

}  // extern "C"
