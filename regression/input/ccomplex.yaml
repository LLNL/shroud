copyright:
- Copyright (c) 2017-2023, Lawrence Livermore National Security, LLC and
- other Shroud Project Developers.
- See the top-level COPYRIGHT file for details.
-
- "SPDX-License-Identifier: (BSD-3-Clause)"
-

# Wrap complex in a C library
# Many of the same function as Tutorial, but for C.

# Several tests have a 'char *outbuf+intent(out)' argument
# which will force a C bufferify wrapper to be created.
# The size of this buffer is controlled by lenoutbuf.
# This feature is helpful for the C tests since a C wrapper is not required
# for each function since we do not need to deal with name mangling
# like in C++.

library: ccomplex
cxx_header: ccomplex.h

language: c

options:
  debug: True
  wrap_python: True
  wrap_lua: False
  literalinclude2: True

declarations:

######################################################################
- decl: void acceptFloatComplexInoutPtr(float complex *arg1)
  options:
    wrap_python: False
- decl: void acceptDoubleComplexInoutPtr(double complex *arg1)
- decl: void acceptDoubleComplexOutPtr(double complex *arg1 +intent(out))

- decl: void acceptDoubleComplexInoutPtrFlag(double complex *arg1, int *flag +intent(out))
  options:
    wrap_c: False
    wrap_fortran: False
  doxygen:
   description: |
     Return two values so Py_BuildValue is used.

- decl: void acceptDoubleComplexOutPtrFlag(
            double complex *arg1 +intent(out),
            int *flag +intent(out))
  doxygen:
   description: |
     Return two values so Py_BuildValue is used.
     Creates a Py_complex for intent(out)

######################################################################

#- decl: void acceptDoubleComplexInoutArrayList(
#            double complex *arg1 +rank(1),
#            int narg +implied(size(arg1)))
#  options:
#    PY_array_arg: list
